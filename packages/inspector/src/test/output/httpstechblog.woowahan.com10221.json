{
  "company": {
    "imageUrl": "/companyImages/baemin.png",
    "name": "배달의 민족",
    "href": "https://techblog.woowahan.com/"
  },
  "title": "EKS Anywhere 구축기",
  "createdAt": "\n            Jan.19.2023        ",
  "description": "안녕하세요. 데이터플랫폼팀에서 전사 데이터 플랫폼을 구축, 운영하고 있는 신승엽입니다.2022년에 데이터플랫폼팀에서는 AWS 이관으로 인해 사용성이 줄어든 온프레미스 Hadoop 클러스터 인프라를 재정비하여 MLOps 플랫폼으로 전환하는 프로젝트를 수행하였습니다.MLOps 플랫폼 내 컨테이너를 관리하기 위한 도구로 EKS Anywhere를 채택하였습니다. 이 글에서는 EKS Anywhere의 소개와 함께 구축하면서 마주했던 문제들과 이를 해결한 과정에 대해 공유드리고자 합니다.지난 2021년 우아한테크콘스트(우아콘)에서 발표했던 데이터 분석 플랫폼, 지상계에서 천상계로 배달완료! AWS 이관기 이후 IDC 내에 있던 Hadoop 클러스터의 인프라의 사용성이 사라지면서 인프라 장비들을 다른 목적으로 사용할 수 있는 방안을 고민하기 시작했습니다.때마침 허위 리뷰 방지, 가게 추천 모델링 등 GPU를 활용한 머신러닝, 딥러닝에 사내 수요가 증가하고 있었습니다. 증가하는 수요를 충족시킬만한 사내 온프레미스 환경의 GPU 인프라는 부족하였고, 대안으로 사용 가능한 AWS의 GPU 인스턴스 또한 품귀현상으로 할당받기 어려운 상황이 되었습니다.점점 늘어가는 분석 자원에 대한 수요와 부족한 GPU 인프라의 활용도를 최대한으로 높이고자 기존 온프레미스 인프라를 재활용하여 Kubernetes 클러스터를 구축함으로써 유연하고 확장 가능한 분석 환경과 GPU 인프라를 제공하기로 하였습니다.다양한 Kubernetes 배포판 중 아래의 세 가지의 이유로 AWS에서 배포하고 있는 EKS Anywhere(EKS-A)를 설치하기로 하였습니다.먼저 EKS-A(nywhere)에 대해서 설명드리겠습니다. EKS-A를 한 문장으로 표현하면 “AWS의 Managed Service인 EKS를 고객사 인프라에 직접 설치하여 사용 가능한 제품”이라고 할 수 있는데요.EKS-A는 Kubernetes 배포판으로 온프레미스 환경에 간단하게 생성, 확장, 삭제 등 클러스터의 라이프 사이클을 관리하기 위한 오픈소스로 Ops Tool 과 Amazon EKS의 배포판인 EKS Distro로 구성되어 있습니다.Amzon 은 2021 년 9월, AWS에서 Managed Service로 제공되고 있는 EKS(Elasitc Kubernetes Service)를 VMWare vSphere 환경에서만 배포할 수 있는 최초의 버전을 릴리스하였습니다.그리고 첫 릴리스 이후 채 1년이 지나지 않은 지난 2022년 6월, 베어메탈 환경에서도 배포할 수 있는 버전을 릴리스하였습니다.EKS-A의 전체 구조를 도식화해보면 아래와 같습니다.EKS-A를 통해 배포되는 Kubernetes 배포판인 EKS-D(istro)에서도 간단히 소개해 드리겠습니다.EKS-D는 2020년 12월 Amazon EKS에서 사용 중인 Kubernetes 배포판을 온프레미스(BM, VM) 환경에 설치할 수 있도록 공개한 오픈소스입니다.kubeadm 또는 kops 와 같은 Kubernetes 설치 도구를 통해 설치 가능하며 가장 최신 버전으로는 v1.24가 릴리스되어 있습니다.그럼 EKS-A는 관리형 서비스인 EKS 와는 어떤 차이점들이 있을까요?\n아래 표는 EKS-A 와 EKS의 차이를 나타내고 있습니다. 가장 큰 차이는 Kubernetes 클러스터를 AWS에서 관리해 주는지 고객이 직접 관리하는지 일 것입니다.EKS-A의 특징은 오픈소스 형태로 배포되고 있으며, 고객사의 인프라에 설치되고 고객이 직접 관리하지만 필요에 따라 유료 구독 서비스를 통해 기술 지원을 받을 수 있다는 점입니다. EKS-A를 사용해 보고 싶지만 직접 운영하는 것에 대한 부담을 느끼는 사용자에겐 좋은 옵션이 될 것 같습니다.EKS-A 와 EKS-D에 대해 알아보았습니다. 지금부터는 EKS-A의 내부 구조가 어떻게 되어 있고, 어떠한 설치 과정을 통해 온프레미스 환경에 Kubernetes 클러스터를 구축하는지 좀 더 구체적으로 살펴보겠습니다.아래 그림은 온프레미스 환경에 EKS-A를 이용하여 Kubernetes 클러스터를 배포할 때 실행되는 컴포넌트들을 표현한 것입니다.EKS-A를 설치하기 위해서는 목적에 따라 3가지 유형의 노드들이 필요합니다.각 노드들에서 실행되는 컴포넌트들은 다음과 같은데요.이 외에도 Kubernetes의 필수 동작을 위해 다양한 컴포넌트들이 Control Plane 노드에 배치됩니다.위에서 설명드린 EKS-A 클러스터의 상세 설치 과정을 토대로 실제 사용자 입장에서 설치하는 과정을 살펴보겠습니다. 내부 상세 구조는 굉장히 복잡해 보였지만 실제 설치 과정은 2가지의 설정 파일을 생성하고, 설치 명령어를 수행하기만 하면 되는 아주 간단한 과정입니다.이미 구성이 완료된 클러스터에 노드를 추가하는 방법 또한 설치와 마찬가지로 굉장히 간단합니다.먼저 신규 노드의 정보가 포함된 하드웨어 목록 파일을 신규 설치 때와 동일하게 CSV 포맷으로 작성합니다.지금까지의 설명만 보면 EKS-A는 너무나도 편리하고 완벽한 도구처럼 보입니다. 아직 1.0 버전이 릴리스되지 않아서일까요?실제 베어메탈 환경에서 EKS-A를 설치해 보면서 많은 문제들을 마주할 수 있었습니다. 지금부터는 EKS-A를 실제 운영 환경에 설치하면서 발생하였던 문제들을 해결해나갔던 과정들을 공유드리고자 합니다.먼저 클러스터 배포 설정을 위한 Manifest 파일에서 지원하는 구성이 베어메탈 환경에서는 아직까지 많이 부족합니다. 아래는 EKS-A의 공식 사이트에서 vSphere 환경에서 배포했을 때와 베어메탈 환경에서 배포했을 때 Manifest 파일을 통하여 최초 배포 시 설정할 수 있는 기능들에 대한 설명입니다.위 캡처화면에서 볼 수 있듯이 vSphere는 모든 구성들을 최초 배포 시 Manifest 파일 설정을 통해 자동화할 수 있습니다. 그러나 베어메탈 은 공식적으로 네트워크 플로그인인 CNI만 지원하고 있습니다.(문서에는 나와있지는 않지만 일부 기능은 현재도 Manifest 설정을 통해 구성 가능하며, 배포 후 수동으로도 설정 가능한 경우도 있습니다).이 부분은 앞으로 신규 버전들이 계속 릴리스 됨에 따라 추가될 것이라고 생각되지만 아직까지는 EKS-A를 통해 얻을 수 있는 장점들을 베어메탈 환경에서는 온전히 누릴 수 없습니다.이 외에도 EKS-A에서 제공하는 클러스터 관리 기능들 중 베어메탈에서 지원하지 않는 기능들도 존재합니다.위 기능들은 vShpere 환경에서는 역시 지원하는 것들입니다. vSphere 기반의 EKS-A 먼저 출시되었기 때문에 당연하지만 베어메탈도 빨리 동일한 기능들이 지원되길 바라봅니다.AWS IAM AuthenticatorAWS IAM Authenticator는 Kubernetes 클러스터의 인증을 AWS 계정을 통해 수행할 수 있도록 지원하는 도구입니다.IAM for PodIAM for Pod는 흔히 IRSA(IAM Roles for Service Account)라고도 하는데요. 이미 EKS에서 제공하고 있는 기능으로 AWS IAM의 Role 과 Kubernetes의 Service Account를 매핑하여 Service Account에 IAM Role 이 가지는 권한을 그대로 사용할 수 있게 해주는 기능입니다.AWS 외부 시스템에서 AWS 서비스에 접근하기 위해서는 Access/Secret Key를 발급하여 권한을 획득할 수 있었는데요. Access/Secret Key는 처음 발급할 때 이외에는 다시 확인할 방법이 없기 때문에 분실의 위험이 있고, 타인에게 유출되면 모든 권한을 탈취당할 수 있는 취약점을 가지고 있습니다. 그러나 IAM for Pod 기능을 사용하면 더 이상 키 발급 없이 IAM 권한을 Kubernetes 클러스터에서도 사용할 수 있으므로 키 관리에 대한 번거로움과 취약점을 해결할 수 있습니다.Kubernetes 클러스터에서 AWS S3의 데이터에 접근하는 Workload 가 많은 곳에서는 굉장히 유용한 기능일 것입니다.Ubuntu 이미지 미제공EKS-A는 각 노드에 설치할 운영체제로 Amazon에서 배포하는 컨테이너 환경을 위한 경량화 리눅스인 Bottlerocket 과 Ubuntu를 지원하고 있으며 해당 운영체제들의 배포판을 제공하고 있었습니다.지금까지 설치 과정에서 마주했던 여러 문제들 중 일부의 해결 방안에 대해 공유하였습니다. 예상치 못한 문제들을 마주했지만 다행히도 EKS-A의 Github 저장소 내 이슈 게시판에서는 버그 리포팅이나 설치 중 발생하는 예외 상황에 대한 문의에 기술 지원 구독을 하고 있지 않음에도 신속하게 대응해 주고 있어 많은 도움을 받을 수 있었습니다.MLOps 환경을 Baremetal 환경에 구축하기 위해 여러 Kubernetes 배포판 중 저희 상황에서 가장 쓰기 적합하다고 생각한 EKS-A를 선택하고 실제 운영환경에 구축을 해보았습니다. 생각보다는 많은 우여곡절 끝에 원하는 수준의 구성 상태로 설치를 완료할 수 있었습니다.팀에서 이미 AWS에 EKS를 배포하고 운영하고 있었던 터라 비록 베어메탈 환경이지만 EKS를 모태로 하는 EKS-A에 대해 설치 및 운영 편의성면에서 많은 기대를 했었습니다.하지만 출시된 지 얼마 되지 않았고, 아직 버전도 v0.x.x에 머무르고 있어서인지 기대했던 만큼의 만족도를 주지는 못하였습니다. 특히 Managed Kubernetes처럼 한 번의 CLI 수행을 통해 Kubernetes 버전을 업그레이드할 수 있는 기능이 아직 베어메탈 환경에서 제공되지 않는 점이 특히 아쉬웠습니다.그럼에도 불구하고 AWS 와 연동하여 사용할 수 있는 기능들을 제공하고, 설치 과정이 매우 간단하며 Tinkerbell을 통해 운영체제 설치부터 모두 자동화되어 있는 부분은 인상 깊었습니다.vSphere 환경에서 제공하고 있는 EKS-A의 모든 기능들이 하루빨리 베어메탈에도 추가되길 기대합니다.",
  "href": "https://techblog.woowahan.com/10221/"
}
