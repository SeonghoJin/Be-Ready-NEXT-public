<!DOCTYPE html><html lang="ko"><head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0">

    <title>모던 프론트엔드 프로젝트 구성 기법 - 모노레포 도구 편</title>

    <link rel="stylesheet" type="text/css" href="/static/XEIcon/xeicon.min.css">
    <link rel="stylesheet" type="text/css" href="/static/katex/katex.min.css">
    <link rel="stylesheet" type="text/css" href="/static/css/naver_d2.from_server.css?1671783335538">
<link href="/static/css/app.css?13c1e9311ca34225bfc0" rel="stylesheet"><script src="https://connect.facebook.net/ko_KR/sdk.js?hash=7e899826b14713274cda099ad43b215a" async="" crossorigin="anonymous"></script><script type="text/javascript" charset="utf-8" src="https://ssl.pstatic.net/static.cbox/js/cbox.core.js?v=1399068"></script><style type="text/css" id="_cbox_default_style_"></style><script type="text/javascript" src="https://ssl.pstatic.net/static.cbox/20230309172524/js/cbox.all.js" charset="utf-8"></script><link type="text/css" rel="stylesheet" href="https://static-feedback.pstatic.net/css/cbox/cbox/ebb46c9a-246d-48cd-acc6-cf3892caf38d/3ed9c21a-1c97-4c94-aeeb-70cc581fb6a5/css/comment_default.css" charset="utf-8"><style type="text/css" data-fbcssmodules="css:fb.css.base css:fb.css.dialog css:fb.css.iframewidget css:fb.css.customer_chat_plugin_iframe">.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_reposition{overflow:hidden;position:relative}.fb_invisible{display:none}.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:'lucida grande', tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}@keyframes fb_transform{from{opacity:0;transform:scale(.95)}to{opacity:1;transform:scale(1)}}.fb_animate{animation:fb_transform .3s forwards}
.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_reposition{overflow:hidden;position:relative}.fb_invisible{display:none}.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:'lucida grande', tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}@keyframes fb_transform{from{opacity:0;transform:scale(.95)}to{opacity:1;transform:scale(1)}}.fb_animate{animation:fb_transform .3s forwards}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}.fb_dialog_advanced{border-radius:8px;padding:10px}.fb_dialog_content{background:#fff;color:#373737}.fb_dialog_close_icon{background:url(https://connect.facebook.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px}.fb_dialog_mobile .fb_dialog_close_icon{left:5px;right:auto;top:5px}.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}.fb_dialog_close_icon:hover{background:url(https://connect.facebook.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent}.fb_dialog_close_icon:active{background:url(https://connect.facebook.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent}.fb_dialog_iframe{line-height:0}.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #365899;color:#fff;font-size:14px;font-weight:bold;margin:0}.fb_dialog_content .dialog_title>span{background:url(https://connect.facebook.net/rsrc.php/v3/yd/r/Cou7n-nqK52.gif) no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}body.fb_hidden{height:100%;left:0;margin:0;overflow:visible;position:absolute;top:-10000px;transform:none;width:100%}.fb_dialog.fb_dialog_mobile.loading{background:url(https://connect.facebook.net/rsrc.php/v3/ya/r/3rhSv5V8j3o.gif) white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}.fb_dialog.fb_dialog_mobile.loading.centered{background:none;height:auto;min-height:initial;min-width:initial;width:auto}.fb_dialog.fb_dialog_mobile.loading.centered #fb_dialog_loader_spinner{width:100%}.fb_dialog.fb_dialog_mobile.loading.centered .fb_dialog_content{background:none}.loading.centered #fb_dialog_loader_close{clear:both;color:#fff;display:block;font-size:18px;padding-top:20px}#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .4);bottom:0;left:0;min-height:100%;position:absolute;right:0;top:0;width:100%;z-index:10000}#fb-root #fb_dialog_ipad_overlay.hidden{display:none}.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}.fb_dialog_mobile .fb_dialog_iframe{position:sticky;top:0}.fb_dialog_content .dialog_header{background:linear-gradient(from(#738aba), to(#2c4987));border-bottom:1px solid;border-color:#043b87;box-shadow:white 0 1px 1px -1px inset;color:#fff;font:bold 14px Helvetica, sans-serif;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}.fb_dialog_content .dialog_header table{height:43px;width:100%}.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px}.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px}.fb_dialog_content .touchable_button{background:linear-gradient(from(#4267B2), to(#2a4887));background-clip:padding-box;border:1px solid #29487d;border-radius:3px;display:inline-block;line-height:18px;margin-top:3px;max-width:85px;padding:4px 12px;position:relative}.fb_dialog_content .dialog_header .touchable_button input{background:none;border:none;color:#fff;font:bold 12px Helvetica, sans-serif;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}.fb_dialog_content .dialog_content{background:url(https://connect.facebook.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #4a4a4a;border-bottom:0;border-top:0;height:150px}.fb_dialog_content .dialog_footer{background:#f5f6f7;border:1px solid #4a4a4a;border-top-color:#ccc;height:40px}#fb_dialog_loader_close{float:left}.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}#fb_dialog_loader_spinner{animation:rotateSpinner 1.2s linear infinite;background-color:transparent;background-image:url(https://connect.facebook.net/rsrc.php/v3/yD/r/t-wz8gw1xG1.png);background-position:50% 50%;background-repeat:no-repeat;height:24px;width:24px}@keyframes rotateSpinner{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
.fb_iframe_widget{display:inline-block;position:relative}.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}.fb_iframe_widget iframe{position:absolute}.fb_iframe_widget_fluid_desktop,.fb_iframe_widget_fluid_desktop span,.fb_iframe_widget_fluid_desktop iframe{max-width:100%}.fb_iframe_widget_fluid_desktop iframe{min-width:220px;position:relative}.fb_iframe_widget_lift{z-index:1}.fb_iframe_widget_fluid{display:inline}.fb_iframe_widget_fluid span{width:100%}
.fb_mpn_mobile_landing_page_slide_out{animation-duration:200ms;animation-name:fb_mpn_landing_page_slide_out;transition-timing-function:ease-in}.fb_mpn_mobile_landing_page_slide_out_from_left{animation-duration:200ms;animation-name:fb_mpn_landing_page_slide_out_from_left;transition-timing-function:ease-in}.fb_mpn_mobile_landing_page_slide_up{animation-duration:500ms;animation-name:fb_mpn_landing_page_slide_up;transition-timing-function:ease-in}.fb_mpn_mobile_bounce_in{animation-duration:300ms;animation-name:fb_mpn_bounce_in;transition-timing-function:ease-in}.fb_mpn_mobile_bounce_out{animation-duration:300ms;animation-name:fb_mpn_bounce_out;transition-timing-function:ease-in}.fb_mpn_mobile_bounce_out_v2{animation-duration:300ms;animation-name:fb_mpn_fade_out;transition-timing-function:ease-in}.fb_customer_chat_bounce_in_v2{animation-duration:300ms;animation-name:fb_bounce_in_v2;transition-timing-function:ease-in}.fb_customer_chat_bounce_in_from_left{animation-duration:300ms;animation-name:fb_bounce_in_from_left;transition-timing-function:ease-in}.fb_customer_chat_bounce_out_v2{animation-duration:300ms;animation-name:fb_bounce_out_v2;transition-timing-function:ease-in}.fb_customer_chat_bounce_out_from_left{animation-duration:300ms;animation-name:fb_bounce_out_from_left;transition-timing-function:ease-in}.fb_invisible_flow{display:inherit;height:0;overflow-x:hidden;width:0}@keyframes fb_mpn_landing_page_slide_out{0%{margin:0 12px;width:100% - 24px}60%{border-radius:18px}100%{border-radius:50%;margin:0 24px;width:60px}}@keyframes fb_mpn_landing_page_slide_out_from_left{0%{left:12px;width:100% - 24px}60%{border-radius:18px}100%{border-radius:50%;left:12px;width:60px}}@keyframes fb_mpn_landing_page_slide_up{0%{bottom:0;opacity:0}100%{bottom:24px;opacity:1}}@keyframes fb_mpn_bounce_in{0%{opacity:.5;top:100%}100%{opacity:1;top:0}}@keyframes fb_mpn_fade_out{0%{bottom:30px;opacity:1}100%{bottom:0;opacity:0}}@keyframes fb_mpn_bounce_out{0%{opacity:1;top:0}100%{opacity:.5;top:100%}}@keyframes fb_bounce_in_v2{0%{opacity:0;transform:scale(0, 0);transform-origin:bottom right}50%{transform:scale(1.03, 1.03);transform-origin:bottom right}100%{opacity:1;transform:scale(1, 1);transform-origin:bottom right}}@keyframes fb_bounce_in_from_left{0%{opacity:0;transform:scale(0, 0);transform-origin:bottom left}50%{transform:scale(1.03, 1.03);transform-origin:bottom left}100%{opacity:1;transform:scale(1, 1);transform-origin:bottom left}}@keyframes fb_bounce_out_v2{0%{opacity:1;transform:scale(1, 1);transform-origin:bottom right}100%{opacity:0;transform:scale(0, 0);transform-origin:bottom right}}@keyframes fb_bounce_out_from_left{0%{opacity:1;transform:scale(1, 1);transform-origin:bottom left}100%{opacity:0;transform:scale(0, 0);transform-origin:bottom left}}@keyframes slideInFromBottom{0%{opacity:.1;transform:translateY(100%)}100%{opacity:1;transform:translateY(0)}}@keyframes slideInFromBottomDelay{0%{opacity:0;transform:translateY(100%)}97%{opacity:0;transform:translateY(100%)}100%{opacity:1;transform:translateY(0)}}</style></head>

<body>
<div id="wrap" class="main"><div><div id="header"><div class="main_lnb"><div class="progress_bar" style="height: 2px; background-color: rgb(50, 205, 160); width: 0px;"></div><div class="header_sec"><div class="inner_sec"><div class="lnb" id="lnb"><h1><a class="lnb_top_logo" href="/home"><span class="blind">naver D2</span></a></h1><div class="menu_sec"><div class="btn_lnb_menu"><a href="#"><span class="blind">메뉴</span></a></div><div style="height: 0px; transition: all 0.5s ease 0s;"><ul><li class="on"><a href="/helloworld">Hello world</a></li><li class=""><a href="/news">D2 News</a></li><li class=""><a href="/program">D2 Program</a></li><li class=""><a href="/about">About D2</a></li></ul></div></div><div><div class="m_search_sec"><div class="btn_lnb_search"><a href="#"><span class="blind">검색</span></a></div><form action="/" style="height: 0px; transition: all 0.5s ease 0s;"><input type="text" value="" placeholder="D2에서 검색" class="search_area"><button type="sunmit" class="blind"><i class="xi-search"></i></button></form></div><div class="pc_search_input"><fieldset><legend>검색</legend><form action="/"><input type="text" value="" placeholder="D2에서 검색" class="search_area"><button type="sunmit" class="btn_search"><i class="xi-search"></i></button></form></fieldset></div></div></div></div></div></div></div><div id="container"><div class="con_area"><div class="contents detail_view"><div class="post_article"><div class="cont_post"><h1 class="posting_tit">모던 프론트엔드 프로젝트 구성 기법 - 모노레포 도구 편</h1><dl class="post_info"><dt><i class="xi-time-o"><span class="blind">등록일</span></i></dt><dd>2022.04.18</dd><dt><span class="blind">|</span></dt><dd><span class="line_bar">|</span></dd><dt><i class="xi-eye"><span class="blind">코멘트</span></i></dt><dd>25797</dd></dl><div class="con_view"><p>이 글에서는 모노레포 개념 편에 이어 Yarn, Lerna, Nx 그리고 Turborepo 도구에 대해 자세히 소개해 드리려고 합니다.</p>

<ol>
<li><a href="#ch1">Yarn</a>  </li>
<li><a href="#ch2">Lerna</a>  </li>
<li><a href="#ch3">Nx</a>  </li>
<li><a href="#ch4">Turborepo</a></li>
</ol>

<p><a id="ch1"></a></p>

<h2 id="1yarn">1. Yarn</h2>

<h3 id="yarn1x">Yarn 1.x</h3>

<p><a href="https://classic.yarnpkg.com/en/docs/cli/">https://classic.yarnpkg.com/en/docs/cli/</a></p>

<p><a href="https://classic.yarnpkg.com/lang/en/docs/workspaces/">Yarn(1.x)</a> 또는 <a href="https://docs.npmjs.com/cli/v7/using-npm/workspaces">npm(7.x)</a>의 <a href="https://yarnpkg.com/features/workspaces">workspaces</a> 필드를 사용해 간단히 <a href="https://yarnpkg.com/advanced/lexicon#monorepository">모노레포</a>를 구성할 수 있다. <a href="https://classic.yarnpkg.com/en/docs/cli/link">yarn link</a> 또는 <a href="https://docs.npmjs.com/cli/v8/commands/npm-link">npm link</a> 기능을 선언적으로 사용하는 것으로 node_modules 디렉터리에 workspace에 대한 <strong>심볼릭 링크</strong>가 생성된다. 이를 통해 하나의 저장소에 있는 여러 프로젝트가 서로 쉽게 상호 참조할 수 있다.</p>

<h4 id="">용어</h4>

<ul>
<li>project
<ul><li>= 저장소</li>
<li>하나 이상의 worktree 포함</li>
<li>최소 한 개의 workspace(즉, 루트 workspace) 존재</li></ul></li>
<li>workspace
<ul><li>= 모노레포 패키지</li></ul></li>
<li>worktree
<ul><li>자식 workspace를 갖는 workspace</li></ul></li>
</ul>

<h4 id="worktree">worktree 선언</h4>

<p>worktree를 구성하는 workspace의 위치를 glob 패턴의 배열로 나타낸다. 예를 들어 packages 폴더 내의 모든 폴더가 workspace가 되도록 하려면 다음과 같이 설정한다.</p>

<pre><code class="language-json hljs">{
    <span class="hljs-attr">"private"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"workspaces"</span>: [<span class="hljs-string">"packages/*"</span>]
}
</code></pre>

<blockquote>
  <p>Yarn 1.x에서는 <code>private: true</code> 필드값이 필수지만 2.x 이상에서는 필수가 아니다.</p>
</blockquote>

<h4 id="workspace">workspace 추가</h4>

<p>그림과 같이 <code>client</code>, <code>server</code>, <code>common</code> 세 개의 workspace를 추가하고 루트 경로에서 <code>yarn</code> 명령을 실행하면 루트 경로에 <code>node_modules</code> 디렉터리에 workspace들에 대한 <strong>심볼릭 링크</strong>가 생성된다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa4a463e5fbd.png" alt=""></p>

<h4 id="workspace">workspace에 대한 명령 실행</h4>

<p><a href="https://classic.yarnpkg.com/en/docs/cli/workspace">특정 workspace에 정의된 스크립트를 실행</a>한다.</p>

<pre><code class="hljs xml">yarn workspace <span class="hljs-tag">&lt;<span class="hljs-name">WORKSPACE_NAME</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">COMMAND_NAME</span>&gt;</span>  
</code></pre>

<h4 id="workspace">workspace를 의존성으로 추가</h4>

<p><code>client</code> 패키지가 <code>common</code> 패키지를 의존하게 하려면 package.json에 의존성을 명시하거나 바로 위에서 설명한 yarn workspace 명령을 이용하면 된다.</p>

<pre><code class="hljs css"><span class="hljs-selector-tag">yarn</span> <span class="hljs-selector-tag">workspace</span> <span class="hljs-selector-tag">client</span> <span class="hljs-selector-tag">add</span> <span class="hljs-selector-tag">common</span>@<span class="hljs-keyword">1</span>.<span class="hljs-keyword">0</span>.<span class="hljs-keyword">0</span>  
</code></pre>

<p>npm 레지스트리에 publish된 <code>common</code>이란 이름의 패키지가 있다 해도, 의존성 버전을 충족한다면 로컬에 존재하는 <code>common</code> workspace를 우선하여 설치한다.</p>

<p><code>client</code>에서 <code>common</code> 의존성을 잘 부르는지 확인하기 위해 다음 명령을 실행해 보면 <code>common</code>의 <code>hello()</code> 함수가 <code>client</code>에서 잘 호출되는 것을 확인할 수 있다.</p>

<pre><code class="hljs dockerfile">yarn workspace client <span class="hljs-keyword">run</span><span class="bash"> start  
</span></code></pre>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa4ac5e45fcc.png" alt=""></p>

<h4 id="workspace">workspace 의존 관계 확인</h4>

<p><a href="https://classic.yarnpkg.com/en/docs/cli/workspaces">yarn workspace info</a> 명령을 실행해 workspace들의 의존 관계를 알아볼 수 있다.</p>

<blockquote>
  <p>Yarn 2.x 이후에는 <a href="https://yarnpkg.com/cli/workspaces/list">yarn workspaces list</a>를 사용한다.</p>
</blockquote>

<pre><code class="hljs nginx"><span class="hljs-attribute">yarn</span> workspaces <span class="hljs-literal">info</span>  
</code></pre>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa4b386f670d.png" alt=""></p>

<h4 id="workspace">모든 workspace에 대해 명령 실행</h4>

<p><a href="https://classic.yarnpkg.com/en/docs/cli/workspaces">yarn workspaces run \<command\></command\></a>를 사용하면 모든 workspace에 대해 명령을 실행할 수 있다. 다음 명령은 모든 workspace들을 순회하며 test 스크립트를 실행한다.</p>

<pre><code class="hljs dockerfile">yarn workspaces <span class="hljs-keyword">run</span><span class="bash"> <span class="hljs-built_in">test</span>  
</span></code></pre>

<blockquote>
  <p>Yarn 2.x 이후에는 <a href="https://yarnpkg.com/cli/workspaces/foreach">yarn workspaces foreach \<command\></command\></a>를 사용한다.</p>
</blockquote>

<h4 id="">루트 프로젝트에 의존성 추가</h4>

<p>workspace가 아니라 루트 프로젝트에 의존성을 추가하려면 다음 명령을 실행한다.</p>

<pre><code class="hljs dockerfile">yarn <span class="hljs-keyword">add</span><span class="bash"> &lt;PACKAGE_NAME&gt; -W  
</span></code></pre>

<h4 id="">호이스팅(의존성 끌어올리기)</h4>

<p>npm, yarn 등은 중복 의존성 설치를 방지하기 위해 <a href="https://classic.yarnpkg.com/blog/2018/02/15/nohoist/">호이스팅(hosting)</a> 기법을 사용한다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa4cd0ca7890.png" alt=""></p>

<p>(그림 출처: <a href="https://classic.yarnpkg.com/blog/2018/02/15/nohoist/">https://classic.yarnpkg.com/blog/2018/02/15/nohoist/</a>)</p>

<p>모노레포에서의 구조는 다음과 같다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa4d9bce0677.png" alt=""></p>

<p>일부 모듈 로더는 <a href="https://github.com/facebook/metro/issues/1">심볼릭 링크</a>를 지원하지 않기 때문에 B(2.0)을 탐색할 수 없다. 이때는 <a href="https://classic.yarnpkg.com/blog/2018/02/15/nohoist/">nohoist</a> 필드를 사용하면 된다.</p>

<pre><code class="language-json hljs">{
    <span class="hljs-attr">"workspaces"</span>: {
        <span class="hljs-attr">"packages"</span>: [<span class="hljs-string">"packages/*"</span>],
        <span class="hljs-attr">"nohoist"</span>: [ <span class="hljs-string">"**/react-native"</span> ]
    }
}
</code></pre>

<p>그 외의 Yarn 1.x에 대한 명령어는 <a href="https://classic.yarnpkg.com/en/docs/cli/">CLI Introduction</a>에서 확인할 수 있다.</p>

<h3 id="yarnberry2x3x">Yarn Berry (2.x, 3.x)</h3>

<p><a href="https://yarnpkg.com/cli">https://yarnpkg.com/cli</a></p>

<p>Yarn workspace를 도입하려고 할 때 성능면에서 Yarn Berry를 함께 검토해 볼 수 있다. Yarn Berry는 yarn의 두 번째 버전으로, 2018년 9월 yarn의 <a href="https://github.com/yarnpkg/rfcs">RFC 저장소</a>에서 시작되었다. Yarn 1.x의 주요 개발자인 Mael Nison에 의해 TypeScript로 개발되었고 2020년 1월 25일 <a href="https://dev.to/arcanis/introducing-yarn-2-4eh1">정식 버전이 출시</a>되었다. Yarn 1.x는 <a href="https://github.com/yarnpkg/yarn">v1.22.17에서 코드 프리징</a>되었고 <a href="https://github.com/yarnpkg/berry">https://github.com/yarnpkg/berry</a> 에서 2022.03.09 현재 v3.2.0이 출시되었다.</p>

<h4 id="node_modules">node_modules의 문제점</h4>

<ul>
<li><p>의존성 탐색 알고리즘의 비효율</p>

<p>node.js에서 <code>require()</code> 함수를 실행하면 모듈을 찾을 때까지 상위 node_modules 디렉터리를 순회한다. 이때 <a href="https://github.com/nodejs/node/blob/24fc302eadf64d2518733a2ae40355916e6990f7/lib/internal/modules/cjs/loader.js#L321-L336">느린 디스크 I/O 동작</a>이 경로의 깊이만큼 발생한다.</p></li>
<li><p>저장 공간과 설치 시간</p>

<p>node_modules 디렉터리는 흔히 매우 큰 공간을 필요로 하고, 그만큼 설치에도 오랜 시간이 걸린다.</p></li>
<li><p>유령 의존성(phantom dependency)</p>

<p>의존성 중복 방지를 위해 호이스팅 기법을 이용하는데 이것은 의도치 않은 side effect을 발생시킨다. 아래 그림에서 <strong>package-1은 B(1.0)을 설치한 적이 없지만 require('B')가 작동한다</strong>. require('B')를 사용하는 경우 B(1.0)을 의존하던 패키지를 제거하면 B를 찾지 못하는 오류가 발생한다.</p></li>
</ul>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa4f08550681.png" alt=""></p>

<h4 id="yarnberrypnp">Yarn Berry의 해결 방법 PnP</h4>

<p>어떤 프로젝트를 구성하는 의존성은 결정적(deterministic)이다. Berry는 node_modules에 패키지 파일을 저장하는 대신 패키지의 압축 파일을 <code>.yarn/cache</code> 폴더에 수평적으로 저장하는 방식으로 위 문제를 해결했다. 이 방식을 Yarn은 Plug’n’Play(PnP)라고 부른다. 압축 파일은 ZipFS를 이용하며 해당 모듈 로드가 필요할 때 메모리에서 압축을 해제하여 접근한다.</p>

<h4 id="pnp">PnP로 얻는 것</h4>

<ul>
<li><p>빠른 의존성 검색</p>

<p>의존성이 <code>.yarn/cache</code>에 수평적으로 존재하므로 모든 패키지에 대한 접근 시간이 O(1)이 된다. 따라서 <code>require()</code>에 소요되는 시간이 크게 단축된다.</p></li>
<li><p>빠른 설치</p>

<p>압축 파일 단위로 설치되기 때문에 의존성을 구성하는 파일의 수가 절대적으로 감소한다. 여기에 <a href="https://yarnpkg.com/features/zero-installs">zero-install</a> 전략을 사용하면 아예 설치 과정을 생략할 수 있다.</p></li>
<li><p>유령 의존성 방지</p>

<p>호이스팅을 사용하지 않기 때문에 의도하지 않은 의존성이 발생하지 않는다.</p></li>
</ul>

<h4 id="zeroinstall">zero-install 전략</h4>

<p><a href="https://github.com/yarnpkg/berry/tree/master/.yarn/cache">https://github.com/yarnpkg/berry/tree/master/.yarn/cache</a></p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa4f85570687.png" alt=""></p>

<p>하나의 압축 파일로 의존성을 관리하고 이 파일을 git으로 관리하면 설치 과정을 제거할 수 있는데 이와 같은 전략을 zero-install이라 한다. 이 전략의 장점은 다음과 같다.</p>

<ul>
<li>다른 브랜치에서 새로운 의존성이 설치되었을 때 설치 과정 없이 바로 사용할 수 있다.</li>
<li>CI에서 의존성 설치에 드는 시간을 크게 줄일 수 있다.</li>
</ul>

<h4 id="">오프라인 캐시</h4>

<p>네트워크가 다운되었을 때에도 Yarn이 제대로 작동하도록 하는 기능이다. 자세한 기능은 <a href="https://yarnpkg.com/features/offline-cache">Offline Cache</a>를 참고한다.</p>

<h4 id="">사용 방법</h4>

<p>간단히 사용 방법을 살펴보자.</p>

<pre><code class="hljs gams"><span class="hljs-symbol">$</span> npm install -g yarn
<span class="hljs-symbol">$</span> cd ../path/to/your-package
<span class="hljs-symbol">$</span> yarn init -y
<span class="hljs-symbol">$</span> yarn <span class="hljs-keyword">set</span> version <span class="hljs-comment">berry</span>
</code></pre>

<p>아래와 같은 초기 파일이 생성된다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa4ff99a07dd.png" alt=""></p>

<p><strong>해당 디렉터리에서 Yarn 버전을 살펴보면</strong> 1.x가 아닌 것을 확인할 수 있다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa503aca09ad.png" alt=""></p>

<p>의존성을 추가하면 <code>.yarn/cache</code> 경로에 추가된다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa5088b009b5.png" alt=""></p>

<h4 id="pnpcjs">.pnp.cjs</h4>

<p><code>.pnp.cjs</code> 파일에는 모든 의존성에 대한 메타 정보(zip 경로, 의존성)와 함께 ZipFS에 대한 처리 코드가 들어있다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa56ebc6393d.png" alt=""></p>

<p>따라서 Berry 기반의 프로젝트는 <code>node src/main.js</code>와 같은 명령으로는 실행할 수 없고 <code>yarn node src/main.js</code>와 같이 Yarn을 통해서 실행해야 한다.</p>

<pre><code class="language-json hljs">{
    <span class="hljs-attr">"scripts"</span>: {
        <span class="hljs-attr">"start"</span>: <span class="hljs-string">"node src/main.js"</span>
    }
}
</code></pre>

<p>위와 같이 package.json에 스크립트 명령을 작성한 경우에는 <code>yarn start</code> 명령을 사용할 수 있다.</p>

<p><a id="ch2"></a></p>

<h2 id="2lerna">2. Lerna</h2>

<p><a href="https://lerna.js.org/">https://lerna.js.org/</a></p>

<p>Lerna는 <a href="https://www.npmjs.com/package/lerna/v/1.0.1">Babel 개발자</a>에 의해 개발되어 2015년부터 <a href="https://lerna.js.org/#users">다수의 프로젝트</a>에서 모노레포 관리 도구로 사용되어 왔다. 2022년 5월 현재 Nx의 개발사인 <a href="https://nrwl.io/">Nrwl</a>이 <a href="https://github.com/lerna/lerna/issues/3121">프로젝트 관리 권한을 인수</a>했다.</p>

<p>Lerna는 저수준의 Yarn, npm 위에 있는 고수준 레이어로 볼 수 있다. Yarn으로 모노레포를 구성할 수는 있지만 여러 workspace의 버전 관리, 테스트, 빌드, 배포, 게시 등의 작업은 일일이 구성해야 한다. Lerna는 이러한 작업을 최적화한다.</p>

<h3 id="lerna">Lerna 기반 프로젝트 생성</h3>

<p>CLI를 쉽게 사용하기 위해 글로벌로 설치한다.</p>

<pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> install --<span class="hljs-built_in">global</span> lerna  
</code></pre>

<p>프로젝트를 Lerna로 초기화한다.</p>

<pre><code class="hljs dos"><span class="hljs-built_in">cd</span> <span class="hljs-built_in">path</span>/to/your-project  
lerna init  
</code></pre>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa5745f246a6.png" alt=""></p>

<p>다음과 같이 초기 디렉터리가 구성된다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa57954a46ac.png" alt=""></p>

<h3 id="lernajson">lerna.json</h3>

<ul>
<li><code>version</code>: 각 workspace에 대한 버전을 관리할 수 있다. 개별로 관리하고자 할 때는 "independent"를 입력한다.</li>
<li><code>npmClient</code>: "npm" 또는 "yarn"</li>
<li><code>useWorkspaces</code>: npmClient의 workspace로 관리되도록 한다.</li>
</ul>

<h3 id="workspace">workspace 추가</h3>

<p>다음 명령을 실행해 새로운 workspace를 스캐폴딩할 수 있다.</p>

<pre><code class="hljs sql">lerna <span class="hljs-keyword">create</span> &lt;<span class="hljs-keyword">PACKAGE</span>-<span class="hljs-keyword">NAME</span>&gt;  
</code></pre>

<p>다음과 같이 <code>client</code> workspace를 생성할 수 있다.</p>

<pre><code class="hljs sql">lerna <span class="hljs-keyword">create</span> <span class="hljs-keyword">client</span>  
</code></pre>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa587ca8631f.png" alt=""></p>

<h3 id="workspace">workspace에 의존성 추가</h3>

<p>아래와 같이 <code>client</code> workspace에 react 패키지를 설치할 수 있다. <code>--scope</code> 없이 사용하면 모든 workspace에 추가한다. 추가하려는 의존성이 workspace라면 해당 workspace를 제외한 모든 workspace에 추가된다.</p>

<blockquote>
  <p>현재 <a href="https://github.com/lerna/lerna/issues/2004">여러 의존성을 한번에 추가</a>하는 기능은 지원되지 않는다.</p>
</blockquote>

<p><code>client</code> workspace에 react 패키지를 추가한다.</p>

<pre><code class="hljs dockerfile">lerna <span class="hljs-keyword">add</span><span class="bash"> react --scope=client  
</span></code></pre>

<p><code>client</code> workspace에 <code>common</code> workspace를 추가한다.</p>

<pre><code class="hljs css"><span class="hljs-selector-tag">lerna</span> <span class="hljs-selector-tag">add</span> <span class="hljs-selector-tag">common</span>@<span class="hljs-keyword">0</span>.<span class="hljs-keyword">0</span>.<span class="hljs-keyword">0</span> --scope=client  
</code></pre>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa58f1f3035c.png" alt=""></p>

<h3 id="">루트 프로젝트에 의존성 추가</h3>

<p>아래와 같이 lodash를 루트 프로젝트에 설치할 수 있다.</p>

<pre><code class="hljs dockerfile">yarn <span class="hljs-keyword">add</span><span class="bash"> lodash --ignore-workspace-root-check  
</span></code></pre>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa5951d30362.png" alt=""></p>

<h3 id="workspacenpm">모든 workspace에 대해 npm 스크립트 실행</h3>

<p>해당 스크립트가 포함된 각 workspace에서 npm 스크립트를 실행한다.</p>

<pre><code class="hljs dockerfile">lerna <span class="hljs-keyword">run</span><span class="bash"> &lt;COMMAND_NAME&gt; -- [..args]  
</span></code></pre>

<p>다음은 모든 workspace에 대해 test를 실행한다.</p>

<pre><code class="hljs dockerfile">lerna <span class="hljs-keyword">run</span><span class="bash"> <span class="hljs-built_in">test</span>  
</span></code></pre>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa59fc4d0468.png" alt=""></p>

<h3 id="workspace">모든 workspace에 대해 임의 명령 실행</h3>

<pre><code class="hljs vim">lerna exec -- <span class="hljs-symbol">&lt;COMMAND&gt;</span> [..<span class="hljs-keyword">args</span>]  
</code></pre>

<p>다음은 모든 workspace 하위의 node_modules 폴더를 지운다.</p>

<pre><code class="hljs ada">lerna exec <span class="hljs-comment">-- rm -rf ./node_modules  </span>
</code></pre>

<h3 id="npmpublish">npm publish</h3>

<p>자세한 옵션은 <a href="https://github.com/lerna/lerna/tree/main/commands/publish#readme">공식 문서</a>를 참고한다.</p>

<pre><code class="hljs clean">lerna publish               ## 마지막 릴리스 이후 변경된 패키지 publish  
lerna publish <span class="hljs-keyword">from</span>-git      ## 현재 커밋에 태그가 지정된 패키지를 명시적으로 publish  
lerna publish <span class="hljs-keyword">from</span>-package  ## 레지스트리에 최신 버전이 없는 패키지를 명시적으로 publish  
</code></pre>

<h3 id="changelog">버전 관리 및 CHANGELOG 작성 자동화</h3>

<p>workspace에 변경을 가하고 나서 <code>lerna version</code>을 실행하면 각 workspace의 package.json에 명시된 버전을 자동으로 올리고 git에 tag를 남기고 변경에 대한 CHANGELOG도 작성한다.</p>

<blockquote>
  <p>더 많은 기능은 <a href="https://github.com/lerna/lerna-changelog">lerna-changelog</a>를 참고한다.</p>
</blockquote>

<pre><code class="hljs applescript">lerna <span class="hljs-built_in">version</span>  
</code></pre>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa5a75592126.png" alt="">
<img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa5ab28d2276.png" alt="">
<img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa5ae6982381.png" alt=""></p>

<p><code>changelogPreset</code> 필드를 이용하면 <code>git commit message</code>를 이용해 CHANGELOG를 자동으로 생성할 수 있다. 예시에서는 <a href="https://www.npmjs.com/package/conventional-changelog-conventionalcommits">conventional-changelog-conventionalcommits</a> 프리셋을 이용했다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa5b7e6d2423.png" alt=""></p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa5bb8b2245b-4.png" alt=""></p>

<h3 id="lerna">Lerna 명령어</h3>

<p>그 외에도 변경 사항을 알아내거나 workspace 목록을 얻거나 lerna, npmClient, OS 등의 환경을 알아내는 등
다양한 기능을 제공한다. Lerna의 자세한 명령어는 다음을 참고한다.</p>

<ul>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/publish#readme"><code>lerna publish</code></a></li>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/version#readme"><code>lerna version</code></a></li>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/bootstrap#readme"><code>lerna bootstrap</code></a></li>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/list#readme"><code>lerna list</code></a></li>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/changed#readme"><code>lerna changed</code></a></li>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/diff#readme"><code>lerna diff</code></a></li>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/exec#readme"><code>lerna exec</code></a></li>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/run#readme"><code>lerna run</code></a></li>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/init#readme"><code>lerna init</code></a></li>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/add#readme"><code>lerna add</code></a></li>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/clean#readme"><code>lerna clean</code></a></li>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/import#readme"><code>lerna import</code></a></li>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/link#readme"><code>lerna link</code></a></li>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/create#readme"><code>lerna create</code></a></li>
<li><a href="https://github.com/lerna/lerna/tree/main/commands/info#readme"><code>lerna info</code></a></li>
</ul>

<p><a id="ch3"></a></p>

<h2 id="3nx">3. Nx</h2>

<p>다음은 구글 개발자들이 만든 오픈소스 프로젝트인 <a href="https://nx.dev/">Nx</a>이다. Nx는 모노레포 구성을 위한 다양한 개발 도구를 제공하고 Angular, React와 같은 프런트엔드 프레임워크 기반의 개발 환경 구성뿐 아니라 Express, <a href="https://nestjs.com/">Nest.js</a>와 같은 백엔드 기술 기반의 개발까지 폭넓게 지원하고 있다. 이뿐만 아니라 workspace 생성 시 Cypress, Jest 등을 기반으로 한 테스트 환경까지 설정해주기 때문에, 초기 모노레포 개발 환경 구축 비용을 크게 줄여준다.</p>

<p>그럼 Nx를 사용해서 간단하게 모노레포를 구성해 보고, 그 특징을 몇 가지 살펴보겠다.</p>

<h3 id="nxworkspace">새로운 Nx workspace 생성하기</h3>

<p>아래의 명령을 입력해 새로운 Nx workspace 생성을 시작할 수 있다.</p>

<pre><code class="hljs dsconfig"><span class="hljs-string">npx </span><span class="hljs-built_in">create-nx-workspace</span>  
</code></pre>

<p>Nx는 workspace 생성을 완료하기 위해, 다음과 같이 추가로 몇 가지 항목을 입력하도록 요구한다.</p>

<blockquote>
  <p>Nx Cloud의 경우 필수는 아니다.</p>
</blockquote>

<pre><code class="hljs sql">Workspace name (e.g., org name)     My-Workspace  
What to <span class="hljs-keyword">create</span> <span class="hljs-keyword">in</span> the <span class="hljs-keyword">new</span> workspace angular  
Application <span class="hljs-keyword">name</span>                    my-app  
<span class="hljs-keyword">Default</span> stylesheet <span class="hljs-keyword">format</span>           CSS  
<span class="hljs-keyword">Use</span> Nx Cloud?                       <span class="hljs-keyword">No</span>  
</code></pre>

<p>이 항목을 입력하고 나면 다음과 같은 구조의 Nx workspace가 생성된다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa5c2cd82663.png" alt=""></p>

<p>생성된 workspace 구조에서 이를 구성하는 디렉터리의 특징을 간단히 알아보겠다.</p>

<ul>
<li><code>apps/*</code>: 애플리케이션 프로젝트들이 위치한다. 우리가 처음에 생성한 애플리케이션도 여기에 들어있는 것을 볼 수 있다. Angular 기반으로 workspace를 생성했어도 꼭 Angular 프로젝트만 이 디렉터리에 들어갈 필요는 없으며 React 등 다른 프레임워크 기반의 코드도 공존할 수 있다.</li>
<li><code>libs/*</code>: 애플리케이션 전반에서 공통으로 사용할 코드를 여기에 작성한다.</li>
<li><code>tools/*</code>: 개발에 필요한 tooling script가 위치한다.</li>
</ul>

<p>이제 생성한 애플리케이션을 실행해 보겠다. 애플리케이션은 다음과 같은 명령으로 실행할 수 있다.</p>

<pre><code class="hljs dts">npx nx serve <span class="hljs-params">&lt;APP_NAME&gt;</span> <span class="hljs-comment">// 주의: workspace 이름이 아닌 애플리케이션 이름  </span>
</code></pre>

<p>만약 전역(global)에 Nx가 설치되어 있다면 다음과 같은 명령으로 애플리케이션을 실행할 수도 있다.</p>

<pre><code class="hljs xml">nx serve <span class="hljs-tag">&lt;<span class="hljs-name">APP_NAME</span>&gt;</span>  
</code></pre>

<blockquote>
  <p>전역에 Nx 설치하기: <code>npm install -g nx</code> 또는 <code>yarn global add nx</code></p>
</blockquote>

<p>위의 명령 실행이 완료되었다면, <code>localhost:4200</code>에 접속해서 애플리케이션을 확인해 볼 수 있다.</p>

<h4 id="nxclivsangularcli">Nx CLI vs Angular CLI</h4>

<p>Angular 프로젝트 개발 경험이 있다면 Angular CLI(aka. ng)에 익숙할 것이다. 실제로, Angular 기반의 Nx workspace를 생성한 경우 대부분의 Nx 명령어는 <code>ng ...</code> 로 대체가 가능하고(예: <code>ng serve</code>) 그 결과 또한 동일하다.</p>

<p>하지만 Nx에서는 Nx CLI 사용을 권장한다. 그 이유는 Nx가 Nx CLI를 통해 제공하는 몇몇 기능이 있기 때문이다. 그 기능 중 하나인 Computation Cache에 대해선 나중에 살펴보겠다.</p>

<blockquote>
  <p>"Use Nx CLI over Angular CLI" - Nx.dev -</p>
</blockquote>

<h3 id="">라이브러리 추가해보기</h3>

<p>이번엔 애플리케이션 전반에서 사용할 수 있는 <a href="https://nx.dev/angular/library">라이브러리</a>를 추가해보겠다.</p>

<p>라이브러리는 목적과 특성에 따라 다음과 같이 네 가지로 나눌 수 있다.</p>

<ul>
<li>feature 라이브러리</li>
<li>UI 라이브러리</li>
<li>data-access 라이브러리</li>
<li>utility 라이브러리</li>
</ul>

<p>여기서는 간단하게 UI 라이브러리를 추가해 보겠다.</p>

<pre><code class="hljs crystal">npx nx g @nrwl/<span class="hljs-symbol">angular:</span><span class="hljs-class"><span class="hljs-keyword">lib</span> <span class="hljs-title">ui</span> // <span class="hljs-title">ui</span>: 라이브러리 이름  </span>
</code></pre>

<pre><code class="hljs crystal">npx nx g @nrwl/<span class="hljs-symbol">react:</span><span class="hljs-class"><span class="hljs-keyword">lib</span> <span class="hljs-title">ui</span> // <span class="hljs-title">React</span>의 경우  </span>
</code></pre>

<p>위 명령으로 <code>ui</code>라는 이름의 Angular 컴포넌트가 라이브러리에 추가되어 다음과 같은 구조가 만들어진다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa5cc8762692.png" alt=""></p>

<p>이제 생성된 UI 라이브러리 구조에 실제 View 역할을 할 컴포넌트를 추가하겠다.</p>

<pre><code class="hljs applescript">npx nx g component <span class="hljs-keyword">first</span>-lib <span class="hljs-comment">--project=ui --export  </span>
</code></pre>

<p>다음 그림과 같이 <code>ui</code> 라이브러리 아래에 우리가 선언한 <code>first-lib</code> 컴포넌트 파일이 추가되었다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa5e669b2c95.png" alt=""></p>

<h3 id="ui">생성한 UI 라이브러리 사용해보기</h3>

<p>그럼 이제 라이브러리를 애플리케이션에서 사용하는 방법을 알아보겠다.</p>

<h4 id="1uiappmoduleimport">1. UI 모듈을 AppModule에 import하기</h4>

<pre><code class="language-js hljs javascript"><span class="hljs-comment">// in AppModule</span>
...

import { UiModule } <span class="hljs-keyword">from</span> <span class="hljs-string">'@my-workspace/ui'</span>; <span class="hljs-comment">// Import UiModule</span>

...

@NgModule({
  ...

  imports: [BrowserModule, UiModule], <span class="hljs-comment">// Add UiModule in the importing list</span>

  ...
})
<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppModule</span> </span>{}  
</code></pre>

<p>이때 라이브러리를 import하는 구문은 다음과 같다.</p>

<pre><code class="hljs pf">import <span class="hljs-variable">&lt;UI_MODULE_NAME&gt;</span> <span class="hljs-keyword">from</span> @<span class="hljs-variable">&lt;WORKSPACE_NAME&gt;</span>/<span class="hljs-variable">&lt;LIBRARY_NAME&gt;</span>  
</code></pre>

<p>Nx는 라이브러리가 추가될 때마다 <code>tsconfig.base.json</code> 파일에 TS 경로를 매핑하기 때문에 위와 같이 참조할 수 있다.</p>

<h4 id="2applicationtemplateui">2. Application Template에서 UI 라이브러리 컴포넌트 사용하기</h4>

<p>1번에서 모듈을 import했다면, 생성한 라이브러리의 컴포넌트를 Application Template에서 다음과 같이 사용할 수 있다.</p>

<pre><code class="language-html hljs xml"><span class="hljs-comment">&lt;!-- in Application Template --&gt;</span>  
<span class="hljs-tag">&lt;<span class="hljs-name">my-workspace-first-lib</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">my-workspace-first-lib</span>&gt;</span>  
</code></pre>

<h4 id="">라이브러리 생성 및 사용 시 주의할 점</h4>

<p>에디터로 Visual Studio Code(이하 VS Code)를 사용하는 경우, 라이브러리를 생성 및 참조할 때 컴파일 오류가 발생하는 경우가 있다. 이는 VS Code의 TS 서버가 새로운 라이브러리를 바로 인식하는 데 실패하는 경우로, 이때는 VS Code를 재시작하는 것을 권장한다. 또한 새로운 라이브러리를 추가할 때마다 Nx 서버를 재시작해야 한다는 점을 주의한다.</p>

<h3 id="nx">Nx가 제공하는 도구</h3>

<p>지금까지 Nx workspace의 생성, 라이브러리 추가와 사용에 대해서 간단히 알아보았다. 이어서 Nx가 제공하는 몇 가지 기능을 소개하겠다.</p>

<h4 id="1projectgraph">1. Project Graph</h4>

<p>첫 번째는 Project Graph이다. 대부분의 프로젝트는 성장하면서 수많은 애플리케이션과 라이브러리가 생겨나고 점차 그 구성 요소 간의 의존 관계가 복잡해져 개발자 입장에서는 그 의존 관계를 파악하기가 점점 어려워진다. Nx는 이를 시각화하여 프로젝트 구성 요소 간의 관계를 파악하기 쉽도록 하는 Project Graph를 제공한다.</p>

<pre><code class="hljs ebnf"><span class="hljs-attribute">npx nx graph</span>  
</code></pre>

<p>위의 명령을 실행하여 현재 workspace의 전체 Project Graph를 확인할 수 있고, Nx가 제공하는 인터페이스를 통해 다양한 필터링도 가능하다. 아래는 위에서 진행한 예시 workspace의 Project Graph이다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa60537a3c8e.png" alt=""></p>

<h4 id="2computationcaching">2. Computation Caching</h4>

<p>Nx는 Nx CLI를 통해 내부적으로 Computation Caching을 제공한다. 이를 확인해보기 위해 <code>nx build [appName]</code> 명령을 실행해 보겠다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa609e2d3c9c.png" alt=""></p>

<p>빌드가 완료된 후, 위와 동일한 명령을 한 번 더 실행해 보았다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa60f1c13ca6.png" alt=""></p>

<p>이번에는 빌드가 바로 완료됨(21ms)을 볼 수 있고, 맨 아래 텍스트에서 볼 수 있는 것처럼 Nx는 로컬 캐시에
해당 Artifact가 존재하는 경우 가져다 쓰는 걸 알 수 있다. 단, 캐싱은 Nx CLI에서만 동작하기 때문에, Angular CLI를 사용하는 경우엔 Computation Caching이 적용되지 않는다.</p>

<blockquote>
  <p><a href="https://nx.dev/using-nx/caching">Computation Caching 더 알아보기</a></p>
</blockquote>

<h4 id="3affected">3. Affected</h4>

<p>다음은 Affected 스크립트이다.</p>

<pre><code class="hljs ebnf"><span class="hljs-attribute">npx nx affected</span>  
</code></pre>

<p>Nx는 코드를 수정했을 때 workspace의 어떤 부분이 영향을 받는지 알려주는 명령을 제공한다. Affected 스크립트는 필요에 따라 다음과 같이 다양하게 사용할 수 있다.</p>

<ul>
<li><code>npx nx affected:apps</code>: 수정한 부분이 어떤 애플리케이션에 영향을 주었는지 표시한다.</li>
<li><code>npx nx affected:libs</code>: 수정한 부분이 어떤 라이브러리에 영향을 주었는지 표시한다.</li>
<li><code>npx nx affected:test</code>: 코드 수정에 의해 영향을 받은 부분에 대해서만 테스트를 실행한다.</li>
</ul>

<p>다음은 UI 라이브러리를 수정한 뒤 위 명령을 실행한 모습이다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa614fa13cf6.png" alt=""></p>

<h4 id="4vscodenxconsole">4. VS Code용 Nx Console</h4>

<p>마지막으로 Nx Console이다. Nx Console은 VS Code에서 Nx를 쉽게 사용하기 위한 GUI 도구다. Nx Command로 하는 모든 작업을 Nx Console로도 할 수 있도록 구성되어 있다. VS Code를 사용 중이라면 Nx Console을 사용하는 것을 추천한다.</p>

<blockquote>
  <p><a href="https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console">VS Code에 Nx Console 설치하기</a></p>
</blockquote>

<p>다음은 VS Code에 Nx Console을 설치한 모습이다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa61bac843a8.png" alt="image-20220321-115005-809.png"></p>

<p><a id="ch4"></a></p>

<h2 id="4turborepo">4. Turborepo</h2>

<p>Turborepo는 대규모 모노레포 프로젝트 관리에서 오는 피로감과 부수적인 툴링에 대한 부담을 줄이면서, Google이나 Facebook과 같은 큰 기업에서 사용하는 수준의 개발 경험을 주는 데 포커싱한, Vercel에서(<a href="https://vercel.com/blog/vercel-acquires-turborepo">2021년 12월에 인수</a>) 개발 및 운영하고 있는 JavaScript/TypeScript를 위한 모노레포 빌드 시스템이다.</p>

<p>Turborepo는 증분 빌드(incremental build), 원격 캐싱, 병렬 처리 기법을 통해 빌드 성능을 끌어올리고, <code>Pipeline</code>의 쉬운 설정과 profiling, trace 등 다양한 시각화 기능을 제공해 관리 편의성을 높인 것이 특징이다.</p>

<p>그리고 기존의 모노레포 프로젝트에 점진적으로 Turborepo를 적용할 수 있으며, 쉽게 Turborepo로 구성된 새 모노레포 프로젝트를 생성할 수 있도록 스캐폴딩 기능을 제공한다. 또한 패키지 매니저로 <code>yarn</code>, <code>npm</code>, <code>pnpm</code>와 함께 잘 동작하므로 프로젝트 상황에 맞게 선택해 사용할 수 있다.</p>

<p>Turborepo가 어떻게 구성되어 있는지 먼저 살펴보고, 앞서 언급한 특징을 설명하면서, 어떻게 사용하는지 설명하겠다.</p>

<h3 id="createturbo">create-turbo 구성 확인하기</h3>

<p>아래의 명령어를 통해 새 모노레포 프로젝트를 생성해 보자.</p>

<pre><code class="hljs dsconfig">$ <span class="hljs-string">npx </span><span class="hljs-built_in">create-turbo@latest</span> &lt;<span class="hljs-string">PACKAGE_NAME&gt;</span>
</code></pre>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa6222a443d1.png" alt=""></p>

<p>위 그림과 같이 <code>/app</code> 하위에 <code>docs</code>, <code>web</code> 앱과 공통 패키지인 <code>/packages</code> 하위의 <code>ui</code>, <code>config</code> 패키지가 있는 프로젝트가 생성된다. 이 구조는 일반적인 모노레포 프로젝트 구조와 유사해 쉽게 Turborepo를 사용할 수 있도록 한다.</p>

<p>Vercel사에서 운영하는 프로젝트답게 앱은 기본적으로 <code>Next.js(react)</code>로 설정된다. 그외에 <code>Express</code>, <code>Remix</code>, <code>pnpm</code> 등 다양한 기술 스택으로 이루어진 <a href="https://github.com/vercel/turborepo/tree/main/examples">예시</a>도 제공하고 있으므로 필요에 따라 참고할 수 있다.</p>

<h3 id="">캐싱</h3>

<p>이미 계산한 것들은 다시는 계산하지 않는다는 핵심 컨셉 아래 캐싱이 이루어지고 있다. 이전에 실행한 파일 및 로그를 캐싱해, 만약 현재 실행 태스크에 이미 완료한 작업이 있다면 이것을 건너뛰기 때문에 작업 실행 시간을 효과적으로 줄일 수 있다.</p>

<p>앞서 만든 프로젝트에서 빌드를 진행해 보자.</p>

<pre><code class="language-sh hljs bash">$ yarn turbo run build
</code></pre>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa628ae343e6.png" alt=""></p>

<p>그 다음 위 명령어로 다시 빌드를 하면 다음과 같이 시간이 대폭 줄어든 것을 확인할 수 있다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa62cccd43f2.png" alt=""></p>

<p>그렇다면 이 캐시들은 어떻게 저장되고 있을까?</p>

<p>빌드를 하면 <code>/app</code> 하위 패키지들의 <code>.turbo</code> 디렉터리에 각각 로그 파일이 생기고 이 로그에는 해당 빌드에 대한 hash가 저장된다.(Turborepo는 빌드해야 할 항목을 파악하기 위해 타임스탬프를 확인하고 활용하는 대신 파일의 내용에 따른 hash 정책을 사용한다.) 이 hash 값들은 아래 이미지와 같이 <code>node_modules/.cache/turbo</code> 하위에 hash로 구분된 스냅샷 폴더와 매칭된다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa633331443c.png" alt="">
<img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa6373234447.png" alt=""></p>

<p>이렇게 모든 작업에 대한 캐싱을 진행하기 때문에 변화된 부분만 재빌드하고 나머지는 캐싱한 것을 사용하면서 Turborepo는 작업 속도를 높일 수 있다.</p>

<h3 id="">원격 캐싱</h3>

<p>위에서 설명한 캐시는 로컬 환경에서만 유효하다는 한계가 있다. 그러나 Turborepo는 이 한계를 극복하는 <strong>원격 캐싱</strong>이라는 강력한 기능을 제공한다.</p>

<p>더 빠른 빌드를 위해 빌드 캐시를 클라우드에 올려서 팀원 및 CI/CD시스템이 공유해 사용할 수 있어 대규모 프로젝트에서 다수의 팀이 협업하는 환경에서 개발 효율성을 높일 수 있다.</p>

<p>실제로 원격 캐싱을 한 상태에서 빌드를 실행하면 "Remote computation caching enable" 문구와 함께 빌드 시간이 9초에서 3초로 비약적으로 감소하는 것을 확인해볼 수 있다.</p>

<ul>
<li>로컬 캐시가 없는 상태에서의 빌드 시간</li>
</ul>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa63c2224451.png" alt=""></p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa6401b8448b.png" alt=""></p>

<ul>
<li>로컬 캐시는 없고 원격 캐시가 있는 상태에서의 빌드 시간</li>
</ul>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa6442a6449a.png" alt=""></p>

<p>다만 이 기능은 현재 experimental(beta) 상태이며 Vercel 클라우드를 활용하기 때문에 Vercel의 계정이 필요하다.</p>

<blockquote>
  <p><a href="https://turborepo.org/docs/features/remote-caching">공식 문서</a>를 참고해 원격 캐싱 방법을 참고해 볼 수 있다.</p>
</blockquote>

<h3 id="pipelinepackagetask">Pipeline Package Task</h3>

<p>Pipeline은 각 패키지의 package.json 스크립트(태스크) 간 작업 관계를 정의한다. 이를 통해 새로 들어온 개발자도 작업 관계를 쉽게 이해할 수 있다.</p>

<p>Pipeline 설정은 Turborepo turbo.json에서 확인할 수 있다.(package.json에도 설정 가능하나 turbo.json에 설정하도록 권장하고 있다.)</p>

<pre><code class="language-json hljs">{
  <span class="hljs-attr">"$schema"</span>: <span class="hljs-string">"https://turborepo.org/schema.json"</span>,
  <span class="hljs-attr">"pipeline"</span>: {
    <span class="hljs-attr">"build"</span>: {
      <span class="hljs-attr">"dependsOn"</span>: [<span class="hljs-string">"^build"</span>]
    },
    <span class="hljs-attr">"test"</span>: {
      <span class="hljs-attr">"dependsOn"</span>: [<span class="hljs-string">"^build"</span>]
    },
    <span class="hljs-attr">"deploy"</span>: {
      <span class="hljs-attr">"dependsOn"</span>: [<span class="hljs-string">"build"</span>, <span class="hljs-string">"test"</span>, <span class="hljs-string">"lint"</span>]
    },
    <span class="hljs-attr">"lint"</span>: {}
  }
}
</code></pre>

<p>위 설정에서 <code>dependOn</code>은 <code>pipeline</code> key에 해당하는 작업이 의존하는 작업을 의미한다. 이 부분에 접두사 <code>^</code>가 붙으면 각 패키지에 있는 작업을 의미한다.</p>

<p><code>lint</code>는 의존 관계와 상관없이 언제나 수행될 수 있으며, <code>deploy</code>는 Pipeline에서 <code>build</code>, <code>test</code>, <code>lint</code>가 선행되어야 수행됨을 의미한다.</p>

<p>Pipeline으로 인해 Turborepo의 스케줄러는 기존의 모노레포에 비해 성능이 강력하다. 한 번에 한 테스크씩 수행되는 기존 방식과 다르게 의존성이 없는 작업은 유휴 CPU에서 실행되기 때문에 빌드 시간이 긴 경우에 작업 성능이 비약적으로 높아진다.</p>

<p>다음 그림을 살펴보자.</p>

<p><img src="/content/images/2022/04/227eaf62-bf35-4e48-a45a-aede9108a23f.png" alt=""></p>

<p>A, B, C 세 개의 패키지로 구성된 프로젝트가 있다. A와 C는 B에 의존한다.</p>

<p><code>lint</code>, <code>build</code>, <code>test</code>, <code>deploy</code> 작업을 순차적으로 수행한다고 했을 때 Lerna의 경우에 A, C 패키지는 B의 <code>build</code>가 끝날 때까지 <code>build</code>를 수행할 수 없다.</p>

<p>이에 반해 Turborepo는 <code>build</code>에 의존 관계가 없는 <code>test</code> 작업이 병렬적으로 수행된다.</p>

<h3 id="profile">Profile</h3>

<p>위에서 언급한 멀티 스레드를 활용한 병렬 작업 처리가 실제로 어떻게 CPU 스레드를 사용해서 작업을 처리하는지 <code>--profile</code> 플래그를 통해 시각화해 확인할 수 있다.</p>

<pre><code class="language- sh hljs bash"><span class="hljs-comment">## 이미 작업을 진행한 경우 더 명확한 profiling을 위해 --force 플래그를 추가한다.</span>
$ yarn turbo run build lint --profile [--force]
</code></pre>

<p>위 명령을 실행하면 루트 디렉터리에 <code>****-profile.json</code> 파일이 생성된다. 이 파일을 Chrome 개발자 도구의 Performance 탭에 업로드해 스레드에서 작업이 어떤 순서로 얼마만큼의 시간이 걸리는지 확인할 수 있다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa64a13144a5-1.png" alt=""></p>

<p>이 밖에도 <code>--trace</code>,  <code>--heap</code>, <code>--cpuprofile</code> 등의 플래그를 사용해 다양한 부분에서 profiling이 가능하다. 자세한 사용 방법은 <a href="https://turborepo.org/docs/reference/command-line-reference#--trace">공식 문서</a>에서 확인할 수 있다.</p>

<h3 id="">의존성 그래프 시각화</h3>

<p>Nx와 마찬가지로 Turborepo도 프로젝트 내 패키지 간 작업 관계를 쉽게 파악할 수 있게 시각화하는 기능을 제공한다. 기본적으로 JPEG 형식의 이미지로 그래프가 그려지며 SVG, HTML, JSON, PDF 등 다양한 형식의 산출물을 지원한다.</p>

<p>먼저 <a href="https://graphviz.org/download/">graphviz</a>가 설치되어 있어야 한다.</p>

<pre><code class="hljs dockerfile">$ turbo <span class="hljs-keyword">run</span><span class="bash"> build --graph
</span>$ turbo <span class="hljs-keyword">run</span><span class="bash"> build <span class="hljs-built_in">test</span> lint --graph=my-graph.html
</span></code></pre>

<p>다음은 위 명령어를 각각 실행해 얻은, 패키지 간 작업 관계를 시각화한 이미지다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa650f84469d.png" alt=""></p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa65565d46b5.png" alt=""></p>

<p>이 밖에도 CPU trace, heap trace, CPU profile에 대한 시각화 기능도 제공한다. 자세한 내용은 <a href="https://turborepo.org/docs/reference/command-line-reference#--trace">CLI Reference</a>를 참고한다.</p>

<h2 id="5">5. 마치며</h2>

<p>위에 소개한 Yarn, Lerna, Nx 그리고 Turborepo를 간단히 비교하면 다음 표와 같다.</p>

<p><img src="/content/images/2022/04/0a710dbd-7f96-14ab-817f-aa65aea54d30.png" alt=""></p>

<p>표에서 보이는 것처럼 Yarn은 다른 모노레포 도구에 비해 지원하는 것들이 많지는 않지만, 모노레포 사용의 목적이 <strong>단순히 공통 요소를 공유</strong>하는 것이라면 Yarn으로 workspace을 구성해서 개발을 진행하는 것을 추천한다.</p>

<p>하지만 단순한 코드의 공유 외에 <strong>패키지 간 의존성 관리 및 테스트, 배포</strong> 등의 작업에 대한 더 나은 무언가를 필요로 한다면 Lerna를 함께 사용해보는 것도 좋은 선택지가 될 것이다.</p>

<p>그리고 프로젝트가 성장하면서 개발, 관리에 유용한 더 많은 기능이 필요하다면 Nx와 Turborepo를 고려해보면 좋을 것 같다. Nx와 Turborepo는 모두 <strong>캐싱</strong> 기능을 지원해서 빌드 측면에서 우수한 속도를 자랑하고, <strong>의존성 그래프 시각화</strong> 기능을 통해 프로젝트의 구성 요소들이 서로 어떤 의존관계를 갖고있는 지 한눈에 파악이 가능하도록 해준다.</p>

<p>둘 중 좀더 가벼운 시작을 원한다면, <strong>Zero Config</strong>를 지향해 초기 설정이 상대적으로 쉬운 Turborepo를 시도하는 것도 좋을 것이다. 상대적으로 출시된 지 오래되어 관련 레퍼런스, 지원하는 IDE 플러그인 등의 <strong>풍부한 생태계</strong>가 형성되어 있는 Nx 또한 좋은 선택지가 될 수 있다.</p>

<p>위의 네 가지 도구 모두 상황에 따라 좋은 선택지가 될 수 있으니, 현재 프로젝트 상황에 맞는 좋은 도구를 선택하여 즐겁게 개발하길 바란다.</p></div><div class="txt_tag"><span class="icon_tag">Tag</span><div class="tag_list"><a href="/search?keyword=front-end"><span>front-end</span></a><a href="/search?keyword=모노레포"><span>모노레포</span></a><a href="/search?keyword=monorepo"><span>monorepo</span></a></div></div><div class="post_writer_info"><div class="writer_info"><div class="ly_img_people"></div><div class="img_people"><img src="/image/20220414/645987127543.png" alt=""></div><div class="people_info"><dl><dt><span class="blind">글쓴이</span></dt><dd><span class="name">심흥운<span></span></span><span><span class="bar">|</span><span class="duty_dept">네이버 Platform Labs</span></span></dd><dt><span class="blind">소개</span></dt><dd class="info">NAVER Platform Labs에서 사내 플랫폼의 프론트엔드 개발을 담당하고 있습니다. 협업 도구, 그래픽 저작 도구, ML용 어노테이션 도구, 웹기반 IDE, 스마트TV앱 그리고 쇼핑몰 솔루션 등의 프로젝트에 참여하였습니다. 오픈소스에 관심이 많고 사용하는 것과 함께 내부 구현에도 호기심을 갖고 있습니다. 다양한 분야의 기술을 FE 분야에 접목하는 데에도 관심이 많습니다.</dd></dl></div><div class="people_write"><a href="https://d2.naver.com/search?keyword=%EC%8B%AC%ED%9D%A5%EC%9A%B4">글쓴이의 다른 글 보기</a></div></div><div class="writer_info"><div class="ly_img_people"></div><div class="img_people"><img src="/image/20220414/534941194807.jpeg" alt=""></div><div class="people_info"><dl><dt><span class="blind">글쓴이</span></dt><dd><span class="name">김동빈<span></span></span><span><span class="bar">|</span><span class="duty_dept">네이버 Platform Labs</span></span></dd><dt><span class="blind">소개</span></dt><dd class="info">FC 바르셀로나를 열렬히 응원하며, Pinpoint FE 오픈소스 개발도 가끔하는 김동빈입니다.</dd></dl></div><div class="people_write"><a href="https://d2.naver.com/search?keyword=%EA%B9%80%EB%8F%99%EB%B9%88">글쓴이의 다른 글 보기</a></div></div><div class="writer_info"><div class="ly_img_people"></div><div class="img_people"><img src="/image/20220414/727738771151.png" alt=""></div><div class="people_info"><dl><dt><span class="blind">글쓴이</span></dt><dd><span class="name">김도윤<span></span></span><span><span class="bar">|</span><span class="duty_dept">네이버 Platform Labs</span></span></dd><dt><span class="blind">소개</span></dt><dd class="info">옷과 운동을 좋아하는 개발자입니다. 페이센터, 스마트스토어센터 프론트엔드 개선 프로젝트에 참여했고 현재는 Pinpoint FE 오픈소스 개발에 참여하고있습니다.</dd></dl></div><div class="people_write"><a href="https://d2.naver.com/search?keyword=%EA%B9%80%EB%8F%84%EC%9C%A4">글쓴이의 다른 글 보기</a></div></div></div><div class="sns_position"><div class="sns_sec"><button type="button" class="sns_naver"><span class="sns_icon">NAVER</span></button><button type="button" class="sns_facebook"><span class="sns_icon">facebook</span></button><div class="fb-like fb_iframe_widget" data-href="http://d2.naver.com/helloworld/7553804" data-layout="button_count" data-action="like" data-size="large" data-show-faces="false" data-share="false" fb-xfbml-state="parsed" fb-iframe-plugin-query="action=like&amp;app_id=816454888441763&amp;container_width=714&amp;href=http%3A%2F%2Fd2.naver.com%2Fhelloworld%2F7553804&amp;layout=button_count&amp;locale=ko_KR&amp;sdk=joey&amp;share=false&amp;show_faces=false&amp;size=large"><span style="vertical-align: top; width: 0px; height: 0px; overflow: hidden;"><iframe name="f1ad5f609758ab8" width="1000px" height="1000px" data-testid="fb:like Facebook Social Plugin" title="fb:like Facebook Social Plugin" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" allow="encrypted-media" src="https://www.facebook.com/v2.11/plugins/like.php?action=like&amp;app_id=816454888441763&amp;channel=https%3A%2F%2Fstaticxx.facebook.com%2Fx%2Fconnect%2Fxd_arbiter%2F%3Fversion%3D46%23cb%3Dff536629c9a1d8%26domain%3Dd2.naver.com%26is_canvas%3Dfalse%26origin%3Dhttps%253A%252F%252Fd2.naver.com%252Ff1c150bdfececcc%26relation%3Dparent.parent&amp;container_width=714&amp;href=http%3A%2F%2Fd2.naver.com%2Fhelloworld%2F7553804&amp;layout=button_count&amp;locale=ko_KR&amp;sdk=joey&amp;share=false&amp;show_faces=false&amp;size=large" style="border: none; visibility: hidden;"></iframe></span></div><button type="button" class="sns_url"><span class="sns_icon">URL</span></button></div></div></div></div><div class="relation_sec"><p class="relation_title">관련글</p><div class="relation_list"><div class="list"><ul><li><a href="/helloworld/0923884"><img src="/content/images/2022/04/--------.png" width="60" height="50" alt="썸네일"><div class="relation_list_txt">모던 프론트엔드 프로젝트 구성 기법 - 모노레포 개념 편</div></a></li><li><a href="/helloworld/639204"><img src="/content/images/2015/07/416268-1.PNG" width="60" height="50" alt="썸네일"><div class="relation_list_txt">[제6회 오픈 세미나] Front-end 개발자 커뮤니티 특집 (JavaScript, 웹표준 &amp; 접근성)</div></a></li><li><a href="/news/8383433"><img src="/content/images/2015/11/p2.png" width="60" height="50" alt="썸네일"><div class="relation_list_txt">Chrome 46 Beta 추가 및 변경사항</div></a></li><li><a href="/news/7622167"><img src="/static/img/app/common/empty_img1.png" width="60" height="50" alt="썸네일"><div class="relation_list_txt">Front-end 기술 세미나 발표자료</div></a></li></ul></div></div></div><div id="cbox_module" style="max-width: 840px; margin: 0px auto; padding-bottom: 35px;" class="u_cbox"><div class="u_cbox_wrap u_cbox_ko"><div class="u_cbox_head"><h5 class="u_cbox_title">댓글</h5><span class="u_cbox_count">9</span><button type="button" class="u_cbox_btn_refresh" data-action="count#refresh" data-log="RPO.refresh"><span class="u_cbox_ico_refresh"></span><span class="u_cbox_txt_refresh">새로고침</span></button><div class="u_cbox_head_tools"></div></div><div class="u_cbox_write_wrap"><div class="u_cbox_write_box u_cbox_type_logged_out"><form><fieldset><legend class="u_vc">댓글 쓰기</legend><div class="u_cbox_write"><div class="u_cbox_write_inner"><div class="u_cbox_write_area"><strong class="u_vc">댓글 입력</strong><div class="u_cbox_inbox"><textarea title="댓글" id="cbox_module__write_textarea" class="u_cbox_text" rows="3" cols="30" data-log="RPC.input"></textarea><label for="cbox_module__write_textarea" class="u_cbox_guide" data-action="write#placeholder" data-param="@event">댓글을 작성하려면 <a href="#" class="u_cbox_link">로그인</a> 해주세요</label></div></div><div class="u_cbox_upload_sticker" style="display:none"></div><div class="u_cbox_write_count"><span class="u_vc">현재 입력한 글자수</span><strong class="u_cbox_count_num">0</strong>/<span class="u_vc">전체 입력 가능한 글자수</span><span class="u_cbox_write_total">400</span></div><div class="u_cbox_upload"><div class="u_cbox_addition"></div><button type="button" class="u_cbox_btn_upload" data-action="write#request" data-log="RPC.write#RPC.reply"><span class="u_cbox_ico_upload"></span><span class="u_cbox_txt_upload">등록</span></button></div></div></div></fieldset></form></div></div><div class="u_cbox_notice u_cbox_notice_none" style="display: none;"></div><div id="cbox_module_wai_u_cbox_content_wrap_tabpanel" tabindex="0" class="u_cbox_content_wrap" style="outline: 0"><ul class="u_cbox_list"><li class="u_cbox_comment cbox_module__comment_771214607153889383 _user_id_no_31XRm" data-info="commentNo:'771214607153889383',deleted:false,best:false,visible:true,secret:false,manager:false,mine:false,report:undefined,blindReport:false,objectId:'7553804',replyLevel:1,parentCommentNo:'771214607153889383',pick:false"><div class="u_cbox_comment_box"><div class="u_cbox_area"><div class="u_cbox_info"><span class="u_cbox_info_main"><span class="u_cbox_name"><span class="u_cbox_name_area"><span class="u_cbox_nick_area"><span class="u_cbox_nick">캡틴마벨</span></span></span></span></span><span class="u_cbox_info_sub"></span></div><div class="u_cbox_text_wrap"><span class="u_cbox_contents" data-lang="ko">좋은 글 감사합니다!</span></div><div class="u_cbox_info_base"><span class="u_cbox_date" data-value="2022-10-05T10:46:13+0900">2022-10-05 10:46</span></div><div class="u_cbox_tool"><a href="#" role="button" aria-expanded="false" class="u_cbox_btn_reply" data-action="reply#toggle" data-param="771214607153889383" data-log="RPC.replyopen#RPC.replyclose"><strong class="u_cbox_reply_txt">답글</strong><span class="u_cbox_reply_cnt u_vc">0</span></a><div class="u_cbox_recomm_set"><strong class="u_vc">공감/비공감</strong><a href="#" data-action="vote" data-param="mine:false,commentNo:'771214607153889383',voteStatus:'SYMPATHY',objectId:'7553804',ticket:'d2'" data-log="RPC.sym#RPC.unsym" class="u_cbox_btn_recomm"><span class="u_cbox_ico_recomm">공감</span><em class="u_cbox_cnt_recomm">0</em></a><a href="#" data-action="vote" data-param="mine:false,commentNo:'771214607153889383',voteStatus:'ANTIPATHY',objectId:'7553804',ticket:'d2'" data-log="RPC.dis#RPC.undis" class="u_cbox_btn_unrecomm"><span class="u_cbox_ico_unrecomm">비공감</span><em class="u_cbox_cnt_unrecomm">0</em></a></div></div><span class="u_cbox_comment_frame"><span class="u_cbox_ico_tip"></span><span class="u_cbox_comment_frame_top"><span class="u_cbox_comment_bg_r"></span><span class="u_cbox_comment_bg_l"></span></span><span class="u_cbox_comment_frame_bottom"><span class="u_cbox_comment_bg_r"></span><span class="u_cbox_comment_bg_l"></span></span></span></div></div><div class="u_cbox_reply_area" style="display:none;"></div></li><li class="u_cbox_comment cbox_module__comment_760728307732840698 _user_id_no_HFvf" data-info="commentNo:'760728307732840698',deleted:false,best:false,visible:true,secret:false,manager:false,mine:false,report:undefined,blindReport:false,objectId:'7553804',replyLevel:1,parentCommentNo:'760728307732840698',pick:false"><div class="u_cbox_comment_box"><div class="u_cbox_area"><div class="u_cbox_info"><span class="u_cbox_info_main"><span class="u_cbox_name"><span class="u_cbox_name_area"><span class="u_cbox_nick_area"><span class="u_cbox_nick">관악산군고구마</span></span></span></span></span><span class="u_cbox_info_sub"></span></div><div class="u_cbox_text_wrap"><span class="u_cbox_contents" data-lang="ko">좋은 글 감사합니다!</span></div><div class="u_cbox_info_base"><span class="u_cbox_date" data-value="2022-06-14T09:57:26+0900">2022-06-14 09:57</span></div><div class="u_cbox_tool"><a href="#" role="button" aria-expanded="false" class="u_cbox_btn_reply" data-action="reply#toggle" data-param="760728307732840698" data-log="RPC.replyopen#RPC.replyclose"><strong class="u_cbox_reply_txt">답글</strong><span class="u_cbox_reply_cnt u_vc">0</span></a><div class="u_cbox_recomm_set"><strong class="u_vc">공감/비공감</strong><a href="#" data-action="vote" data-param="mine:false,commentNo:'760728307732840698',voteStatus:'SYMPATHY',objectId:'7553804',ticket:'d2'" data-log="RPC.sym#RPC.unsym" class="u_cbox_btn_recomm"><span class="u_cbox_ico_recomm">공감</span><em class="u_cbox_cnt_recomm">1</em></a><a href="#" data-action="vote" data-param="mine:false,commentNo:'760728307732840698',voteStatus:'ANTIPATHY',objectId:'7553804',ticket:'d2'" data-log="RPC.dis#RPC.undis" class="u_cbox_btn_unrecomm"><span class="u_cbox_ico_unrecomm">비공감</span><em class="u_cbox_cnt_unrecomm">0</em></a></div></div><span class="u_cbox_comment_frame"><span class="u_cbox_ico_tip"></span><span class="u_cbox_comment_frame_top"><span class="u_cbox_comment_bg_r"></span><span class="u_cbox_comment_bg_l"></span></span><span class="u_cbox_comment_frame_bottom"><span class="u_cbox_comment_bg_r"></span><span class="u_cbox_comment_bg_l"></span></span></span></div></div><div class="u_cbox_reply_area" style="display:none;"></div></li><li class="u_cbox_comment cbox_module__comment_760367340746441005 _user_id_no_1rymV" data-info="commentNo:'760367340746441005',deleted:false,best:false,visible:true,secret:false,manager:false,mine:false,report:undefined,blindReport:false,objectId:'7553804',replyLevel:1,parentCommentNo:'760367340746441005',pick:false"><div class="u_cbox_comment_box"><div class="u_cbox_area"><div class="u_cbox_info"><span class="u_cbox_info_main"><span class="u_cbox_name"><span class="u_cbox_name_area"><span class="u_cbox_nick_area"><span class="u_cbox_nick">고온다습</span></span></span></span></span><span class="u_cbox_info_sub"></span></div><div class="u_cbox_text_wrap"><span class="u_cbox_contents" data-lang="ko">터보레포 관심을 가지고 있었는데 너무 잘 정리해 주셨네요.
좋은글 감사합니다.</span></div><div class="u_cbox_info_base"><span class="u_cbox_date" data-value="2022-06-10T12:34:29+0900">2022-06-10 12:34</span></div><div class="u_cbox_tool"><a href="#" role="button" aria-expanded="false" class="u_cbox_btn_reply" data-action="reply#toggle" data-param="760367340746441005" data-log="RPC.replyopen#RPC.replyclose"><strong class="u_cbox_reply_txt">답글</strong><span class="u_cbox_reply_cnt u_vc">0</span></a><div class="u_cbox_recomm_set"><strong class="u_vc">공감/비공감</strong><a href="#" data-action="vote" data-param="mine:false,commentNo:'760367340746441005',voteStatus:'SYMPATHY',objectId:'7553804',ticket:'d2'" data-log="RPC.sym#RPC.unsym" class="u_cbox_btn_recomm"><span class="u_cbox_ico_recomm">공감</span><em class="u_cbox_cnt_recomm">1</em></a><a href="#" data-action="vote" data-param="mine:false,commentNo:'760367340746441005',voteStatus:'ANTIPATHY',objectId:'7553804',ticket:'d2'" data-log="RPC.dis#RPC.undis" class="u_cbox_btn_unrecomm"><span class="u_cbox_ico_unrecomm">비공감</span><em class="u_cbox_cnt_unrecomm">0</em></a></div></div><span class="u_cbox_comment_frame"><span class="u_cbox_ico_tip"></span><span class="u_cbox_comment_frame_top"><span class="u_cbox_comment_bg_r"></span><span class="u_cbox_comment_bg_l"></span></span><span class="u_cbox_comment_frame_bottom"><span class="u_cbox_comment_bg_r"></span><span class="u_cbox_comment_bg_l"></span></span></span></div></div><div class="u_cbox_reply_area" style="display:none;"></div></li><li class="u_cbox_comment cbox_module__comment_757415431232291280 _user_id_no_3N1X3" data-info="commentNo:'757415431232291280',deleted:false,best:false,visible:true,secret:false,manager:false,mine:false,report:undefined,blindReport:false,objectId:'7553804',replyLevel:1,parentCommentNo:'757415431232291280',pick:false"><div class="u_cbox_comment_box"><div class="u_cbox_area"><div class="u_cbox_info"><span class="u_cbox_info_main"><span class="u_cbox_name"><span class="u_cbox_name_area"><span class="u_cbox_nick_area"><span class="u_cbox_nick">lunasflow</span></span></span></span></span><span class="u_cbox_info_sub"></span></div><div class="u_cbox_text_wrap"><span class="u_cbox_contents" data-lang="ko">2022년 5월에 Nx의 개발사 Nwrl이 Lerna 프로젝트 관리 권한을 인수하였습니다. https://github.com/lerna/lerna/issues/3121</span></div><div class="u_cbox_info_base"><span class="u_cbox_date" data-value="2022-05-09T16:54:49+0900">2022-05-09 16:54</span></div><div class="u_cbox_tool"><a href="#" role="button" aria-expanded="false" class="u_cbox_btn_reply" data-action="reply#toggle" data-param="757415431232291280" data-log="RPC.replyopen#RPC.replyclose"><strong class="u_cbox_reply_txt">답글</strong><span class="u_cbox_reply_cnt u_vc">0</span></a><div class="u_cbox_recomm_set"><strong class="u_vc">공감/비공감</strong><a href="#" data-action="vote" data-param="mine:false,commentNo:'757415431232291280',voteStatus:'SYMPATHY',objectId:'7553804',ticket:'d2'" data-log="RPC.sym#RPC.unsym" class="u_cbox_btn_recomm"><span class="u_cbox_ico_recomm">공감</span><em class="u_cbox_cnt_recomm">1</em></a><a href="#" data-action="vote" data-param="mine:false,commentNo:'757415431232291280',voteStatus:'ANTIPATHY',objectId:'7553804',ticket:'d2'" data-log="RPC.dis#RPC.undis" class="u_cbox_btn_unrecomm"><span class="u_cbox_ico_unrecomm">비공감</span><em class="u_cbox_cnt_unrecomm">0</em></a></div></div><span class="u_cbox_comment_frame"><span class="u_cbox_ico_tip"></span><span class="u_cbox_comment_frame_top"><span class="u_cbox_comment_bg_r"></span><span class="u_cbox_comment_bg_l"></span></span><span class="u_cbox_comment_frame_bottom"><span class="u_cbox_comment_bg_r"></span><span class="u_cbox_comment_bg_l"></span></span></span></div></div><div class="u_cbox_reply_area" style="display:none;"></div></li><li class="u_cbox_comment cbox_module__comment_757393855296307694 _user_id_no_omrn" data-info="commentNo:'757393855296307694',deleted:false,best:false,visible:true,secret:false,manager:false,mine:false,report:undefined,blindReport:false,objectId:'7553804',replyLevel:1,parentCommentNo:'757393855296307694',pick:false"><div class="u_cbox_comment_box"><div class="u_cbox_area"><div class="u_cbox_info"><span class="u_cbox_info_main"><span class="u_cbox_name"><span class="u_cbox_name_area"><span class="u_cbox_nick_area"><span class="u_cbox_nick">공중의새</span></span></span></span></span><span class="u_cbox_info_sub"></span></div><div class="u_cbox_text_wrap"><span class="u_cbox_contents" data-lang="ko">좋은글 감사합니다. 멀티레포에서 모노레포로 구성해야겠네요. 역시 Nx 구글팀 너무 열심히 일하네요. 짱짱맨</span></div><div class="u_cbox_info_base"><span class="u_cbox_date" data-value="2022-05-09T11:19:56+0900">2022-05-09 11:19</span></div><div class="u_cbox_tool"><a href="#" role="button" aria-expanded="false" class="u_cbox_btn_reply" data-action="reply#toggle" data-param="757393855296307694" data-log="RPC.replyopen#RPC.replyclose"><strong class="u_cbox_reply_txt">답글</strong><span class="u_cbox_reply_cnt u_vc">0</span></a><div class="u_cbox_recomm_set"><strong class="u_vc">공감/비공감</strong><a href="#" data-action="vote" data-param="mine:false,commentNo:'757393855296307694',voteStatus:'SYMPATHY',objectId:'7553804',ticket:'d2'" data-log="RPC.sym#RPC.unsym" class="u_cbox_btn_recomm"><span class="u_cbox_ico_recomm">공감</span><em class="u_cbox_cnt_recomm">1</em></a><a href="#" data-action="vote" data-param="mine:false,commentNo:'757393855296307694',voteStatus:'ANTIPATHY',objectId:'7553804',ticket:'d2'" data-log="RPC.dis#RPC.undis" class="u_cbox_btn_unrecomm"><span class="u_cbox_ico_unrecomm">비공감</span><em class="u_cbox_cnt_unrecomm">1</em></a></div></div><span class="u_cbox_comment_frame"><span class="u_cbox_ico_tip"></span><span class="u_cbox_comment_frame_top"><span class="u_cbox_comment_bg_r"></span><span class="u_cbox_comment_bg_l"></span></span><span class="u_cbox_comment_frame_bottom"><span class="u_cbox_comment_bg_r"></span><span class="u_cbox_comment_bg_l"></span></span></span></div></div><div class="u_cbox_reply_area" style="display:none;"></div></li></ul></div><div class="u_cbox_paginate" style=""><div class="u_cbox_page_wrap"><span class="u_cbox_pre u_cbox_pre_end" title="첫 페이지 목록으로 이동하기"><span class="u_cbox_ico_page"></span><span class="u_cbox_cnt_page">맨앞</span><span class="u_vc">페이지 목록으로 이동하기</span></span><span class="u_cbox_pre" title="이전 페이지 목록으로 이동하기"><span class="u_cbox_ico_page"></span><span class="u_cbox_cnt_page">이전</span><span class="u_vc">페이지 목록으로 이동하기</span></span><strong class="u_cbox_page" data-param="1"><span class="u_cbox_num_page">1</span><span class="u_vc">현재 선택된 페이지</span></strong><a href="#" class="u_cbox_page" data-action="page#move" data-log="RPC.pgnum" data-param="2"><span class="u_cbox_num_page">2</span></a><span class="u_cbox_next" title="다음 페이지 목록으로 이동하기"><span class="u_cbox_cnt_page">다음</span><span class="u_cbox_ico_page"></span><span class="u_vc">페이지 목록으로 이동하기</span></span><a href="#" class="u_cbox_next u_cbox_next_end" title="마지막 페이지 목록으로 이동하기" data-action="page#move" data-log="RPC.pglast" data-param="2"><span class="u_cbox_cnt_page">맨뒤</span><span class="u_cbox_ico_page"></span><span class="u_vc">페이지 목록으로 이동하기</span></a></div></div></div></div></div></div></div><div id="footer"><div class="inner_sec"><div class="footer_sec"><ul class="other_site"><li><a href="https://developers.naver.com/" target="_blank" class="developers">NAVER Developers</a></li><li><a href="https://techcon.naver.com/" target="_blank" class="techcon">NAVER TECH CONCERT</a></li><li><a href="https://deview.kr/" target="_blank" class="deview">DEVIEW</a></li><li><a href="https://naver.github.io/" target="_blank" class="opensource">OpenSource</a></li><li><a href="http://www.d2startup.com/" target="_blank" class="startup">D2 STARTUP FACTORY</a></li></ul><div class="sns_share"><ul><li class="email"><a href="mailto:d2@navercorp.com"><i class="xi-mail"></i></a></li><li class="facebook"><a href="https://facebook.com/naverd2" target="_blank"><i class="xi-facebook"></i></a></li><li class="rss"><a href="https://d2.naver.com/d2.atom" target="_blank"><i class="xi-social-rssfeed"></i></a></li></ul></div></div><div class="footer_sec"><div class="copyright"><p><span>Copyright</span> © <a href="https://www.navercorp.com/" target="_blank">NAVER Corp.</a> <span>All Rights Reserved.</span></p></div><a href="#" class="btn_go_top" style="bottom: 20px; right: 0px;"></a></div></div></div></div></div><i classname="xi-search">
<script id="facebook-jssdk" src="https://connect.facebook.net/ko_KR/sdk.js#xfbml=1&amp;version=v2.11&amp;appId=816454888441763"></script><script async="" src="//www.google-analytics.com/analytics.js" id="google-analytics"></script><script async="" src="https://wcs.naver.net/wcslog.js" id="naver-analytics"></script><script type="text/javascript" src="/static/js/app.js?13c1e9311ca34225bfc0"></script>

</i><div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; width: 0px; height: 0px;"><div></div></div></div></body></html>