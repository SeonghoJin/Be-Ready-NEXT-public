<!doctype html>
<html lang="ko-KR" prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb#">
<head><style>img.lazy{min-height:1px}</style><link rel="preload" href="https://tech.kakao.com/wp-content/plugins/w3-total-cache/pub/js/lazyload.min.js" as="script">
	<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="profile" href="https://gmpg.org/xfn/11">
	<title>카카오톡 Java App Server Refactoring 후기 &#8211; tech.kakao.com</title>
<meta name='robots' content='max-image-preview:large' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="tech.kakao.com &raquo; 피드" href="https://tech.kakao.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="tech.kakao.com &raquo; 댓글 피드" href="https://tech.kakao.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="tech.kakao.com &raquo; 카카오톡 Java App Server Refactoring 후기 댓글 피드" href="https://tech.kakao.com/2023/01/19/kakaotalk-java-app-server-refactoring/feed/" />
<script type="text/javascript">
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/tech.kakao.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.9.2"}};
/*! This file is auto-generated */
!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([10084,65039,8205,55357,56613],[10084,65039,8203,55357,56613])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);
</script>
<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 0.07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='wp-block-library-css'  href='https://tech.kakao.com/wp-includes/css/dist/block-library/style.min.css?ver=5.9.2' type='text/css' media='all' />
<style id='global-styles-inline-css' type='text/css'>
body{--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--duotone--dark-grayscale: url('#wp-duotone-dark-grayscale');--wp--preset--duotone--grayscale: url('#wp-duotone-grayscale');--wp--preset--duotone--purple-yellow: url('#wp-duotone-purple-yellow');--wp--preset--duotone--blue-red: url('#wp-duotone-blue-red');--wp--preset--duotone--midnight: url('#wp-duotone-midnight');--wp--preset--duotone--magenta-yellow: url('#wp-duotone-magenta-yellow');--wp--preset--duotone--purple-green: url('#wp-duotone-purple-green');--wp--preset--duotone--blue-orange: url('#wp-duotone-blue-orange');--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
</style>
<link rel='stylesheet' id='ppress-frontend-css'  href='https://tech.kakao.com/wp-content/plugins/wp-user-avatar/assets/css/frontend.min.css?ver=3.2.8' type='text/css' media='all' />
<link rel='stylesheet' id='ppress-flatpickr-css'  href='https://tech.kakao.com/wp-content/plugins/wp-user-avatar/assets/flatpickr/flatpickr.min.css?ver=3.2.8' type='text/css' media='all' />
<link rel='stylesheet' id='ppress-select2-css'  href='https://tech.kakao.com/wp-content/plugins/wp-user-avatar/assets/select2/select2.min.css?ver=5.9.2' type='text/css' media='all' />
<link rel='stylesheet' id='hello-elementor-css'  href='https://tech.kakao.com/wp-content/themes/hello-elementor/style.min.css?ver=2.5.0' type='text/css' media='all' />
<link rel='stylesheet' id='hello-elementor-theme-style-css'  href='https://tech.kakao.com/wp-content/themes/hello-elementor/theme.min.css?ver=2.5.0' type='text/css' media='all' />
<link rel='stylesheet' id='elementor-icons-css'  href='https://tech.kakao.com/wp-content/plugins/elementor/assets/lib/eicons/css/elementor-icons.min.css?ver=5.14.0' type='text/css' media='all' />
<link rel='stylesheet' id='elementor-frontend-legacy-css'  href='https://tech.kakao.com/wp-content/plugins/elementor/assets/css/frontend-legacy.min.css?ver=3.5.5' type='text/css' media='all' />
<link rel='stylesheet' id='elementor-frontend-css'  href='https://tech.kakao.com/wp-content/plugins/elementor/assets/css/frontend.min.css?ver=3.5.5' type='text/css' media='all' />
<link rel='stylesheet' id='elementor-post-14036-css'  href='https://tech.kakao.com/wp-content/uploads/elementor/css/post-14036.css?ver=1657501530' type='text/css' media='all' />
<link rel='stylesheet' id='elementor-pro-css'  href='https://tech.kakao.com/wp-content/plugins/elementor-pro/assets/css/frontend.min.css?ver=3.6.2' type='text/css' media='all' />
<link rel='stylesheet' id='font-awesome-5-all-css'  href='https://tech.kakao.com/wp-content/plugins/elementor/assets/lib/font-awesome/css/all.min.css?ver=3.5.5' type='text/css' media='all' />
<link rel='stylesheet' id='font-awesome-4-shim-css'  href='https://tech.kakao.com/wp-content/plugins/elementor/assets/lib/font-awesome/css/v4-shims.min.css?ver=3.5.5' type='text/css' media='all' />
<link rel='stylesheet' id='elementor-post-21399-css'  href='https://tech.kakao.com/wp-content/uploads/elementor/css/post-21399.css?ver=1674124490' type='text/css' media='all' />
<link rel='stylesheet' id='elementor-post-14067-css'  href='https://tech.kakao.com/wp-content/uploads/elementor/css/post-14067.css?ver=1657501530' type='text/css' media='all' />
<link rel='stylesheet' id='elementor-post-14125-css'  href='https://tech.kakao.com/wp-content/uploads/elementor/css/post-14125.css?ver=1669610496' type='text/css' media='all' />
<link rel='stylesheet' id='elementor-post-14069-css'  href='https://tech.kakao.com/wp-content/uploads/elementor/css/post-14069.css?ver=1673229877' type='text/css' media='all' />
<link rel='stylesheet' id='tablepress-default-css'  href='https://tech.kakao.com/wp-content/plugins/tablepress/css/default.min.css?ver=1.14' type='text/css' media='all' />
<link rel='stylesheet' id='eael-general-css'  href='https://tech.kakao.com/wp-content/plugins/essential-addons-for-elementor-lite/assets/front-end/css/view/general.min.css?ver=5.5.0' type='text/css' media='all' />
<link rel='stylesheet' id='google-fonts-1-css'  href='https://fonts.googleapis.com/css?family=Roboto%3A100%2C100italic%2C200%2C200italic%2C300%2C300italic%2C400%2C400italic%2C500%2C500italic%2C600%2C600italic%2C700%2C700italic%2C800%2C800italic%2C900%2C900italic%7CRoboto+Slab%3A100%2C100italic%2C200%2C200italic%2C300%2C300italic%2C400%2C400italic%2C500%2C500italic%2C600%2C600italic%2C700%2C700italic%2C800%2C800italic%2C900%2C900italic%7CMontserrat%3A100%2C100italic%2C200%2C200italic%2C300%2C300italic%2C400%2C400italic%2C500%2C500italic%2C600%2C600italic%2C700%2C700italic%2C800%2C800italic%2C900%2C900italic%7CRubik%3A100%2C100italic%2C200%2C200italic%2C300%2C300italic%2C400%2C400italic%2C500%2C500italic%2C600%2C600italic%2C700%2C700italic%2C800%2C800italic%2C900%2C900italic&#038;display=auto&#038;ver=5.9.2' type='text/css' media='all' />
<link rel='stylesheet' id='elementor-icons-shared-0-css'  href='https://tech.kakao.com/wp-content/plugins/elementor/assets/lib/font-awesome/css/fontawesome.min.css?ver=5.15.3' type='text/css' media='all' />
<link rel='stylesheet' id='elementor-icons-fa-solid-css'  href='https://tech.kakao.com/wp-content/plugins/elementor/assets/lib/font-awesome/css/solid.min.css?ver=5.15.3' type='text/css' media='all' />
<script type='text/javascript' src='https://tech.kakao.com/wp-includes/js/jquery/jquery.min.js?ver=3.6.0' id='jquery-core-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2' id='jquery-migrate-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/wp-user-avatar/assets/flatpickr/flatpickr.min.js?ver=5.9.2' id='ppress-flatpickr-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/wp-user-avatar/assets/select2/select2.min.js?ver=5.9.2' id='ppress-select2-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/elementor/assets/lib/font-awesome/js/v4-shims.min.js?ver=3.5.5' id='font-awesome-4-shim-js'></script>
<link rel="https://api.w.org/" href="https://tech.kakao.com/wp-json/" /><link rel="alternate" type="application/json" href="https://tech.kakao.com/wp-json/wp/v2/posts/21399" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://tech.kakao.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://tech.kakao.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 5.9.2" />
<link rel="canonical" href="https://tech.kakao.com/2023/01/19/kakaotalk-java-app-server-refactoring/" />
<link rel='shortlink' href='https://tech.kakao.com/?p=21399' />
<link rel="alternate" type="application/json+oembed" href="https://tech.kakao.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Ftech.kakao.com%2F2023%2F01%2F19%2Fkakaotalk-java-app-server-refactoring%2F" />
<link rel="alternate" type="text/xml+oembed" href="https://tech.kakao.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Ftech.kakao.com%2F2023%2F01%2F19%2Fkakaotalk-java-app-server-refactoring%2F&#038;format=xml" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-72007721-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-72007721-1');
</script>


<!-- START - Open Graph and Twitter Card Tags 3.1.2 -->
 <!-- Facebook Open Graph -->
  <meta property="og:locale" content="ko_KR"/>
  <meta property="og:site_name" content="tech.kakao.com"/>
  <meta property="og:title" content="카카오톡 Java App Server Refactoring 후기"/>
  <meta property="og:url" content="https://tech.kakao.com/2023/01/19/kakaotalk-java-app-server-refactoring/"/>
  <meta property="og:type" content="article"/>
  <meta property="og:description" content="안녕하세요, 카카오톡 메시징 파트에서 메시징 서버를 개발하고 있는 Soo입니다. 취미가 직업이 된 지 어느덧 8,000일이 넘어가고 있는 개발자입니다. 2019년 말에 톡 메시징 파트에 합류하여 기술 부채를 정리하는 데 관심이 많아, 제 업무 중 내부 코드의 개선 작업의 비중이 높은 편입니다. 또한, 저는 평소에 유지 보수가 용이하고, 테스트하기 쉬운 코드를 구현하는데 관심이 많았습니다. 최근에는 카카오톡 라이브 서비스에 사용하는 Java App Server에 있는 레거시 코드를 리팩토링 하는 업무를 담당했고, 어렵고 복잡한 코드를"/>
  <meta property="og:image" content="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_12023-01-19-052621-0000.jpg"/>
  <meta property="og:image:url" content="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_12023-01-19-052621-0000.jpg"/>
  <meta property="og:image:secure_url" content="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_12023-01-19-052621-0000.jpg"/>
  <meta property="article:published_time" content="2023-01-19T14:45:57+09:00"/>
  <meta property="article:modified_time" content="2023-01-19T19:34:25+09:00" />
  <meta property="og:updated_time" content="2023-01-19T19:34:25+09:00" />
  <meta property="article:section" content="blog"/>
  <meta property="article:publisher" content="https://www.facebook.com/kakaotech/"/>
 <!-- Google+ / Schema.org -->
  <meta itemprop="name" content="카카오톡 Java App Server Refactoring 후기"/>
  <meta itemprop="headline" content="카카오톡 Java App Server Refactoring 후기"/>
  <meta itemprop="description" content="안녕하세요, 카카오톡 메시징 파트에서 메시징 서버를 개발하고 있는 Soo입니다. 취미가 직업이 된 지 어느덧 8,000일이 넘어가고 있는 개발자입니다. 2019년 말에 톡 메시징 파트에 합류하여 기술 부채를 정리하는 데 관심이 많아, 제 업무 중 내부 코드의 개선 작업의 비중이 높은 편입니다. 또한, 저는 평소에 유지 보수가 용이하고, 테스트하기 쉬운 코드를 구현하는데 관심이 많았습니다. 최근에는 카카오톡 라이브 서비스에 사용하는 Java App Server에 있는 레거시 코드를 리팩토링 하는 업무를 담당했고, 어렵고 복잡한 코드를"/>
  <meta itemprop="image" content="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_12023-01-19-052621-0000.jpg"/>
  <meta itemprop="datePublished" content="2023-01-19"/>
  <meta itemprop="dateModified" content="2023-01-19T19:34:25+09:00" />
  <meta itemprop="author" content="soo.lee"/>
  <!--<meta itemprop="publisher" content="tech.kakao.com"/>--> <!-- To solve: The attribute publisher.itemtype has an invalid value -->
 <!-- Twitter Cards -->
  <meta name="twitter:title" content="카카오톡 Java App Server Refactoring 후기"/>
  <meta name="twitter:url" content="https://tech.kakao.com/2023/01/19/kakaotalk-java-app-server-refactoring/"/>
  <meta name="twitter:description" content="안녕하세요, 카카오톡 메시징 파트에서 메시징 서버를 개발하고 있는 Soo입니다. 취미가 직업이 된 지 어느덧 8,000일이 넘어가고 있는 개발자입니다. 2019년 말에 톡 메시징 파트에 합류하여 기술 부채를 정리하는 데 관심이 많아, 제 업무 중 내부 코드의 개선 작업의 비중이 높은 편입니다. 또한, 저는 평소에 유지 보수가 용이하고, 테스트하기 쉬운 코드를 구현하는데 관심이 많았습니다. 최근에는 카카오톡 라이브 서비스에 사용하는 Java App Server에 있는 레거시 코드를 리팩토링 하는 업무를 담당했고, 어렵고 복잡한 코드를"/>
  <meta name="twitter:image" content="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_12023-01-19-052621-0000.jpg"/>
  <meta name="twitter:card" content="summary_large_image"/>
 <!-- SEO -->
 <!-- Misc. tags -->
 <!-- is_singular -->
<!-- END - Open Graph and Twitter Card Tags 3.1.2 -->
	
</head>
<body class="post-template-default single single-post postid-21399 single-format-standard wp-custom-logo elementor-default elementor-kit-14036 elementor-page elementor-page-21399 elementor-page-14069">

<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-dark-grayscale"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0 0.49803921568627" /><feFuncG type="table" tableValues="0 0.49803921568627" /><feFuncB type="table" tableValues="0 0.49803921568627" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-grayscale"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0 1" /><feFuncG type="table" tableValues="0 1" /><feFuncB type="table" tableValues="0 1" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-purple-yellow"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0.54901960784314 0.98823529411765" /><feFuncG type="table" tableValues="0 1" /><feFuncB type="table" tableValues="0.71764705882353 0.25490196078431" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-blue-red"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0 1" /><feFuncG type="table" tableValues="0 0.27843137254902" /><feFuncB type="table" tableValues="0.5921568627451 0.27843137254902" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-midnight"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0 0" /><feFuncG type="table" tableValues="0 0.64705882352941" /><feFuncB type="table" tableValues="0 1" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-magenta-yellow"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0.78039215686275 1" /><feFuncG type="table" tableValues="0 0.94901960784314" /><feFuncB type="table" tableValues="0.35294117647059 0.47058823529412" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-purple-green"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0.65098039215686 0.40392156862745" /><feFuncG type="table" tableValues="0 1" /><feFuncB type="table" tableValues="0.44705882352941 0.4" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 0 0" width="0" height="0" focusable="false" role="none" style="visibility: hidden; position: absolute; left: -9999px; overflow: hidden;" ><defs><filter id="wp-duotone-blue-orange"><feColorMatrix color-interpolation-filters="sRGB" type="matrix" values=" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 " /><feComponentTransfer color-interpolation-filters="sRGB" ><feFuncR type="table" tableValues="0.098039215686275 1" /><feFuncG type="table" tableValues="0 0.66274509803922" /><feFuncB type="table" tableValues="0.84705882352941 0.41960784313725" /><feFuncA type="table" tableValues="1 1" /></feComponentTransfer><feComposite in2="SourceGraphic" operator="in" /></filter></defs></svg>		<div data-elementor-type="header" data-elementor-id="14067" class="elementor elementor-14067 elementor-location-header" data-elementor-settings="[]">
					<div class="elementor-section-wrap">
								<section class="elementor-section elementor-top-section elementor-element elementor-element-6c1adf98 elementor-section-full_width elementor-section-height-min-height elementor-section-items-stretch elementor-section-height-default" data-id="6c1adf98" data-element_type="section" data-settings="{&quot;sticky&quot;:&quot;top&quot;,&quot;background_background&quot;:&quot;classic&quot;,&quot;sticky_on&quot;:[&quot;desktop&quot;,&quot;tablet&quot;,&quot;mobile&quot;],&quot;sticky_offset&quot;:0,&quot;sticky_effects_offset&quot;:0}">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-33 elementor-top-column elementor-element elementor-element-229f3ddd" data-id="229f3ddd" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-2dbb6b2 elementor-widget elementor-widget-theme-site-logo elementor-widget-image" data-id="2dbb6b2" data-element_type="widget" data-widget_type="theme-site-logo.default">
				<div class="elementor-widget-container">
								<div class="elementor-image">
													<a href="https://tech.kakao.com">
							<img class="lazy" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20150%2037'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2022/02/kakao-tech-logo-1-e1649831117387.png" title="kakao-tech-logo" alt="kakao-tech-logo" />								</a>
														</div>
						</div>
				</div>
						</div>
					</div>
		</div>
				<div class="elementor-column elementor-col-33 elementor-top-column elementor-element elementor-element-59ac0e16" data-id="59ac0e16" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-5415ee3 elementor-nav-menu__align-right elementor-nav-menu--stretch elementor-nav-menu__text-align-center elementor-nav-menu--dropdown-tablet elementor-nav-menu--toggle elementor-nav-menu--burger elementor-widget elementor-widget-nav-menu" data-id="5415ee3" data-element_type="widget" data-settings="{&quot;full_width&quot;:&quot;stretch&quot;,&quot;layout&quot;:&quot;horizontal&quot;,&quot;submenu_icon&quot;:{&quot;value&quot;:&quot;&lt;i class=\&quot;fas fa-caret-down\&quot;&gt;&lt;\/i&gt;&quot;,&quot;library&quot;:&quot;fa-solid&quot;},&quot;toggle&quot;:&quot;burger&quot;}" data-widget_type="nav-menu.default">
				<div class="elementor-widget-container">
						<nav migration_allowed="1" migrated="0" role="navigation" class="elementor-nav-menu--main elementor-nav-menu__container elementor-nav-menu--layout-horizontal e--pointer-text e--animation-sink">
				<ul id="menu-1-5415ee3" class="elementor-nav-menu"><li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-15768"><a href="https://tech.kakao.com/blog/" class="elementor-item">Blog</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-15767"><a href="https://tech.kakao.com/events/" class="elementor-item">Events</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-15766"><a href="https://tech.kakao.com/careers/" class="elementor-item">Careers</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-16081"><a href="https://developers.kakao.com/" class="elementor-item">Kakao Developers</a></li>
</ul>			</nav>
					<div class="elementor-menu-toggle" role="button" tabindex="0" aria-label="Menu Toggle" aria-expanded="false">
			<i aria-hidden="true" role="presentation" class="elementor-menu-toggle__icon--open eicon-menu-bar"></i><i aria-hidden="true" role="presentation" class="elementor-menu-toggle__icon--close eicon-close"></i>			<span class="elementor-screen-only">Menu</span>
		</div>
			<nav class="elementor-nav-menu--dropdown elementor-nav-menu__container" role="navigation" aria-hidden="true">
				<ul id="menu-2-5415ee3" class="elementor-nav-menu"><li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-15768"><a href="https://tech.kakao.com/blog/" class="elementor-item" tabindex="-1">Blog</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-15767"><a href="https://tech.kakao.com/events/" class="elementor-item" tabindex="-1">Events</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-15766"><a href="https://tech.kakao.com/careers/" class="elementor-item" tabindex="-1">Careers</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-16081"><a href="https://developers.kakao.com/" class="elementor-item" tabindex="-1">Kakao Developers</a></li>
</ul>			</nav>
				</div>
				</div>
						</div>
					</div>
		</div>
				<div class="elementor-column elementor-col-33 elementor-top-column elementor-element elementor-element-919f6e1 elementor-hidden-mobile" data-id="919f6e1" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-093b07c elementor-search-form--skin-minimal elementor-widget elementor-widget-search-form" data-id="093b07c" data-element_type="widget" data-settings="{&quot;skin&quot;:&quot;minimal&quot;}" data-widget_type="search-form.default">
				<div class="elementor-widget-container">
					<form class="elementor-search-form" role="search" action="https://tech.kakao.com" method="get">
									<div class="elementor-search-form__container">
									<div class="elementor-search-form__icon">
						<i aria-hidden="true" class="fas fa-arrow-right"></i>						<span class="elementor-screen-only">Search</span>
					</div>
								<input placeholder="검색하기" class="elementor-search-form__input" type="search" name="s" title="Search" value="">
															</div>
		</form>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
							</div>
				</div>
				<div data-elementor-type="single-post" data-elementor-id="14069" class="elementor elementor-14069 elementor-location-single post-21399 post type-post status-publish format-standard has-post-thumbnail hentry category-blog tag-context-class tag-cyclomatic-complexity tag-java tag-jshell tag-npath-complexity tag-refactoring tag-springboot tag-unit-test tag-824 tag-829 tag-825 tag-830 tag-826 tag-833" data-elementor-settings="[]">
					<div class="elementor-section-wrap">
								<section class="elementor-section elementor-top-section elementor-element elementor-element-2509fe18 elementor-reverse-mobile elementor-section-full_width elementor-section-height-default elementor-section-height-default" data-id="2509fe18" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-25 elementor-top-column elementor-element elementor-element-f693fc6 elementor-hidden-mobile" data-id="f693fc6" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-1875eb1 elementor-widget elementor-widget-spacer" data-id="1875eb1" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
				<div class="elementor-element elementor-element-247fe1c7 elementor-author-box--layout-image-above elementor-author-box--align-left exclude-from-toc elementor-author-box--avatar-yes elementor-author-box--name-yes elementor-author-box--biography-yes elementor-author-box--link-no elementor-widget elementor-widget-author-box" data-id="247fe1c7" data-element_type="widget" data-widget_type="author-box.default">
				<div class="elementor-widget-container">
					<div class="elementor-author-box">
							<div  class="elementor-author-box__avatar">
					<img class="lazy" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20200%20224'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_142023-01-19-052621-0000.jpg" alt="soo.lee">
				</div>
			
			<div class="elementor-author-box__text">
									<div >
						<h4 class="elementor-author-box__name">
							soo.lee						</h4>
					</div>
				
									<div class="elementor-author-box__bio">
						카카오 톡메시징파트에서 메시징 서버를 개발하고 있습니다. 유지 보수성, 테스트 용이성이 높은 구조를 좋아합니다.					</div>
				
							</div>
		</div>
				</div>
				</div>
				<div class="elementor-element elementor-element-8946f87 elementor-widget elementor-widget-spacer" data-id="8946f87" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
				<div class="elementor-element elementor-element-2979eb19 exclude-from-toc elementor-widget elementor-widget-wp-widget-tag_cloud" data-id="2979eb19" data-element_type="widget" data-widget_type="wp-widget-tag_cloud.default">
				<div class="elementor-widget-container">
			<h5>태그</h5><div class="tagcloud"><a href="https://tech.kakao.com/tag/2022_blind/" class="tag-cloud-link tag-link-772 tag-link-position-1" style="font-size: 10.854368932039pt;" aria-label="2022_blind (12 아이템)">2022_blind</a>
<a href="https://tech.kakao.com/tag/agile/" class="tag-cloud-link tag-link-536 tag-link-position-2" style="font-size: 8pt;" aria-label="agile (7 아이템)">agile</a>
<a href="https://tech.kakao.com/tag/ai/" class="tag-cloud-link tag-link-9 tag-link-position-3" style="font-size: 11.398058252427pt;" aria-label="ai (13 아이템)">ai</a>
<a href="https://tech.kakao.com/tag/android/" class="tag-cloud-link tag-link-529 tag-link-position-4" style="font-size: 8.6796116504854pt;" aria-label="android (8 아이템)">android</a>
<a href="https://tech.kakao.com/tag/blind-recruitment/" class="tag-cloud-link tag-link-16 tag-link-position-5" style="font-size: 13.436893203883pt;" aria-label="blind-recruitment (19 아이템)">blind-recruitment</a>
<a href="https://tech.kakao.com/tag/career/" class="tag-cloud-link tag-link-710 tag-link-position-6" style="font-size: 20.912621359223pt;" aria-label="career (69 아이템)">career</a>
<a href="https://tech.kakao.com/tag/client/" class="tag-cloud-link tag-link-541 tag-link-position-7" style="font-size: 8.6796116504854pt;" aria-label="client (8 아이템)">client</a>
<a href="https://tech.kakao.com/tag/cloud/" class="tag-cloud-link tag-link-437 tag-link-position-8" style="font-size: 10.446601941748pt;" aria-label="cloud (11 아이템)">cloud</a>
<a href="https://tech.kakao.com/tag/coding/" class="tag-cloud-link tag-link-29 tag-link-position-9" style="font-size: 13.436893203883pt;" aria-label="coding (19 아이템)">coding</a>
<a href="https://tech.kakao.com/tag/coding-test/" class="tag-cloud-link tag-link-483 tag-link-position-10" style="font-size: 8pt;" aria-label="coding test (7 아이템)">coding test</a>
<a href="https://tech.kakao.com/tag/conference/" class="tag-cloud-link tag-link-30 tag-link-position-11" style="font-size: 13.980582524272pt;" aria-label="conference (21 아이템)">conference</a>
<a href="https://tech.kakao.com/tag/data/" class="tag-cloud-link tag-link-387 tag-link-position-12" style="font-size: 8.6796116504854pt;" aria-label="Data (8 아이템)">Data</a>
<a href="https://tech.kakao.com/tag/developer/" class="tag-cloud-link tag-link-443 tag-link-position-13" style="font-size: 11.398058252427pt;" aria-label="developer (13 아이템)">developer</a>
<a href="https://tech.kakao.com/tag/developer-relations/" class="tag-cloud-link tag-link-559 tag-link-position-14" style="font-size: 9.3592233009709pt;" aria-label="developer relations (9 아이템)">developer relations</a>
<a href="https://tech.kakao.com/tag/devops/" class="tag-cloud-link tag-link-36 tag-link-position-15" style="font-size: 9.9029126213592pt;" aria-label="devops (10 아이템)">devops</a>
<a href="https://tech.kakao.com/tag/front-end/" class="tag-cloud-link tag-link-459 tag-link-position-16" style="font-size: 16.019417475728pt;" aria-label="front-end (30 아이템)">front-end</a>
<a href="https://tech.kakao.com/tag/frontend/" class="tag-cloud-link tag-link-548 tag-link-position-17" style="font-size: 14.252427184466pt;" aria-label="frontend (22 아이템)">frontend</a>
<a href="https://tech.kakao.com/tag/get-server/" class="tag-cloud-link tag-link-779 tag-link-position-18" style="font-size: 10.854368932039pt;" aria-label="get-server (12 아이템)">get-server</a>
<a href="https://tech.kakao.com/tag/get-server-10/" class="tag-cloud-link tag-link-780 tag-link-position-19" style="font-size: 8pt;" aria-label="get-server-10 (7 아이템)">get-server-10</a>
<a href="https://tech.kakao.com/tag/growth/" class="tag-cloud-link tag-link-472 tag-link-position-20" style="font-size: 9.9029126213592pt;" aria-label="growth (10 아이템)">growth</a>
<a href="https://tech.kakao.com/tag/hadoop/" class="tag-cloud-link tag-link-48 tag-link-position-21" style="font-size: 8pt;" aria-label="hadoop (7 아이템)">hadoop</a>
<a href="https://tech.kakao.com/tag/ifkakao/" class="tag-cloud-link tag-link-442 tag-link-position-22" style="font-size: 13.980582524272pt;" aria-label="ifkakao (21 아이템)">ifkakao</a>
<a href="https://tech.kakao.com/tag/internship/" class="tag-cloud-link tag-link-484 tag-link-position-23" style="font-size: 13.436893203883pt;" aria-label="internship (19 아이템)">internship</a>
<a href="https://tech.kakao.com/tag/ios/" class="tag-cloud-link tag-link-528 tag-link-position-24" style="font-size: 8pt;" aria-label="ios (7 아이템)">ios</a>
<a href="https://tech.kakao.com/tag/javascript/" class="tag-cloud-link tag-link-469 tag-link-position-25" style="font-size: 10.446601941748pt;" aria-label="javascript (11 아이템)">javascript</a>
<a href="https://tech.kakao.com/tag/kafka/" class="tag-cloud-link tag-link-59 tag-link-position-26" style="font-size: 8pt;" aria-label="kafka (7 아이템)">kafka</a>
<a href="https://tech.kakao.com/tag/kakao/" class="tag-cloud-link tag-link-60 tag-link-position-27" style="font-size: 20.368932038835pt;" aria-label="kakao (64 아이템)">kakao</a>
<a href="https://tech.kakao.com/tag/kakaokrew/" class="tag-cloud-link tag-link-495 tag-link-position-28" style="font-size: 11.805825242718pt;" aria-label="kakaokrew (14 아이템)">kakaokrew</a>
<a href="https://tech.kakao.com/tag/kakaotalk/" class="tag-cloud-link tag-link-534 tag-link-position-29" style="font-size: 8pt;" aria-label="kakaotalk (7 아이템)">kakaotalk</a>
<a href="https://tech.kakao.com/tag/kubernetes/" class="tag-cloud-link tag-link-62 tag-link-position-30" style="font-size: 11.805825242718pt;" aria-label="kubernetes (14 아이템)">kubernetes</a>
<a href="https://tech.kakao.com/tag/machine-learning/" class="tag-cloud-link tag-link-445 tag-link-position-31" style="font-size: 9.9029126213592pt;" aria-label="machine-learning (10 아이템)">machine-learning</a>
<a href="https://tech.kakao.com/tag/meetup/" class="tag-cloud-link tag-link-450 tag-link-position-32" style="font-size: 8.6796116504854pt;" aria-label="meetup (8 아이템)">meetup</a>
<a href="https://tech.kakao.com/tag/new-krew/" class="tag-cloud-link tag-link-456 tag-link-position-33" style="font-size: 19.417475728155pt;" aria-label="new-krew (54 아이템)">new-krew</a>
<a href="https://tech.kakao.com/tag/onboarding/" class="tag-cloud-link tag-link-619 tag-link-position-34" style="font-size: 9.3592233009709pt;" aria-label="onboarding (9 아이템)">onboarding</a>
<a href="https://tech.kakao.com/tag/opensource/" class="tag-cloud-link tag-link-80 tag-link-position-35" style="font-size: 13.165048543689pt;" aria-label="opensource (18 아이템)">opensource</a>
<a href="https://tech.kakao.com/tag/post-server/" class="tag-cloud-link tag-link-781 tag-link-position-36" style="font-size: 8pt;" aria-label="post-server (7 아이템)">post-server</a>
<a href="https://tech.kakao.com/tag/preview/" class="tag-cloud-link tag-link-675 tag-link-position-37" style="font-size: 9.3592233009709pt;" aria-label="preview (9 아이템)">preview</a>
<a href="https://tech.kakao.com/tag/recap/" class="tag-cloud-link tag-link-582 tag-link-position-38" style="font-size: 10.446601941748pt;" aria-label="recap (11 아이템)">recap</a>
<a href="https://tech.kakao.com/tag/recommendation-system/" class="tag-cloud-link tag-link-618 tag-link-position-39" style="font-size: 8pt;" aria-label="recommendation system (7 아이템)">recommendation system</a>
<a href="https://tech.kakao.com/tag/recruitment/" class="tag-cloud-link tag-link-91 tag-link-position-40" style="font-size: 21.592233009709pt;" aria-label="recruitment (78 아이템)">recruitment</a>
<a href="https://tech.kakao.com/tag/seminar/" class="tag-cloud-link tag-link-622 tag-link-position-41" style="font-size: 9.3592233009709pt;" aria-label="seminar (9 아이템)">seminar</a>
<a href="https://tech.kakao.com/tag/server/" class="tag-cloud-link tag-link-489 tag-link-position-42" style="font-size: 9.3592233009709pt;" aria-label="server (9 아이템)">server</a>
<a href="https://tech.kakao.com/tag/tech/" class="tag-cloud-link tag-link-448 tag-link-position-43" style="font-size: 22pt;" aria-label="tech (85 아이템)">tech</a>
<a href="https://tech.kakao.com/tag/techtalk/" class="tag-cloud-link tag-link-621 tag-link-position-44" style="font-size: 11.398058252427pt;" aria-label="Techtalk (13 아이템)">Techtalk</a>
<a href="https://tech.kakao.com/tag/test/" class="tag-cloud-link tag-link-452 tag-link-position-45" style="font-size: 10.446601941748pt;" aria-label="test (11 아이템)">test</a></div>
		</div>
				</div>
						</div>
					</div>
		</div>
				<div class="elementor-column elementor-col-33 elementor-top-column elementor-element elementor-element-5adebe32" data-id="5adebe32" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-392d0d3 elementor-widget elementor-widget-post-info" data-id="392d0d3" data-element_type="widget" data-widget_type="post-info.default">
				<div class="elementor-widget-container">
					<ul class="elementor-inline-items elementor-icon-list-items elementor-post-info">
								<li class="elementor-icon-list-item elementor-repeater-item-a475e37 elementor-inline-item" itemprop="datePublished">
						<a href="https://tech.kakao.com/2023/01/19/">
											<span class="elementor-icon-list-icon">
								<i aria-hidden="true" class="fas fa-calendar"></i>							</span>
									<span class="elementor-icon-list-text elementor-post-info__item elementor-post-info__item--type-date">
										2023-01-19					</span>
									</a>
				</li>
				<li class="elementor-icon-list-item elementor-repeater-item-025fbcc elementor-inline-item" itemprop="author">
						<a href="https://tech.kakao.com/author/soo-lee/">
											<span class="elementor-icon-list-icon">
								<i aria-hidden="true" class="far fa-user-circle"></i>							</span>
									<span class="elementor-icon-list-text elementor-post-info__item elementor-post-info__item--type-author">
										soo.lee					</span>
									</a>
				</li>
				<li class="elementor-icon-list-item elementor-repeater-item-57cbeeb elementor-inline-item" itemprop="about">
										<span class="elementor-icon-list-icon">
								<i aria-hidden="true" class="fas fa-tags"></i>							</span>
									<span class="elementor-icon-list-text elementor-post-info__item elementor-post-info__item--type-terms">
										<span class="elementor-post-info__terms-list">
				<a href="https://tech.kakao.com/tag/context-class/" class="elementor-post-info__terms-list-item">context-class</a>, <a href="https://tech.kakao.com/tag/cyclomatic-complexity/" class="elementor-post-info__terms-list-item">cyclomatic-complexity</a>, <a href="https://tech.kakao.com/tag/java/" class="elementor-post-info__terms-list-item">Java</a>, <a href="https://tech.kakao.com/tag/jshell/" class="elementor-post-info__terms-list-item">jshell</a>, <a href="https://tech.kakao.com/tag/npath-complexity/" class="elementor-post-info__terms-list-item">npath-complexity</a>, <a href="https://tech.kakao.com/tag/refactoring/" class="elementor-post-info__terms-list-item">refactoring</a>, <a href="https://tech.kakao.com/tag/springboot/" class="elementor-post-info__terms-list-item">SpringBoot</a>, <a href="https://tech.kakao.com/tag/unit-test/" class="elementor-post-info__terms-list-item">unit-test</a>, <a href="https://tech.kakao.com/tag/%ea%b2%b0%ed%95%a9%eb%8f%84/" class="elementor-post-info__terms-list-item">결합도</a>, <a href="https://tech.kakao.com/tag/%ea%b3%a0%ec%b0%a8%ed%95%a8%ec%88%98/" class="elementor-post-info__terms-list-item">고차함수</a>, <a href="https://tech.kakao.com/tag/%eb%a0%88%ea%b1%b0%ec%8b%9c/" class="elementor-post-info__terms-list-item">레거시</a>, <a href="https://tech.kakao.com/tag/%ec%9d%98%ec%a1%b4%ec%84%b1/" class="elementor-post-info__terms-list-item">의존성</a>, <a href="https://tech.kakao.com/tag/%ec%a2%85%ec%86%8d%ec%84%b1/" class="elementor-post-info__terms-list-item">종속성</a>, <a href="https://tech.kakao.com/tag/%ec%bd%94%eb%93%9c%eb%b3%b5%ec%9e%a1%eb%8f%84/" class="elementor-post-info__terms-list-item">코드복잡도</a>				</span>
					</span>
								</li>
				</ul>
				</div>
				</div>
				<div class="elementor-element elementor-element-7cf889a1 elementor-widget elementor-widget-theme-post-title elementor-page-title elementor-widget-heading" data-id="7cf889a1" data-element_type="widget" data-widget_type="theme-post-title.default">
				<div class="elementor-widget-container">
			<h1 class="elementor-heading-title elementor-size-default">카카오톡 Java App Server Refactoring 후기</h1>		</div>
				</div>
				<div class="elementor-element elementor-element-60ad788b elementor-widget elementor-widget-theme-post-content" data-id="60ad788b" data-element_type="widget" data-widget_type="theme-post-content.default">
				<div class="elementor-widget-container">
			<style>.elementor-21399 .elementor-element.elementor-element-6156ebc .elementor-spacer-inner{height:50px;}.elementor-21399 .elementor-element.elementor-element-9c09429 .elementor-spacer-inner{height:50px;}.elementor-21399 .elementor-element.elementor-element-cd201b6 .elementor-spacer-inner{height:50px;}.elementor-21399 .elementor-element.elementor-element-cbf75ee .elementor-spacer-inner{height:50px;}.elementor-21399 .elementor-element.elementor-element-5575152 .elementor-spacer-inner{height:50px;}.elementor-21399 .elementor-element.elementor-element-7cad8b7 .elementor-spacer-inner{height:50px;}.elementor-21399 .elementor-element.elementor-element-b5dcb70 .elementor-spacer-inner{height:50px;}.elementor-21399 .elementor-element.elementor-element-742023a .elementor-spacer-inner{height:50px;}.elementor-21399 .elementor-element.elementor-element-7c4ac30 .elementor-spacer-inner{height:50px;}.elementor-21399 .elementor-element.elementor-element-541822d .elementor-spacer-inner{height:50px;}.elementor-21399 .elementor-element.elementor-element-8d73cfd .elementor-spacer-inner{height:50px;}.elementor-21399 .elementor-element.elementor-element-c5786c5 .elementor-spacer-inner{height:50px;}.elementor-21399 .elementor-element.elementor-element-ef92397 .elementor-spacer-inner{height:50px;}.elementor-21399 .elementor-element.elementor-element-d7fbd0d .elementor-spacer-inner{height:50px;}.elementor-21399 .elementor-element.elementor-element-96e7e68 .elementor-spacer-inner{height:50px;}</style>		<div data-elementor-type="wp-post" data-elementor-id="21399" class="elementor elementor-21399" data-elementor-settings="[]">
						<div class="elementor-inner">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-b3ebefd elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="b3ebefd" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-98cd9e5" data-id="98cd9e5" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-801dd4a elementor-widget elementor-widget-text-editor" data-id="801dd4a" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">안녕하세요, 카카오톡 메시징 파트에서 메시징 서버를 개발하고 있는 Soo입니다. 취미가 직업이 된 지 어느덧 8,000일이 넘어가고 있는 개발자입니다. 2019년 말에 톡 메시징 파트에 합류하여 기술 부채를 정리하는 데 관심이 많아, 제 업무 중 내부 코드의 개선 작업의 비중이 높은 편입니다. 또한, 저는 평소에 유지 보수가 용이하고, 테스트하기 쉬운 코드를 구현하는데 관심이 많았습니다. 최근에는 카카오톡 라이브 서비스에 사용하는 Java App Server에 있는 레거시 코드를 리팩토링 하는 업무를 담당했고, 어렵고 복잡한 코드를 성능 저하 없이 유지 보수와 테스트가 쉬운 코드로 만들기 위해 다양한 방법을 사용해 보았습니다. 그렇게 리팩토링을 한 결과 라이브 서비스의 성능 저하 없이 유지 보수와 테스트가 쉬운 코드로 변경하는 작업을 진행할 수 있었는데요, 이 글에서는 제가 레거시 코드에서 흔히 찾아볼 수 있는 오래된 세월의 흔적으로 많아진 가변 Context 클래스들, 복잡하게 물고 물리는 의존성, 그리고 높아진 코드 복잡도를 어떻게 정리했는지 예제와 함께 설명드리고자 합니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-f070f47 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="f070f47" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-190056d" data-id="190056d" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-6156ebc elementor-widget elementor-widget-spacer" data-id="6156ebc" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-be74429 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="be74429" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-383419c" data-id="383419c" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-f99349a elementor-widget elementor-widget-text-editor" data-id="f99349a" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h2><strong>가변 Context 클래스는 신중하게 사용하자</strong></h2>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-404ec75 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="404ec75" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-373d771" data-id="373d771" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-7f92ebc elementor-widget elementor-widget-text-editor" data-id="7f92ebc" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">최근에 저는 주로 라이브 서비스에 사용하는 레거시 코드를 리팩토링 하는 업무를 담당하고 있습니다. 레거시 코드를 분석해 보니, 가변 상태를 관리하는 Context 클래스를 과도하게 사용하고 있었습니다. 이렇게 많은 수의 가변 Context 클래스를 사용하면 유지, 보수 측면에서 문제를 일으킬 수 있기 때문에 정리가 필요한 상황이었습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-b7d3ecf elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="b7d3ecf" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-52b6a14" data-id="52b6a14" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-213d450 elementor-widget elementor-widget-alert" data-id="213d450" data-element_type="widget" data-widget_type="alert.default">
				<div class="elementor-widget-container">
					<div class="elementor-alert elementor-alert-info" role="alert">
			<span class="elementor-alert-title">Context 클래스란?</span>
							<span class="elementor-alert-description">Context 클래스란 상태를 가지는 클래스를 말합니다. 12주년이 넘어가는 카카오톡 메시징 서버 또한 가변 Context 클래스가 많이 사용되었습니다. 예를 들어, 카카오톡 사용자의 로그인 상태, 채팅 참여 상태, 친구 관계 상태 값 등을 Context 클래스의 필드로 가지고 있습니다.
근래에 많이 사용하는 함수형 패러다임으로 최대한 상태 값을 배제하고 불변성(Immutable)을 추구하는 개발을 진행한다 해도, 전체 서비스 구현에서 상태 값을 완전히 배제하기는 어렵습니다.</span>
								</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-f9c90a6 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="f9c90a6" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-a08c34e" data-id="a08c34e" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-9c09429 elementor-widget elementor-widget-spacer" data-id="9c09429" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-0874f98 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="0874f98" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-198fad1" data-id="198fad1" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-ef05972 elementor-widget elementor-widget-text-editor" data-id="ef05972" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h3><strong>가변 상태 Context 사용 시 문제점</strong></h3>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-680f99c elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="680f99c" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-7a3bdff" data-id="7a3bdff" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-7624d29 elementor-widget elementor-widget-text-editor" data-id="7624d29" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">가변 상태를 가지는 Context 클래스가 2, 3개도 아닌 10개가 넘어가게 되면 유지, 보수 측면에서 문제가 될 수 있다고 생각합니다. 필요 이상으로 많은 Context 클래스들이 서로 물고 물리는 종속성을 가지면, 각기 다른 클래스들이 서로 변수를 넘겨주고 넘겨받는 상황이 일어납니다. 이때, 가변 Context의 레퍼런스가 다양한 함수로 전달되면서 전역 변수처럼 사용되게 되고, 이 가변 Context를 어딘가에서 A가 set을 하고, 다른 곳에서는 B가 get을 하는 상황이 발생하게 됩니다. 이런 상태에서는 코드를 읽고 동작을 이해하는 게 어려워집니다. 결국 Context를 수정해야 하는 상황이 오면, Context를 사용하는 모든 사용처를 추적하기가 어려워서, 코드를 수정하는 게 어려워지게 되고, 운영 과정에서 문제가 발생하면 디버깅도 역시 어려워진다는 문제가 생깁니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-b222bca elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="b222bca" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-455e770" data-id="455e770" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-10275df elementor-widget elementor-widget-text-editor" data-id="10275df" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">다른 것보다 시급했던 이 문제를 먼저 해결하기로 결정하였습니다. Context 클래스를 정리하는 리팩토링을 점진적으로 진행하여, 전체에서 사용하고 있던 10개의 Context 클래스를 현재 3개로 줄일 수 있었습니다. 코드 측면에서 볼 때, 수백 라인의 코드를 삭제하였지만, 그 기능은 동일하게 유지할 수 있었습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-5bdfa7c elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="5bdfa7c" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-01cd249" data-id="01cd249" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-8a3db01 elementor-widget elementor-widget-text-editor" data-id="8a3db01" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">Context를 정리하는 리팩터링 과정을 보다 상세하게 설명드리고 싶지만, 아쉽게도 사내 프로덕션 코드를 예시로 보여드릴 수 는 없습니다. 그래서, 어떠한 상황에서 Context를 어떻게 수정했는지에 대한 이해를 높이기 위해, 비슷한 상황을 담은 3가지의 간단한 슈도코드 예제를 가지고 정리해 보겠습니다. 현업에서 레거시 코드를 많이 다루었던 분들이라면 아시겠지만, 실제 프로덕션 코드에서 Context가 과도하게 사용되는 상황은 주로 레거시 코드에서 마주치기 쉽고, 결합도가 예제보다 매우 높은 것이 일반적입니다. 실무에서 다루는 레거시 코드는 굉장히 복잡해서  코드를 따라가며 각 종속 관계를 확인하고 정리할 내용을 확인하는 시간이, 코드를 수정하는 시간보다 더 많이 들 정도인 경우도 있습니다. 이 글에서는  Context 클래스를 수정하는 방법을 좀 더 이해하기 쉽도록 단순화한 예시와 함께 설명드리겠습니다.</span></p><p><span style="font-weight: 400;">다음은 예제로 사용할 Context 클래스입니다. 제가 리팩토링을 진행하였던 10개 Context 모두에 대한 예시를 들 수는 없으므로, 아래와 같이 방어 로직 및 예외 처리가 생략된, 컴파일되지 않는 슈도코드를 가져왔습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-e2e04b9 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="e2e04b9" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-7bd5247" data-id="7bd5247" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-efbc6df elementor-widget elementor-widget-code-highlight" data-id="efbc6df" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>class CarContext {
  private Car car;
  private List<People> passengers;
  private List<People> visitors;
  private SomethingBig somethingBig
  private BlahBlah
  ... 많은 필드들

  ... 생성자
  ... 다양한 get/set 들
}</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-e9fbf52 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="e9fbf52" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-ccec659" data-id="ccec659" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-cd201b6 elementor-widget elementor-widget-spacer" data-id="cd201b6" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-6fb20f8 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="6fb20f8" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-935d8e6" data-id="935d8e6" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-d70ff49 elementor-widget elementor-widget-text-editor" data-id="d70ff49" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h3><strong>함수가 Context 객체에 set을 목적으로 Context 객체를 파라미터로 받지 말고 리턴으로 처리하자</strong></h3>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-5670c51 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="5670c51" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-f9dd48f" data-id="f9dd48f" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-f026609 elementor-widget elementor-widget-text-editor" data-id="f026609" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">코드 작성 시에 구현이 편하다는 이유로 Context를 객체를 파라미터로 받으면, 결합도가 높아지고 유지 보수하기 어려운 코드가 만들어집니다. 아래와 같이, 함수 내부에서 만드는 새로운 값 또는 상태를 함수의 안에서 외부 객체의 상태 변경에 직접 적용하는 것은 좋지 않습니다. 가능하면 리턴으로 받아서 처리하는 방식이 좋습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-1277574 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="1277574" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-35a309a" data-id="35a309a" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-5bc6e1e elementor-widget elementor-widget-code-highlight" data-id="5bc6e1e" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>Result createCar(CarContext carContext, Something A, Something B) {
  ...
  carContext.setCar(new Car());
  ...
  return new Result(someValue);
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-ea90367 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="ea90367" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-2fcac1f" data-id="2fcac1f" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-f9e263f elementor-widget elementor-widget-text-editor" data-id="f9e263f" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">그러므로, 아래처럼 CarContext의 의존성을 코드의 큰 변경 없이 제거할 수 있습니다. Pair 리턴 또한 아름답게 구현되지는 않았지만, Context를 함수 내부에서 직접 set을 하는 것보다는 좋은 구현 방법입니다. 함수에서 리턴 받을 내용이 많아서 Pair로 해결이 안 된다면, data class 형식을 생각해 볼 수도 있겠지만, 그보다는 함수를 기능별로 좀 더 세분화하는 것을 먼저 검토하는 것이 좋겠습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-68465b8 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="68465b8" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-5d5a599" data-id="5d5a599" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-8aab534 elementor-widget elementor-widget-code-highlight" data-id="8aab534" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>Pair<Result, Car> createCar(Something A, Something B) {
  ...
  return new Pair<>(new Result(someValue), new Car());
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-5e9499c elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="5e9499c" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-ad38cb2" data-id="ad38cb2" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-cbf75ee elementor-widget elementor-widget-spacer" data-id="cbf75ee" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-dcfc22b elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="dcfc22b" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-3bbb405" data-id="3bbb405" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-869940c elementor-widget elementor-widget-text-editor" data-id="869940c" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h3><strong>함수에서 값을 받을 때 편하다고 Context 객체를 파라미터로 받지 말고, 필요한 것만 명시적으로 받자</strong></h3>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-00e0fcb elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="00e0fcb" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-9191902" data-id="9191902" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-904094d elementor-widget elementor-widget-text-editor" data-id="904094d" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">함수를 사용하는 입장에서는, Context 객체를 파라미터로 받는 함수가 Context 객체의 어떤 내용에 접근하는지, 혹은 무엇을 수정하는지 알 수 없습니다. 특히, Context가 불변 클래스가 아니라면 함수를 사용할 때  Context에 영향을 미칠 수도 있기 때문에 더더욱 불안합니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-61878c0 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="61878c0" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-40a7de1" data-id="40a7de1" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-bb9dec5 elementor-widget elementor-widget-code-highlight" data-id="bb9dec5" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>void doSomethingForPassengers(CarContext carContext, Something A, Something B) {  
  List<People> passengers = carContext.getPassengers();
  SomeValue someValue = carContext.getSomeValue();
  …
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-840c6af elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="840c6af" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-23c7c86" data-id="23c7c86" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-28bfa44 elementor-widget elementor-widget-text-editor" data-id="28bfa44" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">이를 보완하기 위해서는, 위와 같이 Context를 파라미터로 받아서 꺼내 사용하는 방법 대신, 아래와 같이 Context에서 필요한 것만 명시적으로 받는 방법이 좋습니다. 이렇게 하면, 함수의 의도가 명확해지고, 코드 간 결합도는 줄어들게 됩니다. 이런 방법을 사용했을 때는 파라미터 개수가 계속 증가하는 것 같아서 마음이 불편할 수 있습니다. 그럴 경우에는 일단 외부 종속을 끊고, 함수를 더 작은 책임 단위로 나누어 구현하는 것을 검토하는 게 좋습니다. 함수는 한 번에 하나의 목적만을 수행하는 게 좋기 때문입니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-c5db2c5 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="c5db2c5" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-3d4f3f7" data-id="3d4f3f7" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-a61580a elementor-widget elementor-widget-code-highlight" data-id="a61580a" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>void doSomethingForPassengers(List<People> passengers, SomeValue someValue, Something A, Something B) {
  ...
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-925be53 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="925be53" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-e9250f5" data-id="e9250f5" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-5575152 elementor-widget elementor-widget-spacer" data-id="5575152" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-827431f elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="827431f" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-ebcbb47" data-id="ebcbb47" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-ad99dd6 elementor-widget elementor-widget-text-editor" data-id="ad99dd6" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h3><strong>루프 최적화를 위해서 캐싱하고 싶다면 Context에 넣지 말고, 루프 밖으로 뺄 수 있는지부터 보자</strong></h3>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-472d5ba elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="472d5ba" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-c5efec5" data-id="c5efec5" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-b42af22 elementor-widget elementor-widget-text-editor" data-id="b42af22" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">아래의 복잡한 코드는 DB에서 읽은 값을 메모리에 올려놓고 계속해서 사용하려는 의도에서 구현되었습니다. 의도는 좋지만, 다른 방법으로 구현하는 것이 좋습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-262755e elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="262755e" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-0069372" data-id="0069372" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-c3f52bc elementor-widget elementor-widget-code-highlight" data-id="c3f52bc" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>void prepareVisitors(CarContext carContext, Condition condition) {
  if (carContext.getVisitors() == null) {
    // 메모리에 올리기 전이면 DB에서 읽는다.
    carContext.setVisitors(readFromDB(condition));
  }
}

void doSomeProcess(CarContext carContext, Condition condition) {
  ...
  prepareVisitors(CarContext carContext, Condition condition);
  ...
  List<People> visitors = carContext.getVisitors()
  ...
}

// CarContext carContext는 새로 생성되어서 넘어온다. 즉, CarContext::visitors는 비어있으니 DB에서 읽어서 Context에 넣고 재사용한다.
void doSomethingForVisitors(CarContext carContext, List<Something> somethings, Condition condition) { 
  for (Something something : somethings) {
    doSomeProcess(carContext, condition); 
    ...
    List<People> visitors = carContext.getVisitors();
    ...
  }
}</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-ee738c6 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="ee738c6" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-c5c1da9" data-id="c5c1da9" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-b4e4f1e elementor-widget elementor-widget-text-editor" data-id="b4e4f1e" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">위와 같은 흐름에서 <span style="color: #ff9900;"><strong>prepareVisitors()</strong> </span>함수에서 구현된 것처럼, DB에서 읽은 값을 메모리에 올려놓고 사용하려고 Context에 캐싱 책임을 추가하는 것보다는 해당 부분을 반복 호출 밖의 지역 변수로 꺼내는 것을 먼저 검토하는 것이 좋습니다. 만약, 꺼낼 수 없는 상황이라도 캐싱을 위한 변수를 Context에 넣지 말고 다른 클래스를 만듭시다.</span></p><p><span style="font-weight: 400;">이제 다음과 같이 <span style="color: #ff9900;"><strong>doSomethingForVisitors()</strong></span>에서 사용하지 않는 CarContext 파라미터를 삭제하고, 불필요해진 <strong><span style="color: #ff9900;">CarContext::visitors</span></strong>와 <strong><span style="color: #ff9900;">get</span></strong>, <span style="color: #ff9900;"><strong>set</strong></span> 메서드를 삭제하여 리팩토링 합니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-14e9b79 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="14e9b79" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-450b43c" data-id="450b43c" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-644cf03 elementor-widget elementor-widget-code-highlight" data-id="644cf03" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>public void doSomeProcess(List<People> visitors) {
  ...
}

public void doSomethingForVisitors(List<Something> somethings, Condition condition) { 
  List<People> visitors = readFromDB(condition);

  for (Something something : somethings) {
    doSomeProcess(visitors);  
    ...    
  }
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-39b8c3f elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="39b8c3f" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-1452a00" data-id="1452a00" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-d05d013 elementor-widget elementor-widget-text-editor" data-id="d05d013" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">단순한 내용을 길게 정리하게 되었습니다. 요약하면 다음의 2가지를 주의하여 Context를 사용하면 좋습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-a817ff8 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="a817ff8" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-368a689" data-id="368a689" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-c34ab8d elementor-widget elementor-widget-text-editor" data-id="c34ab8d" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<ul><li><span style="font-weight: 400;">Context 클래스를 전역 변수 저장소처럼 사용하지 않습니다.</span></li><li><span style="font-weight: 400;">되도록 Context 객체를 파라미터로 함수에 전달해서 사용하지 않습니다.</span></li></ul>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-a1b8468 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="a1b8468" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-053b55f" data-id="053b55f" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-7cad8b7 elementor-widget elementor-widget-spacer" data-id="7cad8b7" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-0c9008f elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="0c9008f" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-9879a3d" data-id="9879a3d" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-f41f299 elementor-widget elementor-widget-text-editor" data-id="f41f299" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h2><strong>고차 함수로 의존성 줄이기</strong></h2>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-aac9ee6 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="aac9ee6" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-8915b9a" data-id="8915b9a" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-7440dac elementor-widget elementor-widget-text-editor" data-id="7440dac" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">스프링을 사용한 프로젝트에서 종종 다음 2가지의 상황을 마주할 수 있습니다. 첫째, 어노테이션에 의한 의존성 주입 남용입니다. 둘째, 오랜 세월의 흐름으로 의도치 않게 서비스 간의 의존성이 복잡하게 <strong>강한 결합(Tight Coupling)</strong>으로 묶이면서, 코드를 읽기도 어렵고 단위 테스트를 구성하기도 어려운 상황이 생깁니다.</span></p><p><span style="font-weight: 400;">아래는 제가 작업했었던 카카오톡 Java App Server 서비스의 의존성 그래프입니다. 왼쪽의 그림처럼, 복잡했던 기존의 <strong>순환 종속성(Circular Dependencies)</strong>을 가지는 의존성 그래프를 오른쪽의 단순한 의존성 그래프로 리팩토링 하여, 라이브 서비스에 반영하였습니다. 이번 장에서는 오랜 세월의 흐름으로 서비스 의존성 그래프가 복잡해진 라이브 서비스를 리팩토링 한 내용을, 작은 예제들을 통해 일반화하여 정리해 보겠습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-787b637 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="787b637" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-10c2283" data-id="10c2283" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-d1083b5 elementor-widget elementor-widget-image" data-id="d1083b5" data-element_type="widget" data-widget_type="image.default">
				<div class="elementor-widget-container">
								<div class="elementor-image">
												<img width="1201" height="517" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201201%20517'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_102023-01-19-052621-0000.jpeg" class="attachment-full size-full lazy" alt="" data-srcset="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_102023-01-19-052621-0000.jpeg 1201w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_102023-01-19-052621-0000-624x269.jpeg 624w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_102023-01-19-052621-0000-774x333.jpeg 774w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_102023-01-19-052621-0000-362x156.jpeg 362w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_102023-01-19-052621-0000-768x331.jpeg 768w" data-sizes="(max-width: 1201px) 100vw, 1201px" />														</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-0484f14 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="0484f14" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-b6d2352" data-id="b6d2352" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-d5c9d7c elementor-widget elementor-widget-text-editor" data-id="d5c9d7c" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<blockquote><p><span style="font-weight: 400;">이번 장을 이해하려면 자바의 함수형 인터페이스에 대한 지식이 필요합니다. (참고:</span> <span style="text-decoration: underline;"><span style="color: #000000;"><strong><a style="color: #000000; text-decoration: underline;" href="https://www.baeldung.com/java-8-functional-interfaces">Functional Interfaces in Java 8</a></strong></span></span><span style="font-weight: 400;">)</span></p></blockquote>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-17c7ce5 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="17c7ce5" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-85938f7" data-id="85938f7" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-6ac396f elementor-widget elementor-widget-text-editor" data-id="6ac396f" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<blockquote><p><span style="font-weight: 400;">이번 장에서 사용하는 예제는 BeforeRefactoring과 AfterRefactoring, 2개의 프로젝트로 나누어서 구성했고,</span><a href="https://github.com/prostars/ReduceDependency"> <span style="font-weight: 400;"><strong><span style="text-decoration: underline;">전체 코드는 여기에서 확인할 수 있습니다.</span></strong></span></a></p></blockquote>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-0ff7c3e elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="0ff7c3e" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-ba4b47b" data-id="ba4b47b" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-b467e86 elementor-widget elementor-widget-text-editor" data-id="b467e86" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">제가 스프링을 사용하지 않고 예제를 구성하려 해 봤지만, 스프링을 사용하지 않고서는 아래에서 보게 될 순환 종속성을 만들기 쉽지 않았습니다. 심지어, 예제로 만든 BeforeRefactoring 프로젝트는 스프링 부트 2.6 버전 기준에서 순환 종속성을 가진다는 이유로 프로젝트 실행이 거부됩니다. 예제 프로젝트를 실행하려면 <span style="color: #ff9900;"><strong>application.properties</strong></span> 파일에 아래 설정을 추가합니다. 구체적으로 어떤 에러인지 궁금하시면, 아래 설정을 삭제하고 실행해 보면 확인해 볼 수 있습니다. 참고로, <strong>생성자 주입(Constructor Injection)</strong>을 사용하면, 아래 설정을 추가해도 순환 종속성 에러로 실행되지 않습니다. 대신 <strong>필드 주입(Field Injection)</strong>을 사용하면 <strong>리플렉션(Reflection) API</strong>를 사용하기 때문에 에러가 발생하지 않습니다. 그래서 이 예제에서는 필드 주입을 사용합니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-05f1311 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="05f1311" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-1a3b7b5" data-id="1a3b7b5" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-a2a00ce elementor-widget elementor-widget-code-highlight" data-id="a2a00ce" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>spring.main.allow-circular-references=true</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-7cf70d7 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="7cf70d7" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-bfdf426" data-id="bfdf426" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-f36bec5 elementor-widget elementor-widget-text-editor" data-id="f36bec5" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">예제 프로젝트 BeforeRefactoring은 아래와 같은 순환 의존성 그래프를 만들게 됩니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-2845cb7 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="2845cb7" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-c06af03" data-id="c06af03" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-75d80b6 elementor-widget elementor-widget-image" data-id="75d80b6" data-element_type="widget" data-widget_type="image.default">
				<div class="elementor-widget-container">
								<div class="elementor-image">
												<img width="311" height="161" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20311%20161'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_82023-01-19-052621-0000.jpeg" class="attachment-full size-full lazy" alt="" data-srcset="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_82023-01-19-052621-0000.jpeg 311w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_82023-01-19-052621-0000-301x156.jpeg 301w" data-sizes="(max-width: 311px) 100vw, 311px" />														</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-864698a elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="864698a" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-f0ec624" data-id="f0ec624" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-453c915 elementor-widget elementor-widget-text-editor" data-id="453c915" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">BeforeRefactoring 프로젝트에서 각 서비스의 메서드가 다른 서비스의 메서드를 사용하기 위해서, 다른 서비스를 필드에 참조하도록 해서 서비스 간의 순환 종속성을 만들어내도록 했습니다. 이를 다양한 방법으로 풀어낼 수 있지만 여기서는 자바 8부터 지원하는 함수형 인터페이스를 사용하는 고차 함수로 해결하겠습니다. 서비스 간 의존성을 완전히 제거할 수 있다면 더 좋겠지만, 제거할 수 없다면 의존성을 가능한 한 작게 유지하는 것이 좋겠죠. 자바의 함수형 인터페이스가 다른 함수형 언어의 고차 함수와는 달리 결국 클래스 인터페이스로 구현되어 아쉽습니다. 명시적인 클래스 인터페이스보다는 함수형 인터페이스가 더 작고, 약한 결합이기 때문입니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-c7e83f3 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="c7e83f3" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-9c82223" data-id="9c82223" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-b5dcb70 elementor-widget elementor-widget-spacer" data-id="b5dcb70" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-a585afd elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="a585afd" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-5a28c29" data-id="5a28c29" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-92e0eaa elementor-widget elementor-widget-text-editor" data-id="92e0eaa" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h3><strong>리팩토링</strong></h3>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-1b6953a elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="1b6953a" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-d81020a" data-id="d81020a" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-2d65f45 elementor-widget elementor-widget-text-editor" data-id="2d65f45" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">여기서는 전체 코드의 수정 과정을 설명하지 않고, 간단하게 1개 서비스의 객체 의존성만 함수 의존성으로 수정해 보겠습니다. 자세하게 설명하자면, BeforeRefactoring의 ServiceA가 가지고 있는 ServiceB에 대한 의존성을, 함수형 인터페이스 의존성으로 수정하는 것입니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-d269e84 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="d269e84" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-54e3455" data-id="54e3455" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-aa593e1 elementor-widget elementor-widget-code-highlight" data-id="aa593e1" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>@Service
public class ServiceA {
    @Resource
    ServiceB serviceB;

    public void methodA(Integer paramFirst) {
        Output.printf("'pass %d to ServiceB and get %s' by ServiceA\n", paramFirst, serviceB.methodB(paramFirst));
    }

    public Integer getValue() {
        return 10;
    }
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-45e7a94 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="45e7a94" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-708bcc5" data-id="708bcc5" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-d2903bb elementor-widget elementor-widget-text-editor" data-id="d2903bb" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">위 클래스를 아래와 같이 <span style="color: #ff9900;"><strong>ServiceA::methodA()</strong></span>의 시그니처를 수정하고, <strong><span style="color: #ff9900;">serviceB.methodB()</span></strong> 메서드 호출을 함수형 인터페이스 <strong><span style="color: #ff9900;">apply()</span></strong> 호출로 변경합니다. 이제 ServiceA는 ServiceB에 의존하지 않으니 serviceB 필드를 삭제합니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-6609d6c elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="6609d6c" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-4def91f" data-id="4def91f" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-892b6df elementor-widget elementor-widget-code-highlight" data-id="892b6df" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>@Service
public class ServiceA {
    public void methodA(Integer paramFirst, Function<Integer, Integer> methodB) {
        Output.printf("'pass %d to ServiceB and get %s' by ServiceA\n", paramFirst, methodB.apply(paramFirst));
    }

    public Integer getValue() {
        return 10;
    }
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-d3d71e9 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="d3d71e9" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-fc30c3a" data-id="fc30c3a" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-ca98d91 elementor-widget elementor-widget-text-editor" data-id="ca98d91" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">위에서 <strong><span style="color: #ff9900;">ServiceA::methodA()</span></strong>의 시그니처를 변경하였으므로, <strong><span style="color: #ff9900;">Handler::execute()</span></strong> 메서드에서 컴파일 에러가 발생할 것입니다. 이 Handler 메서드 부분도 아래 코드에서처럼, 오류가 발생하지 않도록 수정해 주도록 합니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-7bca621 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="7bca621" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-38e33b1" data-id="38e33b1" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-146749a elementor-widget elementor-widget-code-highlight" data-id="146749a" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>@Component
public class Handler {
    private final ServiceA serviceA;

    public Handler(final ServiceA serviceA) {
        this.serviceA = serviceA;
    }

    public void execute(long count) {
        for (long cnt = 0; cnt < count; cnt++) {
            serviceA.methodA(2);
        }
    }
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-df764e3 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="df764e3" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-b790551" data-id="b790551" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-4e91c83 elementor-widget elementor-widget-text-editor" data-id="4e91c83" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">이어서 아래와 같이 ServiceB에 대한 의존성을 Handler로 옮겨오고, <strong>생성자 인젝션(Constructor Injection)</strong>으로 Handler 클래스에 주입합니다. 그리고, <strong><span style="color: #ff9900;">serviceA.methodA()</span></strong> 메서드 호출부의 2번째 아규먼트로 <strong><span style="color: #ff9900;">serviceB::methodB</span></strong>를 고차 함수로 넘기면, 위에서 수정한 <strong><span style="color: #ff9900;">ServiceA::methodA()</span></strong> 시그니처를 만족하게 되면서 컴파일 에러가 사라집니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-cb15dcc elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="cb15dcc" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-cf8d5a9" data-id="cf8d5a9" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-17708ac elementor-widget elementor-widget-code-highlight" data-id="17708ac" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>@Component
public class Handler {
    private final ServiceA serviceA;
    private final ServiceB serviceB;

    public Handler(final ServiceA serviceA, final ServiceB serviceB) {
        this.serviceA = serviceA;
        this.serviceB = serviceB;
    }

    public void execute(long count) {
        for (long cnt = 0; cnt < count; cnt++) {
            serviceA.methodA(2, serviceB::methodB);
        }
    }
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-a2d73a4 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="a2d73a4" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-7e78653" data-id="7e78653" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-a49c61e elementor-widget elementor-widget-text-editor" data-id="a49c61e" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">위와 같은 방식을 반복 적용하여 나머지 ServiceB → ServiceC와 ServiceC → ServiceA에 대한 의존성을 제거할 수 있습니다. 이전과 마찬가지로 작업하면서 <strong><span style="color: #ff9900;">ServiceA::methodA()</span></strong>의 시그니처를 추가로 수정해주어야 합니다. 모든 작업이 끝나면 서비스 간의 의존성이 모두 사라지면서, 순환 종속성도 </span><span style="font-weight: 400;">사라지게</span> <span style="font-weight: 400;">됩니다.</span><span style="font-weight: 400;"> 이렇게 리팩토링</span><span style="font-weight: 400;">을</span><span style="font-weight: 400;"> 하면 추가로 얻는 이점으로는 Handler가 동작하는데 필요한 각각의 서비스 ServiceA, ServiceB, ServiceC에 흩어져있던 의존성이 Handler 클래스로 모두 명시적으로 모이게 되고, 흩어져서 <em><strong>가려져있던 의존성이 한눈에 보인다는 점</strong></em>입니다. 이로써 객체 의존성이 함수 의존성으로 변경되고 서비스 간의 의존성 그래프는 아래와 같이 모두 끊어지게 됩니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-6018e1d elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="6018e1d" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-e2f00e4" data-id="e2f00e4" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-0084120 elementor-widget elementor-widget-image" data-id="0084120" data-element_type="widget" data-widget_type="image.default">
				<div class="elementor-widget-container">
								<div class="elementor-image">
												<img width="381" height="81" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20381%2081'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_92023-01-19-052621-0000.jpeg" class="attachment-full size-full lazy" alt="" data-srcset="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_92023-01-19-052621-0000.jpeg 381w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_92023-01-19-052621-0000-376x80.jpeg 376w" data-sizes="(max-width: 381px) 100vw, 381px" />														</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-17f6ff9 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="17f6ff9" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-28d199d" data-id="28d199d" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-742023a elementor-widget elementor-widget-spacer" data-id="742023a" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-e065d1a elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="e065d1a" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-c15c9ea" data-id="c15c9ea" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-7b43dbe elementor-widget elementor-widget-text-editor" data-id="7b43dbe" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h3><strong>단위 테스트 구성</strong></h3>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-455fc16 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="455fc16" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-0058567" data-id="0058567" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-bfd1e03 elementor-widget elementor-widget-text-editor" data-id="bfd1e03" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">이제 각 서비스는 외부에서 주입받는 함수만 필요할 뿐, 서로의 존재(구현 방식)를 몰라도 됩니다. 이를 만족하는지는 단위 테스트에서 확인할 수 있습니다.</span></p><p><span style="font-weight: 400;">순환 의존성을 가진 BeforeRefactoring을 단위 테스트하려면, 아래와 같이 @SpringBootTest를 사용하고 Bean을 스프링에 의존해 생성할 수 있습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-fd3b3dc elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="fd3b3dc" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-e128834" data-id="e128834" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-9f1d6ae elementor-widget elementor-widget-code-highlight" data-id="9f1d6ae" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>@SpringBootTest
class UsingSpringTests {
    @Resource
    ServiceB serviceB;

    @Resource
    Handler handler;

    @Test
    void testServiceB() {
        // 성공하지만, main()이 실행된 후라서 Output::isPrintable의 상태가 기본값이 아니다.
        Integer result = serviceB.methodB(2);
        assertThat(result, equalTo(12));
    }

    @Test
    void testHandler() {
        // 성공하지만, main()이 실행된 후라서 Output::isPrintable의 상태가 기본값이 아니다.
        handler.execute(1);
    }
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-3fc816d elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="3fc816d" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-079c925" data-id="079c925" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-93d9210 elementor-widget elementor-widget-text-editor" data-id="93d9210" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">또는, 아래와 같이 @Mock, @InjectMocks를 사용하고 <strong>모키토(Mockito)</strong>에 의존하여, 객체를 <strong>목킹(Mocking)</strong>해서 테스트를 구성해야 합니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-22b8206 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="22b8206" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-3c99dff" data-id="3c99dff" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-1e5426e elementor-widget elementor-widget-code-highlight" data-id="1e5426e" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>class UsingMockTests {
    @Mock
    private ServiceC serviceC;

    @InjectMocks
    private ServiceB serviceB;

    @InjectMocks
    private Handler handler;

    @BeforeEach
    public void createServiceB() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testServiceB() {
        int first = 10;
        when(serviceC.methodC(first)).thenReturn(first + 30);

        Integer result = serviceB.methodB(first);
        assertThat(result, equalTo(40));
    }

    @Test
    public void testHandler() {
        // 실패한다. 성공시키려면, ServerA, ServerB, ServerC 의존성에 대한 Mocking을 처리해야 한다.
        handler.execute(1);
    }
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-28d0ecd elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="28d0ecd" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-b7ad377" data-id="b7ad377" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-adf9e05 elementor-widget elementor-widget-text-editor" data-id="adf9e05" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">하지만, 함수 의존성을 사용한 AfterRefactoring을 단위 테스트하는 경우에는 리팩토링 전과 다르게 스프링과 모키토 없이도 아래와 같이 바로 생성해서 테스트를 구성할 수 있게 됩니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-23a20fc elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="23a20fc" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-2df9ad4" data-id="2df9ad4" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-ab1fd8e elementor-widget elementor-widget-code-highlight" data-id="ab1fd8e" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>class SampleUnitTests {
    @Test
    public void testServiceB() {
        ServiceB serviceB = new ServiceB();

        Integer result = serviceB.methodB(2, () -> 10, (a, b) -> a + b.getAsInt());
        assertThat(result, equalTo(12));
    }

    @Test
    public void testHandler() {
        Handler handler = new Handler(new ServiceA(), new ServiceB(), new ServiceC());

        handler.execute(1);
    }
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-aaa24d1 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="aaa24d1" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-a0d92d6" data-id="a0d92d6" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-7c4ac30 elementor-widget elementor-widget-spacer" data-id="7c4ac30" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-b202fd3 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="b202fd3" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-6a1e058" data-id="6a1e058" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-6c98a6d elementor-widget elementor-widget-text-editor" data-id="6c98a6d" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h3><strong>JShell에서 코드 조각 테스트</strong></h3>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-ddc982d elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="ddc982d" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-06f2356" data-id="06f2356" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-aff49ad elementor-widget elementor-widget-text-editor" data-id="aff49ad" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">위와 같이 간결하게 객체를 생성할 수 있다면, Java 9부터 추가된 JShell을 이용해 Service 객체들을 바로 생성할 수 있습니다. JShell에서 간단히 객체를 만들고 테스트해 보도록 하겠습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-09d8c6e elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="09d8c6e" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-ee5a349" data-id="ee5a349" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-c8316ad elementor-widget elementor-widget-code-highlight" data-id="c8316ad" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>import com.example.afterrefactoring.Handler;
import com.example.afterrefactoring.service.ServiceA;
import com.example.afterrefactoring.service.ServiceB;
import com.example.afterrefactoring.service.ServiceC;


ServiceA serviceA = new ServiceA();
ServiceB serviceB = new ServiceB();
ServiceC serviceC = new ServiceC();

System.out.println(serviceA.getValue());
System.out.println(serviceC.methodC(2, serviceA::getValue));
System.out.println(serviceB.methodB(2, serviceA::getValue, serviceC::methodC));

Handler handler = new Handler(serviceA, serviceB, serviceC);
handler.execute(1);
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-348955b elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="348955b" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-4dc9340" data-id="4dc9340" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-7be50ae elementor-widget elementor-widget-text-editor" data-id="7be50ae" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">아래는 IntelliJ에서 JShell을 사용하여 위의 코드 조각을 실행한 스크린샷입니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-6f89760 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="6f89760" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-df1acd9" data-id="df1acd9" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-5807663 elementor-widget elementor-widget-image" data-id="5807663" data-element_type="widget" data-widget_type="image.default">
				<div class="elementor-widget-container">
								<div class="elementor-image">
												<img width="1502" height="1916" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201502%201916'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_52023-01-19-052621-0000.jpg" class="attachment-full size-full lazy" alt="" data-srcset="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_52023-01-19-052621-0000.jpg 1502w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_52023-01-19-052621-0000-276x352.jpg 276w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_52023-01-19-052621-0000-261x333.jpg 261w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_52023-01-19-052621-0000-122x156.jpg 122w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_52023-01-19-052621-0000-768x980.jpg 768w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_52023-01-19-052621-0000-1204x1536.jpg 1204w" data-sizes="(max-width: 1502px) 100vw, 1502px" />														</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-9100d9b elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="9100d9b" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-61874e9" data-id="61874e9" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-9d11af4 elementor-widget elementor-widget-text-editor" data-id="9d11af4" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">혹여, 아래와 같은 에러가 발생하신다면</span><span style="color: #3366ff;"><strong><a style="color: #3366ff;" href="https://prostars.net/237"> 여기를 참고 바랍니다.</a></strong></span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-83062e4 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="83062e4" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-43982cb" data-id="43982cb" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-df60994 elementor-widget elementor-widget-image" data-id="df60994" data-element_type="widget" data-widget_type="image.default">
				<div class="elementor-widget-container">
								<div class="elementor-image">
												<img width="1062" height="726" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201062%20726'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_42023-01-19-052621-0000.jpg" class="attachment-full size-full lazy" alt="" data-srcset="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_42023-01-19-052621-0000.jpg 1062w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_42023-01-19-052621-0000-515x352.jpg 515w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_42023-01-19-052621-0000-487x333.jpg 487w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_42023-01-19-052621-0000-228x156.jpg 228w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_42023-01-19-052621-0000-768x525.jpg 768w" data-sizes="(max-width: 1062px) 100vw, 1062px" />														</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-75b50ce elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="75b50ce" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-533179d" data-id="533179d" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-541822d elementor-widget elementor-widget-spacer" data-id="541822d" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-3be140a elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="3be140a" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-762ba60" data-id="762ba60" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-b127fab elementor-widget elementor-widget-text-editor" data-id="b127fab" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h3><strong>간단한 성능 차이 확인</strong></h3>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-3eedb34 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="3eedb34" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-2f2c614" data-id="2f2c614" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-e2e0614 elementor-widget elementor-widget-text-editor" data-id="e2e0614" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">이제 모든 정리가 끝났습니다. 기존의 객체 의존성을 함수 의존성으로 바꾸면서 발생하는 비용을 비교해 보도록 하겠습니다. 가장 분명한 단점으로는 객체 의존성일 때는 없었던 함수형 인터페이스에 파라미터를 전달하면서 호출 비용이 증가하게 되는 것입니다. 이를 간단히 확인해 보겠습니다.</span></p><p><span style="font-weight: 400;">아래 스크린샷의 왼쪽이 객체 의존성 BeforeRefactoring의 실행 시간, 오른쪽이 함수 의존성 AfterRefactoring의 실행 시간입니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-da5a0d6 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="da5a0d6" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-06925c1" data-id="06925c1" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-03b9f8e elementor-widget elementor-widget-image" data-id="03b9f8e" data-element_type="widget" data-widget_type="image.default">
				<div class="elementor-widget-container">
								<div class="elementor-image">
												<img width="396" height="333" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20396%20333'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_62023-01-19-052621-0000-396x333.jpg" class="attachment-large size-large lazy" alt="" data-srcset="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_62023-01-19-052621-0000-396x333.jpg 396w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_62023-01-19-052621-0000-418x352.jpg 418w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_62023-01-19-052621-0000-185x156.jpg 185w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_62023-01-19-052621-0000-768x646.jpg 768w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_62023-01-19-052621-0000.jpg 1001w" data-sizes="(max-width: 396px) 100vw, 396px" />														</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-9908db8 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="9908db8" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-1a8b475" data-id="1a8b475" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-2fb2a02 elementor-widget elementor-widget-text-editor" data-id="2fb2a02" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">두 방식 사이에는 실행 시간에 극명한 차이는 없지만 함수 의존성의 경우에, 위에서 언급한 호출 비용이 증가하면서 성능이 떨어지는 것을 볼 수 있죠.</span></p><p><span style="font-weight: 400;">다만, 위 실행 결과는 JVM 옵션 -XX:TieredStopAtLevel=1 이 설정된 상태로 실행된 결과입니다. IntelliJ에서 스프링 프로젝트를 실행하면 기본적으로 설정되는 값입니다. IntelliJ의 <strong><em>’Run/Debug Configurations’</em></strong> 설정에서 <em><strong>‘Disable launch optimization’</strong></em>를 설정해서 JIT Compiler를 최적화하면 아래와 같이 성능이 달라지는 것을 볼 수 있습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-33f21d0 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="33f21d0" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-7fa734c" data-id="7fa734c" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-d6881d5 elementor-widget elementor-widget-image" data-id="d6881d5" data-element_type="widget" data-widget_type="image.default">
				<div class="elementor-widget-container">
								<div class="elementor-image">
												<img width="418" height="352" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20418%20352'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_72023-01-19-052621-0000-418x352.jpg" class="attachment-medium size-medium lazy" alt="" data-srcset="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_72023-01-19-052621-0000-418x352.jpg 418w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_72023-01-19-052621-0000-396x333.jpg 396w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_72023-01-19-052621-0000-185x156.jpg 185w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_72023-01-19-052621-0000-768x646.jpg 768w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_72023-01-19-052621-0000.jpg 1001w" data-sizes="(max-width: 418px) 100vw, 418px" />														</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-e51acf1 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="e51acf1" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-38bbae1" data-id="38bbae1" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-6213291 elementor-widget elementor-widget-text-editor" data-id="6213291" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">약간의 성능 차이는 여전히 발생하고 있지만 많이 줄어든 것을 확인할 수 있습니다. 글의 시작에서 언급 드렸듯이, 리팩토링한 코드를 라이브 서비스에 반영한 후에도 운영상의 성능 저하는 발생하지 않았습니다. 독자분들이 의존성을 정리하는 데 해당 내용이 도움이 되길 바랍니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-0f49697 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="0f49697" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-b41d41b" data-id="b41d41b" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-8d73cfd elementor-widget elementor-widget-spacer" data-id="8d73cfd" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-db7a682 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="db7a682" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-a8033cb" data-id="a8033cb" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-0eb7382 elementor-widget elementor-widget-text-editor" data-id="0eb7382" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h2><strong>코드 복잡도 줄이기 (Cyclomatic Complexity, NPath Complexity)</strong></h2>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-e9d87fb elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="e9d87fb" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-63fdef0" data-id="63fdef0" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-612e103 elementor-widget elementor-widget-text-editor" data-id="612e103" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">이번 장에서는 실제 백엔드 서비스 코드를 리팩토링 했을 때 적용한 내용을 바탕으로, 코드 복잡도를 줄인 리팩토링 방법 대한 내용을 정리하겠습니다.</span></p><p><span style="font-weight: 400;">위에서 언급드렸던<em><strong> &#8216;가변 Context 클래스는 신중하게 사용하기&#8217;</strong></em> 및 <em><strong>&#8216;고차 함수로 의존성 줄이기&#8217;</strong></em> 등의 방법을 적용하면, 코드 내의 의존성 문제들이 많이 해소된 상태이기 때문에 본격적으로 복잡도를 줄일 수 있게 됩니다.</span></p><p><span style="font-weight: 400;">아래는 어떤 백엔드 서비스 코드의 리팩토링 전과 후의 코드 복잡도 Cyclomatic Complexity와 NPath Complexity의 수치 변화입니다. 기존 대비 복잡도가 많이 줄어든 것을 확인할 수 있습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-468ef7e elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="468ef7e" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-43b18ec" data-id="43b18ec" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-fcb6325 elementor-widget elementor-widget-image" data-id="fcb6325" data-element_type="widget" data-widget_type="image.default">
				<div class="elementor-widget-container">
								<div class="elementor-image">
												<img width="1280" height="133" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201280%20133'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_122023-01-19-052621-0000.jpeg" class="attachment-full size-full lazy" alt="" data-srcset="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_122023-01-19-052621-0000.jpeg 1280w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_122023-01-19-052621-0000-624x65.jpeg 624w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_122023-01-19-052621-0000-802x83.jpeg 802w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_122023-01-19-052621-0000-376x39.jpeg 376w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_122023-01-19-052621-0000-768x80.jpeg 768w" data-sizes="(max-width: 1280px) 100vw, 1280px" />														</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-4df1e54 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="4df1e54" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-d63d1aa" data-id="d63d1aa" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-675239f elementor-widget elementor-widget-text-editor" data-id="675239f" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">실제로 작업했던 코드를 지면에 소개할 수는 없으니, 조금은 억지스러운 예제를 일반화해서 내용을 정리하겠습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-b3a45f3 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="b3a45f3" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-6701bd6" data-id="6701bd6" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-54ee394 elementor-widget elementor-widget-text-editor" data-id="54ee394" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<blockquote><p><span style="font-weight: 400;">내용에서 다루는 전체 코드는</span> <span style="text-decoration: underline;"><strong><a href="https://github.com/prostars/ExampleReduceComplexity">여기</a></strong></span><span style="font-weight: 400;">에서 확인하실 수 있습니다.</span></p></blockquote>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-fc9874c elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="fc9874c" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-201b9f1" data-id="201b9f1" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-c5786c5 elementor-widget elementor-widget-spacer" data-id="c5786c5" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-6b81a36 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="6b81a36" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-4e962fc" data-id="4e962fc" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-c738487 elementor-widget elementor-widget-text-editor" data-id="c738487" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h3><strong>코드 복잡도</strong></h3>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-6b2a8a3 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="6b2a8a3" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-a317321" data-id="a317321" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-d770195 elementor-widget elementor-widget-text-editor" data-id="d770195" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">코드 복잡도를 수치로 계산하는 방법들이 많이 있겠지만, 그중에서 Cyclomatic Complexity(이하 CC)와 NPath Complexity(이하 NPath)를 자세한 공식 등은 생략하고 골격만 간단히 소개하겠습니다. 더 자세한 내용은 아래를 참고하시기 바랍니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-0b22ce0 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="0b22ce0" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-885b38a" data-id="885b38a" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-a1e95a2 elementor-widget elementor-widget-text-editor" data-id="a1e95a2" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<ol><li><a href="https://en.wikipedia.org/wiki/Cyclomatic_complexity"><span style="font-weight: 400;"><span style="color: #3366ff;"><strong>https://en.wikipedia.org/wiki/Cyclomatic_complexity</strong></span></span></a></li><li><span style="color: #3366ff;"><strong><a style="color: #3366ff;" href="https://modess.io/npath-complexity-cyclomatic-complexity-explained/">https://modess.io/npath-complexity-cyclomatic-complexity-explained/</a></strong></span></li><li><span style="font-weight: 400;">순환 복잡도 &#8211; </span><span style="color: #3366ff;"><strong><a style="color: #3366ff;" href="https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=283018961">소프트웨어 아키텍처 101 번역서</a></strong></span><span style="font-weight: 400;"> (118p)</span></li></ol>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-eb74f13 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="eb74f13" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-a0e1cf5" data-id="a0e1cf5" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-e880f46 elementor-widget elementor-widget-text-editor" data-id="e880f46" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">사용한 공식은 아래와 같이 골격만 간단히 정리할 수 있습니다. 물론, 위의 세부적인 계산식과 다른 수치가 나올 수 있지만, 큰 오차 없이 가볍게 코드의 상태를 가늠할 수 있습니다. CC는 함수에 제어문(분기, 루프 등)이 없다면 1점, 있다면 제어문마다 1점을 부여합니다. 또한, 조건식 안의 논리식도 1점으로 계산하여 각각의 점수를 모두 더합니다. NPath는 코드를 실행할 수 있는 비순환 경로의 수를 의미합니다. 설명이 어렵지만, 간단하게는 분기마다 2점을 부여하고 각 점수를 곱하는 방식으로 계산합니다. 2점이 아닌 케이스도 있는데 if / else if 조합은 실행할 수 있는 경로의 수가 3가지이므로 3으로 계산됩니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-87c5569 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="87c5569" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-5550ee7" data-id="5550ee7" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-586237e elementor-widget elementor-widget-image" data-id="586237e" data-element_type="widget" data-widget_type="image.default">
				<div class="elementor-widget-container">
								<div class="elementor-image">
												<img width="1184" height="244" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201184%20244'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_132023-01-19-052621-0000.png" class="attachment-full size-full lazy" alt="" data-srcset="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_132023-01-19-052621-0000.png 1184w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_132023-01-19-052621-0000-624x129.png 624w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_132023-01-19-052621-0000-802x165.png 802w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_132023-01-19-052621-0000-376x77.png 376w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_132023-01-19-052621-0000-768x158.png 768w" data-sizes="(max-width: 1184px) 100vw, 1184px" />														</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-e36faf8 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="e36faf8" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-d8073a1" data-id="d8073a1" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-c9ae55e elementor-widget elementor-widget-text-editor" data-id="c9ae55e" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">IntelliJ를 사용한다면</span><span style="color: #3366ff;"><strong><a style="color: #3366ff;" href="https://plugins.jetbrains.com/plugin/14083-complexity-reducer"> Complexity reducer Plugin</a></strong></span><span style="font-weight: 400;">을 설치하면 아래와 같이 CC와 NPath를 계산해서 보여줍니다. 다만, 해당 플러그인의 최신 버전인 0.1.7은 IntelliJ 213.* 버전까지만 지원하기 때문에 최신 버전의 IntelliJ에서는 동작하지 않는다는 점은 참고해 주시기 바랍니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-a712d65 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="a712d65" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-e7a6b6c" data-id="e7a6b6c" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-52d39ec elementor-widget elementor-widget-image" data-id="52d39ec" data-element_type="widget" data-widget_type="image.default">
				<div class="elementor-widget-container">
								<div class="elementor-image">
									<figure class="wp-caption">
										<img width="1018" height="802" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201018%20802'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_112023-01-19-052621-0000.png" class="attachment-full size-full lazy" alt="" data-srcset="https://tech.kakao.com/wp-content/uploads/2023/01/Soo_112023-01-19-052621-0000.png 1018w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_112023-01-19-052621-0000-447x352.png 447w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_112023-01-19-052621-0000-423x333.png 423w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_112023-01-19-052621-0000-198x156.png 198w, https://tech.kakao.com/wp-content/uploads/2023/01/Soo_112023-01-19-052621-0000-768x605.png 768w" data-sizes="(max-width: 1018px) 100vw, 1018px" />											<figcaption class="widget-image-caption wp-caption-text">java/util/regex/Matcher.java in adoptopenjdk-11</figcaption>
										</figure>
								</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-b7f351d elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="b7f351d" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-5a89495" data-id="5a89495" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-6590df7 elementor-widget elementor-widget-text-editor" data-id="6590df7" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">위 코드를 보면, CC는 5점(reset + for + for + for + if), NPath는 12점(for * for * (for + if))으로 계산됩니다. 여기서 3점이 약간 의아한 계산일 수 있습니다. for/if 조합의 실행 경로는 for를 안 타는 경우, for를 타고 if를 안 타는 경우, for와 if 모두 타는 경우의 3갈래이기 때문에 3점으로 계산됩니다.</span></p><p><span style="font-weight: 400;">이 내용을 대략 이해하고 아래 예제 코드를 보도록 하겠습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-e455a54 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="e455a54" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-abd47ff" data-id="abd47ff" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-54f0225 elementor-widget elementor-widget-code-highlight" data-id="54f0225" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>public Data buildData(boolean isConditionA, boolean isConditionB, boolean isConditionC, String extraCondition) {
    int someValue;
    if (isConditionA) {
        someValue = 10;
    }
    else {
        if (extraCondition.equals("ForceB") || isConditionB) {
            someValue = 20;
        } else {
            if (isConditionC) {
                someValue = 30;
            } else {
                someValue = 40;
            }
        }
    }

    Data data = new Data();
    data.setA(someValue + 1);
    if (someValue == 30) {
        data.setB(someValue + 2);
    } else {
        data.setB(someValue + 4);
    }
    data.setC(someValue + 3);
    return data;
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-f139454 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="f139454" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-cf19f31" data-id="cf19f31" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-bfc4fab elementor-widget elementor-widget-text-editor" data-id="bfc4fab" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">위의 <span style="color: #ff9900;"><strong>buildData()</strong></span> 함수는 CC가 6, NPath가 8점입니다. 높은 수치는 아니지만, 예제로 더 복잡하게 만들기도 어려우니, 이 함수의 복잡도를 줄여보겠습니다. 코드의 복잡도를 줄이는 건 반드시 특별할 필요가 없습니다. 기본은 동일합니다. 하나의 함수에 많은 코드가 있다는 건, 코드 내부에서 필요 이상의 책임을 가지고 있다는 것입니다. 함수가 현재 가지고 있는 많은 책임을 더 작은 단위의 책임으로 나눈 뒤, 각 함수가 각 1개의 책임만 담당하도록 한다면, 복잡도 역시 각 함수가 나누어 가지게 됩니다. 그러면 이후에 추가되는 개별 함수들의 복잡도 또한 낮아지게 됩니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-18cad31 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="18cad31" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-702df3a" data-id="702df3a" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-ef92397 elementor-widget elementor-widget-spacer" data-id="ef92397" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-b23f4cf elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="b23f4cf" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-b0915dd" data-id="b0915dd" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-441896c elementor-widget elementor-widget-text-editor" data-id="441896c" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h3><strong>함수 추출하기</strong></h3>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-47efb52 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="47efb52" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-8574470" data-id="8574470" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-3784050 elementor-widget elementor-widget-text-editor" data-id="3784050" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<blockquote><p><span style="font-weight: 400;">함수 추출하기(Extract Function)는</span> <span style="text-decoration: underline;"><strong><a href="https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=241936778">리팩터링 도서</a></strong></span><span style="font-weight: 400;">에 다양한 추출 케이스에 대해서 자세하게 설명하고 있습니다.</span></p></blockquote>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-48ac562 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="48ac562" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-49371cd" data-id="49371cd" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-3949aed elementor-widget elementor-widget-text-editor" data-id="3949aed" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">위의 예제 코드에서, buildData() 함수가 크게 2가지 책임을 가지고 있는 것을 확인할 수 있습니다. someValue의 값을 구하고, Data 객체를 생성하는 역할입니다. 이 2개의 책임을 각각의 함수로 추출하겠습니다.</span></p><p><span style="font-weight: 400;">먼저 someValue의 값을 구하는 부분을 아래와 같이 getSomeValue() 함수로 추출합니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-11df928 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="11df928" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-b744853" data-id="b744853" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-6ad1e8d elementor-widget elementor-widget-code-highlight" data-id="6ad1e8d" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>private int getSomeValue(boolean isConditionA, boolean isConditionB, boolean isConditionC, String extraCondition) {
    int someValue;
    if (isConditionA) {
        someValue = 10;
    }
    else {
        if (extraCondition.equals("ForceB") || isConditionB) {
            someValue = 20;
        } else {
            if (isConditionC) {
                someValue = 30;
            } else {
                someValue = 40;
            }
        }
    }
    return someValue;
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-308fa03 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="308fa03" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-3b2f278" data-id="3b2f278" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-c55cb7c elementor-widget elementor-widget-text-editor" data-id="c55cb7c" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">이로써, getSomeValue() 함수는 CC가 5, NPath가 4인 함수가 되었습니다. 그리고, 이어서 Data 객체를 생성하는 부분도 아래와 같이 makeData() 함수로 추출합니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-fd8e678 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="fd8e678" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-3d20220" data-id="3d20220" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-046f70e elementor-widget elementor-widget-code-highlight" data-id="046f70e" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>private Data makeData(int base) {
    Data data = new Data();
    data.setA(base + 1);
    if (base == 30) {
        data.setB(base + 2);
    } else {
        data.setB(base + 4);
    }
    data.setC(base + 3);
    return data;
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-647ba3a elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="647ba3a" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-9e9cd19" data-id="9e9cd19" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-88d202c elementor-widget elementor-widget-text-editor" data-id="88d202c" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">여기서 makeData() 함수는 계산에 의하면 CC가 2, NPath가 2인 함수입니다.</span></p><p><span style="font-weight: 400;">이렇게 buildData() 함수에 몰려있던 코드를 getSomeValue(), makeData() 2개의 함수로 모두 추출하여, 책임과 복잡도는 2개의 함수가 나누어 가져갔고, buildData() 함수는 아래와 같이 단출해지면서 코드 복잡도라고 수치로 뽑을 것이 남지 않게 되었습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-07744bf elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="07744bf" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-dec1eea" data-id="dec1eea" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-b0eb5d1 elementor-widget elementor-widget-code-highlight" data-id="b0eb5d1" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>public Data buildData(boolean isConditionA, boolean isConditionB, boolean isConditionC, String extraCondition) {
	return makeData(getSomeValue(isConditionA, isConditionB, isConditionC, extraCondition));
}</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-5135a7c elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="5135a7c" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-dea605d" data-id="dea605d" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-d7fbd0d elementor-widget elementor-widget-spacer" data-id="d7fbd0d" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-fea7193 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="fea7193" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-7eff10a" data-id="7eff10a" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-3a07355 elementor-widget elementor-widget-text-editor" data-id="3a07355" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h3><strong>중첩 조건문을 보호 구문으로 바꾸기</strong></h3>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-9c56db9 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="9c56db9" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-84dd5c4" data-id="84dd5c4" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-2587d94 elementor-widget elementor-widget-text-editor" data-id="2587d94" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<blockquote><p><span style="font-weight: 400;">중첩 조건문을 보호 구문으로 바꾸기(Replace Nested Conditional with Guard Clauses)는</span> <span style="text-decoration: underline;"><strong><a href="https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=241936778">리팩터링 도서</a></strong></span><span style="font-weight: 400;">에 다양한 케이스에 대해서 자세히 설명하고 있습니다.</span></p></blockquote>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-3c218c3 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="3c218c3" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-da74038" data-id="da74038" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-c12cc9d elementor-widget elementor-widget-text-editor" data-id="c12cc9d" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">막상 getSomeValue() 함수를 추출하고 보니, 추가로 코드를 더 정리할 수 있을 것 같습니다. 먼저 someValue를 제거하도록 하겠습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-ddc1e2f elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="ddc1e2f" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-400ea2b" data-id="400ea2b" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-2f9aac9 elementor-widget elementor-widget-code-highlight" data-id="2f9aac9" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>private int getSomeValue(boolean isConditionA, boolean isConditionB, boolean isConditionC, String extraCondition) {
    if (isConditionA) {
        return 10;
    }
    else {
        if (extraCondition.equals("ForceB") || isConditionB) {
            return 20;
        } else {
            if (isConditionC) {
                return 30;
            } else {
                return 40;
            }
        }
    }
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-18bb7dc elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="18bb7dc" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-19dafa2" data-id="19dafa2" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-79a23eb elementor-widget elementor-widget-text-editor" data-id="79a23eb" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">someValue를 제거하고 모두 return 문으로 치환하고 보니, 중첩된 if 문들을 정리할 수 있을 것 같습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-a88c2fd elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="a88c2fd" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-de24ae1" data-id="de24ae1" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-9ed7d0f elementor-widget elementor-widget-code-highlight" data-id="9ed7d0f" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-javascript line-numbers">
				<code readonly="true" class="language-javascript">
					<xmp>private int getSomeValue(boolean isConditionA, boolean isConditionB, boolean isConditionC, String extraCondition) {
    if (isConditionA) {
        return 10;
    }
    if (extraCondition.equals("ForceB") || isConditionB) {
        return 20;
    }
    if (isConditionC) {
        return 30;
    }    
    return 40;
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-17df27f elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="17df27f" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-ace2f74" data-id="ace2f74" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-6f35ff7 elementor-widget elementor-widget-text-editor" data-id="6f35ff7" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">코드가 한결 보기 편해졌습니다. 혹 Complexity reducer Plugin을 활성화해 두고 리팩토링 작업을 따라왔다면 중첩된 if 문들을 정리하면서 getSomeValue() 함수의 NPath가 4에서 8로 2배가 증가한 것을 확인할 수 있었을 것입니다. 코드의 로직은 동일하고 가독성도 좋아졌는데 오히려 코드 복잡도를 나타내는 수치가 증가했습니다.</span></p><p><span style="font-weight: 400;">그 이유는 첫 번째 if 문의 조건이 만족하면 바로 return 하여 함수를 나오기 때문에, 두 번째 if 문을 타지 않는다는 것을 계산에 포함하지 않고 나온 수치라서 그렇습니다. 계산 수치를 개선하기 위해 다시금 아래와 같이 수정해 보겠습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-48ae7ab elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="48ae7ab" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-603c708" data-id="603c708" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-053989b elementor-widget elementor-widget-code-highlight" data-id="053989b" data-element_type="widget" data-widget_type="code-highlight.default">
				<div class="elementor-widget-container">
					<div class="prismjs-default copy-to-clipboard ">
			<pre data-line="" class="highlight-height language-java line-numbers">
				<code readonly="true" class="language-java">
					<xmp>private int getSomeValue(boolean isConditionA, boolean isConditionB, boolean isConditionC, String extraCondition) {
    if (isConditionA) {
        return 10;
    }
    else if (extraCondition.equals("ForceB") || isConditionB) {
        return 20;
    }
    else if (isConditionC) {
        return 30;
    }
    return 40;
}
</xmp>
				</code>
			</pre>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-5b4b502 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="5b4b502" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-664ece8" data-id="664ece8" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-bd9abc1 elementor-widget elementor-widget-text-editor" data-id="bd9abc1" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">코드에서 명확하게 첫 번째 if 문의 조건이 만족할 경우,  두 번째 if 문을 타지 않는다고 조건문으로 명시하면 getSomeValue() 함수의 NPath가 다시 4로 감소하는 것을 확인할 수 있습니다.</span></p><p><span style="font-weight: 400;">이 케이스처럼, 코드 복잡도 수치가 실제 코드가 가진 복잡도보다 높게 나오는 케이스가 있습니다. 그렇기 때문에 각 함수의 적절한 가독성을 유지하는 선에서 코드 복잡도를 개선하는 수위를 조율할 필요성이 있습니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-014a2ed elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="014a2ed" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-11e5ad5" data-id="11e5ad5" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-96e7e68 elementor-widget elementor-widget-spacer" data-id="96e7e68" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-f0eefd2 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="f0eefd2" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-c1461f4" data-id="c1461f4" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-0f38c9c elementor-widget elementor-widget-text-editor" data-id="0f38c9c" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h2><strong>마무리</strong></h2>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-c2d1f4c elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="c2d1f4c" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-6b132d4" data-id="6b132d4" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-ae63d2a elementor-widget elementor-widget-text-editor" data-id="ae63d2a" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<p><span style="font-weight: 400;">지금까지 카카오톡 Java App Server를 리팩토링 하면서 사용했던 방법과 느꼈던 점을 일반화한 예제와 함께 설명하고 공유드렸습니다. 라이브 서비스의 레거시 코드를 성능 저하 없이 리팩토링하는 작업은 항상 고민을 하게 만드는 일인 것 같습니다. 저는 앞서 설명드린바와 같이, <em><strong>&#8216;가변 Context 클래스를 신중하고 사용하기&#8217;</strong></em>,<em><strong> &#8216;고차 함수로 의존성 줄이기&#8217;</strong> </em>과정을 적용해 복잡도를 줄이고, <em><strong>CC와 NPath 수치를 측정해 코드를 단순화</strong></em> 하는 방법을 사용했습니다. 제가 설명드린 이 과정이 현업에서 리팩토링 과정에 관심이 많으신 분이나, 오래된 레거시 코드를 유지 및 보수해야 하는 분들에게 많은 도움이 되었으면 좋겠습니다. </span><span style="font-weight: 400;">감사합니다.</span></p>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
						</div>
						</div>
					</div>
				</div>
				</div>
				<div class="elementor-element elementor-element-67bc690 elementor-widget elementor-widget-post-info" data-id="67bc690" data-element_type="widget" data-widget_type="post-info.default">
				<div class="elementor-widget-container">
					<ul class="elementor-inline-items elementor-icon-list-items elementor-post-info">
								<li class="elementor-icon-list-item elementor-repeater-item-b03d463 elementor-inline-item" itemprop="about">
										<span class="elementor-icon-list-icon">
								<i aria-hidden="true" class="fas fa-tags"></i>							</span>
									<span class="elementor-icon-list-text elementor-post-info__item elementor-post-info__item--type-terms">
										<span class="elementor-post-info__terms-list">
				<a href="https://tech.kakao.com/tag/context-class/" class="elementor-post-info__terms-list-item">context-class</a>, <a href="https://tech.kakao.com/tag/cyclomatic-complexity/" class="elementor-post-info__terms-list-item">cyclomatic-complexity</a>, <a href="https://tech.kakao.com/tag/java/" class="elementor-post-info__terms-list-item">Java</a>, <a href="https://tech.kakao.com/tag/jshell/" class="elementor-post-info__terms-list-item">jshell</a>, <a href="https://tech.kakao.com/tag/npath-complexity/" class="elementor-post-info__terms-list-item">npath-complexity</a>, <a href="https://tech.kakao.com/tag/refactoring/" class="elementor-post-info__terms-list-item">refactoring</a>, <a href="https://tech.kakao.com/tag/springboot/" class="elementor-post-info__terms-list-item">SpringBoot</a>, <a href="https://tech.kakao.com/tag/unit-test/" class="elementor-post-info__terms-list-item">unit-test</a>, <a href="https://tech.kakao.com/tag/%ea%b2%b0%ed%95%a9%eb%8f%84/" class="elementor-post-info__terms-list-item">결합도</a>, <a href="https://tech.kakao.com/tag/%ea%b3%a0%ec%b0%a8%ed%95%a8%ec%88%98/" class="elementor-post-info__terms-list-item">고차함수</a>, <a href="https://tech.kakao.com/tag/%eb%a0%88%ea%b1%b0%ec%8b%9c/" class="elementor-post-info__terms-list-item">레거시</a>, <a href="https://tech.kakao.com/tag/%ec%9d%98%ec%a1%b4%ec%84%b1/" class="elementor-post-info__terms-list-item">의존성</a>, <a href="https://tech.kakao.com/tag/%ec%a2%85%ec%86%8d%ec%84%b1/" class="elementor-post-info__terms-list-item">종속성</a>, <a href="https://tech.kakao.com/tag/%ec%bd%94%eb%93%9c%eb%b3%b5%ec%9e%a1%eb%8f%84/" class="elementor-post-info__terms-list-item">코드복잡도</a>				</span>
					</span>
								</li>
				</ul>
				</div>
				</div>
				<section class="elementor-section elementor-inner-section elementor-element elementor-element-69a4092 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="69a4092" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-50 elementor-inner-column elementor-element elementor-element-54a6ddb" data-id="54a6ddb" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-34310fd elementor-widget elementor-widget-html" data-id="34310fd" data-element_type="widget" data-widget_type="html.default">
				<div class="elementor-widget-container">
			<script src="https://t1.kakaocdn.net/kakao_js_sdk/2.0.0/kakao.min.js"
  integrity="sha384-PFHeU/4gvSH8kpvhrigAPfZGBDPs372JceJq3jAXce11bVA6rMvGWzvP4fMQuBGL" crossorigin="anonymous"></script>
<script>
  Kakao.init('d58279b0803c5d1b067371afb956d61d'); // 사용하려는 앱의 JavaScript 키 입력
</script>

<a id="kakaotalk-sharing-btn" href="javascript:;">
  <img class="lazy" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201%201'%3E%3C/svg%3E" data-src="https://developers.kakao.com/assets/img/about/logos/kakaotalksharing/kakaotalk_sharing_btn_small.png"
    alt="카카오톡 공유 보내기 버튼" />
</a>

<script type="text/javascript">


//   const currentUrl = encodeURIComponent(document.URL);
  const currentUrl = document.URL;
//   console.log('DEBUG>>>', window.elementorFrontendConfig.post);
  
document.addEventListener("DOMContentLoaded", function(){

  let config = document.getElementById('elementor-frontend-js-before');
  
  let ef_str = config.innerHTML.split('var elementorFrontendConfig = ')[1].trim().slice(0,-1);
  const ef = JSON.parse(ef_str);
  
  console.log(ef);
  
  console.log(ef.post.featuredImage)
  
  Kakao.Share.createDefaultButton({
    container: '#kakaotalk-sharing-btn',
    objectType: 'feed',
    content: {
      title: 'tech.kakao.com',
      description: '#tech #blog #event #career #support',
      imageUrl:
        ef.post.featuredImage,
      link: {
        mobileWebUrl: currentUrl,
        webUrl: currentUrl,
      },
    },
    buttons: [
      {
        title: '웹으로 보기',
        link: {
          mobileWebUrl: currentUrl,
          webUrl: currentUrl,
        },
      }
    ],
  });
});
</script>		</div>
				</div>
						</div>
					</div>
		</div>
				<div class="elementor-column elementor-col-50 elementor-inner-column elementor-element elementor-element-f54bcd9" data-id="f54bcd9" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-64bb048 exclude-from-toc elementor-widget elementor-widget-facebook-button" data-id="64bb048" data-element_type="widget" data-widget_type="facebook-button.default">
				<div class="elementor-widget-container">
					<div data-layout="button_count" data-colorscheme="light" data-size="small" data-show-faces="true" class="elementor-facebook-widget fb-like" data-href="https://tech.kakao.com?p=21399" data-share="true" data-action="like"></div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<div class="elementor-element elementor-element-10310c7 elementor-widget-divider--view-line elementor-widget elementor-widget-divider" data-id="10310c7" data-element_type="widget" data-widget_type="divider.default">
				<div class="elementor-widget-container">
					<div class="elementor-divider">
			<span class="elementor-divider-separator">
						</span>
		</div>
				</div>
				</div>
				<div class="elementor-element elementor-element-5882176a exclude-from-toc elementor-widget elementor-widget-heading" data-id="5882176a" data-element_type="widget" data-widget_type="heading.default">
				<div class="elementor-widget-container">
			<h4 class="elementor-heading-title elementor-size-default">Latest Posts</h4>		</div>
				</div>
				<div class="elementor-element elementor-element-73179f98 elementor-grid-1 elementor-posts--thumbnail-left elementor-grid-tablet-1 exclude-from-toc elementor-grid-mobile-1 elementor-widget elementor-widget-posts" data-id="73179f98" data-element_type="widget" data-settings="{&quot;classic_columns&quot;:&quot;1&quot;,&quot;classic_row_gap&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;size&quot;:10,&quot;sizes&quot;:[]},&quot;classic_columns_tablet&quot;:&quot;1&quot;,&quot;classic_columns_mobile&quot;:&quot;1&quot;,&quot;classic_row_gap_tablet&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;size&quot;:&quot;&quot;,&quot;sizes&quot;:[]},&quot;classic_row_gap_mobile&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;size&quot;:&quot;&quot;,&quot;sizes&quot;:[]}}" data-widget_type="posts.classic">
				<div class="elementor-widget-container">
					<div class="elementor-posts-container elementor-posts elementor-posts--skin-classic elementor-grid">
				<article class="elementor-post elementor-grid-item post-21704 post type-post status-publish format-standard has-post-thumbnail hentry category-blog tag-programming tag-python tag-rust">
				<a class="elementor-post__thumbnail__link" href="https://tech.kakao.com/2023/03/02/python-and-rust/" >
			<div class="elementor-post__thumbnail"><img width="624" height="352" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20624%20352'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2023/03/Monosnap-2023-03-02-13-18-41-624x352.png" class="attachment-medium size-medium lazy" alt="" /></div>
		</a>
				<div class="elementor-post__text">
				<h3 class="elementor-post__title">
			<a href="https://tech.kakao.com/2023/03/02/python-and-rust/" >
				파이썬과 러스트			</a>
		</h3>
				<div class="elementor-post__meta-data">
					<span class="elementor-post-date">
			2023.03.02		</span>
				</div>
				<div class="elementor-post__excerpt">
			<p>안녕하세요, 추천팀 제이입니다. 저는 팀 내 프로젝트에 새롭게 러스트(Rust)를 도입하는 과정에서 동일한 애플리케이션을 파이썬(Python)과 러스트로 각각 개발하여, 비교 및 분석하는 과정을 경험했습니다.</p>
		</div>
				</div>
				</article>
				<article class="elementor-post elementor-grid-item post-21608 post type-post status-publish format-standard has-post-thumbnail hentry category-blog tag-cloud tag-ifkakao-2022 tag-kakao tag-kubernetes tag-kubespray tag-opensource tag-provisioning">
				<a class="elementor-post__thumbnail__link" href="https://tech.kakao.com/2023/02/10/making-of-kubernetes-provisioning-tool/" >
			<div class="elementor-post__thumbnail"><img width="622" height="352" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20622%20352'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2023/02/Provision_11_2023-02-10-042916-0000-622x352.jpg" class="attachment-medium size-medium lazy" alt="" /></div>
		</a>
				<div class="elementor-post__text">
				<h3 class="elementor-post__title">
			<a href="https://tech.kakao.com/2023/02/10/making-of-kubernetes-provisioning-tool/" >
				쿠버네티스 프로비저닝 툴과의 만남부터 헤어짐까지 . . .			</a>
		</h3>
				<div class="elementor-post__meta-data">
					<span class="elementor-post-date">
			2023.02.10		</span>
				</div>
				<div class="elementor-post__excerpt">
			<p>들어가며 안녕하세요, 카카오 클라우드 네이티브 파트에서 DKOS의 개발을 맡고 있는 우주, 후니, 존, 루키입니다. DKOS는 카카오 사내 개발자들을 위한 KaaS (Kubernetes as</p>
		</div>
				</div>
				</article>
				<article class="elementor-post elementor-grid-item post-21546 post type-post status-publish format-standard has-post-thumbnail hentry category-blog tag-835 tag-481 tag-836">
				<a class="elementor-post__thumbnail__link" href="https://tech.kakao.com/2023/02/01/university-student-mentoring-get-out-from-the-well/" >
			<div class="elementor-post__thumbnail"><img width="569" height="352" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20569%20352'%3E%3C/svg%3E" data-src="https://tech.kakao.com/wp-content/uploads/2023/01/university-student-mentoring-03-569x352.png" class="attachment-medium size-medium lazy" alt="" /></div>
		</a>
				<div class="elementor-post__text">
				<h3 class="elementor-post__title">
			<a href="https://tech.kakao.com/2023/02/01/university-student-mentoring-get-out-from-the-well/" >
				대학생 멘토링: 우물 밖 내다보기			</a>
		</h3>
				<div class="elementor-post__meta-data">
					<span class="elementor-post-date">
			2023.02.01		</span>
				</div>
				<div class="elementor-post__excerpt">
			<p>https://www.youtube.com/watch?v=LGdb4Q5t-gw 안녕하세요. 저는 카카오톡 톡플랫폼개발팀에서 백엔드 서버 개발자로 일하고 있는 nano.son(손은호)입니다. 2023년 1월 16일, 제 모교인 경북대학교의 학생들과 판교 아지트에서 멘토링을 진행했습니다.</p>
		</div>
				</div>
				</article>
				</div>


		
				</div>
				</div>
						</div>
					</div>
		</div>
				<div class="elementor-column elementor-col-33 elementor-top-column elementor-element elementor-element-68edd718 elementor-hidden-mobile" data-id="68edd718" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-5d8c877 elementor-widget elementor-widget-spacer" data-id="5d8c877" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
				<div class="elementor-element elementor-element-580a6c62 elementor-toc--minimized-on-tablet elementor-widget elementor-widget-table-of-contents" data-id="580a6c62" data-element_type="widget" data-settings="{&quot;exclude_headings_by_selector&quot;:&quot;.exclude-from-toc&quot;,&quot;marker_view&quot;:&quot;bullets&quot;,&quot;icon&quot;:{&quot;value&quot;:&quot;&quot;,&quot;library&quot;:&quot;&quot;},&quot;collapse_subitems&quot;:&quot;yes&quot;,&quot;sticky&quot;:&quot;top&quot;,&quot;headings_by_tags&quot;:[&quot;h2&quot;,&quot;h3&quot;,&quot;h4&quot;,&quot;h5&quot;,&quot;h6&quot;],&quot;minimize_box&quot;:&quot;yes&quot;,&quot;minimized_on&quot;:&quot;tablet&quot;,&quot;hierarchical_view&quot;:&quot;yes&quot;,&quot;min_height&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;size&quot;:&quot;&quot;,&quot;sizes&quot;:[]},&quot;min_height_tablet&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;size&quot;:&quot;&quot;,&quot;sizes&quot;:[]},&quot;min_height_mobile&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;size&quot;:&quot;&quot;,&quot;sizes&quot;:[]},&quot;sticky_on&quot;:[&quot;desktop&quot;,&quot;tablet&quot;,&quot;mobile&quot;],&quot;sticky_offset&quot;:0,&quot;sticky_effects_offset&quot;:0}" data-widget_type="table-of-contents.default">
				<div class="elementor-widget-container">
					<div class="elementor-toc__header">
			<h4 class="elementor-toc__header-title">
							</h4>
							<div class="elementor-toc__toggle-button elementor-toc__toggle-button--expand"><i class="fas fa-chevron-down"></i></div>
				<div class="elementor-toc__toggle-button elementor-toc__toggle-button--collapse"><i class="fas fa-chevron-up"></i></div>
					</div>
		<div class="elementor-toc__body elementor-toc__list-items--collapsible">
			<div class="elementor-toc__spinner-container">
				<i class="elementor-toc__spinner eicon-animation-spin eicon-loading" aria-hidden="true"></i>			</div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-149f816 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="149f816" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-50 elementor-top-column elementor-element elementor-element-4a9f6ba5" data-id="4a9f6ba5" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-44505fd elementor-widget elementor-widget-spacer" data-id="44505fd" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
				<div class="elementor-element elementor-element-2e71e609 elementor-post-navigation-borders-yes elementor-widget elementor-widget-post-navigation" data-id="2e71e609" data-element_type="widget" data-widget_type="post-navigation.default">
				<div class="elementor-widget-container">
					<div class="elementor-post-navigation">
			<div class="elementor-post-navigation__prev elementor-post-navigation__link">
				<a href="https://tech.kakao.com/2023/01/19/social-login/" rel="prev"><span class="post-navigation__arrow-wrapper post-navigation__arrow-prev"><i class="fa fa-angle-double-left" aria-hidden="true"></i><span class="elementor-screen-only">Prev</span></span><span class="elementor-post-navigation__link__prev"><span class="post-navigation__prev--label">이전 글</span><span class="post-navigation__prev--title">주니어 개발자의 우여곡절 소셜로그인 도입 과정</span></span></a>			</div>
							<div class="elementor-post-navigation__separator-wrapper">
					<div class="elementor-post-navigation__separator"></div>
				</div>
						<div class="elementor-post-navigation__next elementor-post-navigation__link">
				<a href="https://tech.kakao.com/2023/01/25/2023-kakao-recruitment-round-1/" rel="next"><span class="elementor-post-navigation__link__next"><span class="post-navigation__next--label">다음 글</span><span class="post-navigation__next--title">2023 카카오 신입 공채 1차 온라인 코딩 테스트 for Tech developers 문제해설</span></span><span class="post-navigation__arrow-wrapper post-navigation__arrow-next"><i class="fa fa-angle-double-right" aria-hidden="true"></i><span class="elementor-screen-only">Next</span></span></a>			</div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
				<div class="elementor-column elementor-col-50 elementor-top-column elementor-element elementor-element-798148b" data-id="798148b" data-element_type="column">
			<div class="elementor-column-wrap">
							<div class="elementor-widget-wrap">
								</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<section class="elementor-section elementor-top-section elementor-element elementor-element-cad5079 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="cad5079" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-d8d0415" data-id="d8d0415" data-element_type="column">
			<div class="elementor-column-wrap">
							<div class="elementor-widget-wrap">
								</div>
					</div>
		</div>
								</div>
					</div>
		</section>
							</div>
				</div>
				<div data-elementor-type="footer" data-elementor-id="14125" class="elementor elementor-14125 elementor-location-footer" data-elementor-settings="[]">
					<div class="elementor-section-wrap">
								<section class="elementor-section elementor-top-section elementor-element elementor-element-2305d50 elementor-section-full_width elementor-section-height-default elementor-section-height-default" data-id="2305d50" data-element_type="section" data-settings="{&quot;background_background&quot;:&quot;classic&quot;}">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-25 elementor-top-column elementor-element elementor-element-2d2fad3b" data-id="2d2fad3b" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-6a55f389 elementor-widget elementor-widget-text-editor" data-id="6a55f389" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
								<div class="elementor-text-editor elementor-clearfix">
				<h4 class="tit_g">Connect with Kakao Tech</h4>					</div>
						</div>
				</div>
						</div>
					</div>
		</div>
				<div class="elementor-column elementor-col-25 elementor-top-column elementor-element elementor-element-177f593c" data-id="177f593c" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-13f07bb8 elementor-widget elementor-widget-heading" data-id="13f07bb8" data-element_type="widget" data-widget_type="heading.default">
				<div class="elementor-widget-container">
			<h2 class="elementor-heading-title elementor-size-default">About Tech</h2>		</div>
				</div>
				<div class="elementor-element elementor-element-2c5c0689 elementor-align-left elementor-mobile-align-left elementor-icon-list--layout-traditional elementor-list-item-link-full_width elementor-widget elementor-widget-icon-list" data-id="2c5c0689" data-element_type="widget" data-widget_type="icon-list.default">
				<div class="elementor-widget-container">
					<ul class="elementor-icon-list-items">
							<li class="elementor-icon-list-item">
											<a href="https://developers.kakao.com/">

											<span class="elementor-icon-list-text">Kakao Developers</span>
											</a>
									</li>
								<li class="elementor-icon-list-item">
											<a href="https://devtalk.kakao.com/">

											<span class="elementor-icon-list-text">Kakao Dev Talk</span>
											</a>
									</li>
								<li class="elementor-icon-list-item">
											<a href="https://if.kakao.com/">

												<span class="elementor-icon-list-icon">
							<i aria-hidden="true" class="fas fa-check"></i>						</span>
										<span class="elementor-icon-list-text">if(kakao)2022</span>
											</a>
									</li>
						</ul>
				</div>
				</div>
				<div class="elementor-element elementor-element-705ecb1 elementor-widget elementor-widget-spacer" data-id="705ecb1" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
				<div class="elementor-column elementor-col-25 elementor-top-column elementor-element elementor-element-24b7ab77" data-id="24b7ab77" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-e2b291d elementor-widget elementor-widget-heading" data-id="e2b291d" data-element_type="widget" data-widget_type="heading.default">
				<div class="elementor-widget-container">
			<h2 class="elementor-heading-title elementor-size-default">About Channels</h2>		</div>
				</div>
				<div class="elementor-element elementor-element-3471c34b elementor-align-left elementor-mobile-align-left elementor-icon-list--layout-traditional elementor-list-item-link-full_width elementor-widget elementor-widget-icon-list" data-id="3471c34b" data-element_type="widget" data-widget_type="icon-list.default">
				<div class="elementor-widget-container">
					<ul class="elementor-icon-list-items">
							<li class="elementor-icon-list-item">
											<a href="https://github.com/kakao">

											<span class="elementor-icon-list-text">GitHub</span>
											</a>
									</li>
								<li class="elementor-icon-list-item">
											<a href="https://tv.kakao.com/channel/3693125/cliplink/423963887?metaObjectType=Channel">

											<span class="elementor-icon-list-text">Kakao TV</span>
											</a>
									</li>
								<li class="elementor-icon-list-item">
											<a href="https://www.facebook.com/kakaotech">

												<span class="elementor-icon-list-icon">
							<i aria-hidden="true" class="fas fa-check"></i>						</span>
										<span class="elementor-icon-list-text">Facebook</span>
											</a>
									</li>
						</ul>
				</div>
				</div>
				<div class="elementor-element elementor-element-9b43eba elementor-widget elementor-widget-spacer" data-id="9b43eba" data-element_type="widget" data-widget_type="spacer.default">
				<div class="elementor-widget-container">
					<div class="elementor-spacer">
			<div class="elementor-spacer-inner"></div>
		</div>
				</div>
				</div>
						</div>
					</div>
		</div>
				<div class="elementor-column elementor-col-25 elementor-top-column elementor-element elementor-element-1bc7e691" data-id="1bc7e691" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-56bd13cb elementor-widget elementor-widget-heading" data-id="56bd13cb" data-element_type="widget" data-widget_type="heading.default">
				<div class="elementor-widget-container">
			<h2 class="elementor-heading-title elementor-size-default">Family Sites</h2>		</div>
				</div>
				<div class="elementor-element elementor-element-68b38b99 elementor-align-left elementor-icon-list--layout-traditional elementor-list-item-link-full_width elementor-widget elementor-widget-icon-list" data-id="68b38b99" data-element_type="widget" data-widget_type="icon-list.default">
				<div class="elementor-widget-container">
					<ul class="elementor-icon-list-items">
							<li class="elementor-icon-list-item">
											<a href="https://www.kakaocorp.com/page/">

											<span class="elementor-icon-list-text">Kakao Corp</span>
											</a>
									</li>
								<li class="elementor-icon-list-item">
											<a href="https://careers.kakao.com/index">

											<span class="elementor-icon-list-text">Kakao Career</span>
											</a>
									</li>
								<li class="elementor-icon-list-item">
											<a href="https://www.kakao.com/ko/privacy">

											<span class="elementor-icon-list-text">Kakao Privacy</span>
											</a>
									</li>
						</ul>
				</div>
				</div>
						</div>
					</div>
		</div>
								</div>
					</div>
		</section>
				<footer class="elementor-section elementor-top-section elementor-element elementor-element-238b0f63 elementor-section-height-min-height elementor-section-content-middle elementor-section-full_width elementor-section-height-default elementor-section-items-middle" data-id="238b0f63" data-element_type="section" data-settings="{&quot;background_background&quot;:&quot;classic&quot;}">
						<div class="elementor-container elementor-column-gap-default">
							<div class="elementor-row">
					<div class="elementor-column elementor-col-50 elementor-top-column elementor-element elementor-element-6daca4ab" data-id="6daca4ab" data-element_type="column">
			<div class="elementor-column-wrap elementor-element-populated">
							<div class="elementor-widget-wrap">
						<div class="elementor-element elementor-element-16a4876e elementor-widget elementor-widget-heading" data-id="16a4876e" data-element_type="widget" data-widget_type="heading.default">
				<div class="elementor-widget-container">
			<h3 class="elementor-heading-title elementor-size-default">Copyright © Kakao Corp. All rights reserved.</h3>		</div>
				</div>
						</div>
					</div>
		</div>
				<div class="elementor-column elementor-col-50 elementor-top-column elementor-element elementor-element-a38f34f" data-id="a38f34f" data-element_type="column">
			<div class="elementor-column-wrap">
							<div class="elementor-widget-wrap">
								</div>
					</div>
		</div>
								</div>
					</div>
		</footer>
							</div>
				</div>
		
<link rel='stylesheet' id='elementor-icons-fa-regular-css'  href='https://tech.kakao.com/wp-content/plugins/elementor/assets/lib/font-awesome/css/regular.min.css?ver=5.15.3' type='text/css' media='all' />
<link rel='stylesheet' id='prismjs_style-css'  href='https://tech.kakao.com/wp-content/plugins/elementor-pro/assets/css/modules/code-highlight.min.css?ver=1.23.0' type='text/css' media='' />
<link rel='stylesheet' id='e-animations-css'  href='https://tech.kakao.com/wp-content/plugins/elementor/assets/lib/animations/animations.min.css?ver=3.5.5' type='text/css' media='all' />
<script type='text/javascript' id='ppress-frontend-script-js-extra'>
/* <![CDATA[ */
var pp_ajax_form = {"ajaxurl":"https:\/\/tech.kakao.com\/wp-admin\/admin-ajax.php","confirm_delete":"Are you sure?","deleting_text":"Deleting...","deleting_error":"An error occurred. Please try again.","nonce":"c7b8c5bded","disable_ajax_form":"false"};
/* ]]> */
</script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/wp-user-avatar/assets/js/frontend.min.js?ver=3.2.8' id='ppress-frontend-script-js'></script>
<script type='text/javascript' id='eael-general-js-extra'>
/* <![CDATA[ */
var localize = {"ajaxurl":"https:\/\/tech.kakao.com\/wp-admin\/admin-ajax.php","nonce":"7799b6d084","i18n":{"added":"Added ","compare":"Compare","loading":"Loading..."},"page_permalink":"https:\/\/tech.kakao.com\/2023\/01\/19\/kakaotalk-java-app-server-refactoring\/","cart_redirectition":"no","cart_page_url":"","el_breakpoints":{"mobile":{"label":"\ubaa8\ubc14\uc77c","value":767,"default_value":767,"direction":"max","is_enabled":true},"mobile_extra":{"label":"Mobile Extra","value":880,"default_value":880,"direction":"max","is_enabled":false},"tablet":{"label":"\ud0dc\ube14\ub9bf","value":1024,"default_value":1024,"direction":"max","is_enabled":true},"tablet_extra":{"label":"Tablet Extra","value":1200,"default_value":1200,"direction":"max","is_enabled":false},"laptop":{"label":"Laptop","value":1366,"default_value":1366,"direction":"max","is_enabled":false},"widescreen":{"label":"Widescreen","value":2400,"default_value":2400,"direction":"min","is_enabled":false}}};
/* ]]> */
</script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/essential-addons-for-elementor-lite/assets/front-end/js/view/general.min.js?ver=5.5.0' id='eael-general-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/elementor-pro/assets/lib/smartmenus/jquery.smartmenus.min.js?ver=1.0.1' id='smartmenus-js'></script>
<script type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/components/prism-core.min.js?ver=1.23.0' id='prismjs_core-js'></script>
<script type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/plugins/autoloader/prism-autoloader.min.js?ver=1.23.0' id='prismjs_loader-js'></script>
<script type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/plugins/normalize-whitespace/prism-normalize-whitespace.min.js?ver=1.23.0' id='prismjs_normalize-js'></script>
<script type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/plugins/line-numbers/prism-line-numbers.min.js?ver=1.23.0' id='prismjs_line_numbers-js'></script>
<script type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/plugins/toolbar/prism-toolbar.min.js?ver=1.23.0' id='prismjs_toolbar-js'></script>
<script type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js?ver=1.23.0' id='prismjs_copy_to_clipboard-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-includes/js/imagesloaded.min.js?ver=4.1.4' id='imagesloaded-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/elementor-pro/assets/js/webpack-pro.runtime.min.js?ver=3.6.2' id='elementor-pro-webpack-runtime-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/elementor/assets/js/webpack.runtime.min.js?ver=3.5.5' id='elementor-webpack-runtime-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/elementor/assets/js/frontend-modules.min.js?ver=3.5.5' id='elementor-frontend-modules-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-includes/js/dist/vendor/regenerator-runtime.min.js?ver=0.13.9' id='regenerator-runtime-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-includes/js/dist/vendor/wp-polyfill.min.js?ver=3.15.0' id='wp-polyfill-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-includes/js/dist/hooks.min.js?ver=1e58c8c5a32b2e97491080c5b10dc71c' id='wp-hooks-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-includes/js/dist/i18n.min.js?ver=30fcecb428a0e8383d3776bcdd3a7834' id='wp-i18n-js'></script>
<script type='text/javascript' id='wp-i18n-js-after'>
wp.i18n.setLocaleData( { 'text direction\u0004ltr': [ 'ltr' ] } );
</script>
<script type='text/javascript' id='elementor-pro-frontend-js-translations'>
( function( domain, translations ) {
	var localeData = translations.locale_data[ domain ] || translations.locale_data.messages;
	localeData[""].domain = domain;
	wp.i18n.setLocaleData( localeData, domain );
} )( "elementor-pro", { "locale_data": { "messages": { "": {} } } } );
</script>
<script type='text/javascript' id='elementor-pro-frontend-js-before'>
var ElementorProFrontendConfig = {"ajaxurl":"https:\/\/tech.kakao.com\/wp-admin\/admin-ajax.php","nonce":"b3df245ef4","urls":{"assets":"https:\/\/tech.kakao.com\/wp-content\/plugins\/elementor-pro\/assets\/","rest":"https:\/\/tech.kakao.com\/wp-json\/"},"shareButtonsNetworks":{"facebook":{"title":"Facebook","has_counter":true},"twitter":{"title":"Twitter"},"linkedin":{"title":"LinkedIn","has_counter":true},"pinterest":{"title":"Pinterest","has_counter":true},"reddit":{"title":"Reddit","has_counter":true},"vk":{"title":"VK","has_counter":true},"odnoklassniki":{"title":"OK","has_counter":true},"tumblr":{"title":"Tumblr"},"digg":{"title":"Digg"},"skype":{"title":"Skype"},"stumbleupon":{"title":"StumbleUpon","has_counter":true},"mix":{"title":"Mix"},"telegram":{"title":"Telegram"},"pocket":{"title":"Pocket","has_counter":true},"xing":{"title":"XING","has_counter":true},"whatsapp":{"title":"WhatsApp"},"email":{"title":"Email"},"print":{"title":"Print"}},"facebook_sdk":{"lang":"ko_KR","app_id":""},"lottie":{"defaultAnimationUrl":"https:\/\/tech.kakao.com\/wp-content\/plugins\/elementor-pro\/modules\/lottie\/assets\/animations\/default.json"}};
</script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/elementor-pro/assets/js/frontend.min.js?ver=3.6.2' id='elementor-pro-frontend-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/elementor/assets/lib/waypoints/waypoints.min.js?ver=4.0.2' id='elementor-waypoints-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-includes/js/jquery/ui/core.min.js?ver=1.13.1' id='jquery-ui-core-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/elementor/assets/lib/swiper/swiper.min.js?ver=5.3.6' id='swiper-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/elementor/assets/lib/share-link/share-link.min.js?ver=3.5.5' id='share-link-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/elementor/assets/lib/dialog/dialog.min.js?ver=4.9.0' id='elementor-dialog-js'></script>
<script type='text/javascript' id='elementor-frontend-js-before'>
var elementorFrontendConfig = {"environmentMode":{"edit":false,"wpPreview":false,"isScriptDebug":false},"i18n":{"shareOnFacebook":"\ud398\uc774\uc2a4\ubd81 \uacf5\uc720","shareOnTwitter":"\ud2b8\uc704\ud130 \uacf5\uc720","pinIt":"\uace0\uc815\ud558\uae30","download":"Download","downloadImage":"\uc774\ubbf8\uc9c0 \ub2e4\uc6b4\ub85c\ub4dc","fullscreen":"\uc804\uccb4\ud654\uba74","zoom":"\uc90c","share":"\uacf5\uc720","playVideo":"\ube44\ub514\uc624 \uc7ac\uc0dd","previous":"\uc774\uc804","next":"\ub2e4\uc74c","close":"\ub2eb\uae30"},"is_rtl":false,"breakpoints":{"xs":0,"sm":480,"md":768,"lg":1025,"xl":1440,"xxl":1600},"responsive":{"breakpoints":{"mobile":{"label":"\ubaa8\ubc14\uc77c","value":767,"default_value":767,"direction":"max","is_enabled":true},"mobile_extra":{"label":"Mobile Extra","value":880,"default_value":880,"direction":"max","is_enabled":false},"tablet":{"label":"\ud0dc\ube14\ub9bf","value":1024,"default_value":1024,"direction":"max","is_enabled":true},"tablet_extra":{"label":"Tablet Extra","value":1200,"default_value":1200,"direction":"max","is_enabled":false},"laptop":{"label":"Laptop","value":1366,"default_value":1366,"direction":"max","is_enabled":false},"widescreen":{"label":"Widescreen","value":2400,"default_value":2400,"direction":"min","is_enabled":false}}},"version":"3.5.5","is_static":false,"experimentalFeatures":{"e_import_export":true,"e_hidden_wordpress_widgets":true,"theme_builder_v2":true,"landing-pages":true,"elements-color-picker":true,"favorite-widgets":true,"admin-top-bar":true,"page-transitions":true,"form-submissions":true,"e_scroll_snap":true},"urls":{"assets":"https:\/\/tech.kakao.com\/wp-content\/plugins\/elementor\/assets\/"},"settings":{"page":[],"editorPreferences":[]},"kit":{"active_breakpoints":["viewport_mobile","viewport_tablet"],"global_image_lightbox":"yes","lightbox_enable_counter":"yes","lightbox_enable_fullscreen":"yes","lightbox_enable_zoom":"yes","lightbox_enable_share":"yes","lightbox_title_src":"title","lightbox_description_src":"description"},"post":{"id":21399,"title":"%EC%B9%B4%EC%B9%B4%EC%98%A4%ED%86%A1%20Java%20App%20Server%20Refactoring%20%ED%9B%84%EA%B8%B0%20%E2%80%93%20tech.kakao.com","excerpt":"","featuredImage":"https:\/\/tech.kakao.com\/wp-content\/uploads\/2023\/01\/Soo_12023-01-19-052621-0000-499x333.jpg"}};
</script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/elementor/assets/js/frontend.min.js?ver=3.5.5' id='elementor-frontend-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/elementor-pro/assets/js/preloaded-elements-handlers.min.js?ver=3.6.2' id='pro-preloaded-elements-handlers-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/elementor/assets/js/preloaded-modules.min.js?ver=3.5.5' id='preloaded-modules-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/elementor-pro/assets/lib/sticky/jquery.sticky.min.js?ver=3.6.2' id='e-sticky-js'></script>
<script type='text/javascript' src='https://tech.kakao.com/wp-includes/js/underscore.min.js?ver=1.13.1' id='underscore-js'></script>
<script type='text/javascript' id='wp-util-js-extra'>
/* <![CDATA[ */
var _wpUtilSettings = {"ajax":{"url":"\/wp-admin\/admin-ajax.php"}};
/* ]]> */
</script>
<script type='text/javascript' src='https://tech.kakao.com/wp-includes/js/wp-util.min.js?ver=5.9.2' id='wp-util-js'></script>
<script type='text/javascript' id='wpforms-elementor-js-extra'>
/* <![CDATA[ */
var wpformsElementorVars = {"captcha_provider":"recaptcha","recaptcha_type":"v2"};
/* ]]> */
</script>
<script type='text/javascript' src='https://tech.kakao.com/wp-content/plugins/wpforms-lite/assets/js/integrations/elementor/frontend.min.js?ver=1.7.8' id='wpforms-elementor-js'></script>

<script>window.w3tc_lazyload=1,window.lazyLoadOptions={elements_selector:".lazy",callback_loaded:function(t){var e;try{e=new CustomEvent("w3tc_lazyload_loaded",{detail:{e:t}})}catch(a){(e=document.createEvent("CustomEvent")).initCustomEvent("w3tc_lazyload_loaded",!1,!1,{e:t})}window.dispatchEvent(e)}}</script><script async src="https://tech.kakao.com/wp-content/plugins/w3-total-cache/pub/js/lazyload.min.js"></script></body>
</html>

<!--
Performance optimized by W3 Total Cache. Learn more: https://www.boldgrid.com/w3-total-cache/

Lazy Loading
Database Caching using disk (Request-wide modification query)

Served from: tech.kakao.com @ 2023-03-14 22:11:43 by W3 Total Cache
-->